{
  "_id": "63d8191d99d6ef6162a28b3f",
  "name": "parseNetmikoSendCommandforGitHub (1)",
  "description": "Parses the Netmiko return and creates an array of individual files ready to github",
  "incoming": [
    {
      "$id": "netmikoResult",
      "type": "object",
      "properties": {
        "icode": {
          "type": "string",
          "examples": [
            "AD%2E200"
          ]
        },
        "response": {
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "examples": [
                "172%2E20%2E103%2E2"
              ]
            },
            "commands": {
              "type": "array",
              "items": {
                "type": "string",
                "examples": [
                  "show interfaces"
                ]
              },
              "$id": "commands"
            },
            "status": {
              "type": "string",
              "examples": [
                "SUCCESS"
              ]
            },
            "response": {
              "type": "object",
              "required": []
            }
          },
          "required": []
        },
        "headers": {
          "type": "object",
          "properties": {
            "server": {
              "type": "string",
              "examples": [
                "gunicorn/20%2E0%2E4"
              ]
            },
            "date": {
              "type": "string",
              "examples": [
                "Fri, 27 Jan 2023 04:19:21 GMT"
              ]
            },
            "connection": {
              "type": "string",
              "examples": [
                "close"
              ]
            },
            "content-type": {
              "type": "string",
              "examples": [
                "application/json;"
              ]
            },
            "content-length": {
              "type": "string",
              "examples": [
                "10374"
              ]
            },
            "last-modified": {
              "type": "string",
              "examples": [
                "2023-01-26 23:19:21%2E354141"
              ]
            },
            "cache-control": {
              "type": "string",
              "examples": [
                "no-store, no-cache, must-revalidate, post-check=0, pre-check=0, max-age=0"
              ]
            },
            "pragma": {
              "type": "string",
              "examples": [
                "no-cache"
              ]
            },
            "expires": {
              "type": "string",
              "examples": [
                "-1"
              ]
            },
            "x-frame-options": {
              "type": "string",
              "examples": [
                "DENY"
              ]
            },
            "x-xss-protection": {
              "type": "string",
              "examples": [
                "1"
              ]
            },
            "x-content-type-options": {
              "type": "string",
              "examples": [
                "nosniff"
              ]
            }
          },
          "required": []
        },
        "metrics": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "examples": [
                200
              ]
            },
            "timeouts": {
              "type": "integer",
              "examples": [
                0
              ]
            },
            "redirects": {
              "type": "integer",
              "examples": [
                0
              ]
            },
            "retries": {
              "type": "integer",
              "examples": [
                0
              ]
            },
            "tripTime": {
              "type": "integer",
              "examples": [
                4967
              ]
            },
            "isThrottling": {
              "type": "boolean",
              "examples": [
                true,
                false
              ]
            },
            "capabilityTime": {
              "type": "string",
              "examples": [
                "5129ms"
              ]
            }
          },
          "required": []
        }
      },
      "required": []
    },
    {
      "$id": "filePath",
      "type": "string"
    }
  ],
  "outgoing": [
    {
      "$id": "netMikoResultsArray_copy",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "examples": [
              "update"
            ]
          },
          "file_path": {
            "type": "string",
            "examples": [
              "README%2Emd"
            ]
          },
          "content": {
            "type": "string",
            "examples": [
              "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n\n<!-- Update the below line with your artifact name -->\n# Push Bundles to GitHub\n\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n<!-- Write a few sentences about the artifact and explain the use case(s) -->\n<!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments -->\n<!-- (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E -->\n\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitHub -->\n<!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW -->\n<!-- <!--  -->\nThe **Push Bundles to GitHub** pre-built takes an Admin Essentials installed pre-built and creates a new project in GitHub using the up-to-date pre-built bundle%2E\nIf the project and branch already exists in the specified GitHub group, it will create a new branch and open a pull request in GitHub with any changes made in the lab environment%2E \n\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/push-bundle-to-github/-/raw/release/2021.2/images/workflow.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n<!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->\n\n<!-- ADD ESTIMATED RUN TIME HERE -->\n<!-- e%2Eg%2E Estimated Run Time: 34 min%2E -->\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n<!-- Include any other required apps or adapters in this list -->\n<!-- Ex%2E: EC2 Adapter -->\n* Itential Automation Platform\n  * `^2021%2E2`\n* App-Artifacts\n  * `6%2E1%2E16-2021%2E1%2E2`\n* [GitHub Adapter](https://gitlab%2Ecom/itentialopensource/adapters/devops-netops/adapter-github)\n\n\n## Requirements\n\nThis artifact requires the following:\n\n<!-- Unordered list highlighting the requirements of the artifact -->\n<!-- EXAMPLE -->\n<!-- * cisco ios device -->\n* Artifact installed in Admin Essentials\n* GitHub Organization Name\n\n## Features\n\nThe main benefits and features of the artifact are outlined below%2E\n\n<!-- Unordered list highlighting the most exciting features of the artifact -->\n<!-- EXAMPLE -->\n<!-- * Automatically checks for device type -->\n<!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n* Automatically create repo and branch%2E\n* Automatically create Pull Request when repo and branch exist%2E\n* Allows user to perform rediscovery of an installed artifact (where new components were added)%2E\n* Adds the current IAP user whoami username to the Pull Request description for the Pull Request reviewer%2E\n* Auto artifact%2Ejson generator script\n* Helps to handle \"Artifact-As-Code\" with version control, PR, and code-promotion procedures%2E\n\n\n<!-- ## Future Enhancements -->\n\n<!-- OPTIONAL - Mention if the artifact will be enhanced with additional features on the road map -->\n<!-- Ex%2E: This artifact would support Cisco XR and F5 devices -->\n\n## How to Install\n\nTo install this pre-built:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section%2E \n* The artifact can be installed from within App-Admin_Essential%2E Simply search for the name of your desired artifact and click the install button (as shown below)%2E\n\n<!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED ARTIFACT -->\n<!-- <!-- -->\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/push-bundle-to-github/-/raw/release/2021.2/images/install.png\" alt=\"install\" width=\"600px\">\n</td></tr></table>\n\n<!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED ARTIFACT -->\n\n<!-- OPTIONAL - Explain if external components are required outside of IAP -->\n<!-- Ex%2E: The Ansible roles required for this artifact can be found in the repository located at https://GitHub%2Ecom/itentialopensource/pre-built-automations/hello-world -->\n\n## How to Run\n\nUse the following to run the artifact:\n\n<!-- Explain the main entrypoint(s) for this artifact: Automation Catalog item, Workflow, Postman, etc%2E -->\n\n1%2E In Automation Catalog, find the **Push Bundles to GitHub** entry%2E\n2%2E Fill out the form (as shown below) with the appropriate values%2E\n3%2E Continue with all manual tasks in the workflow%2E\n\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/push-bundle-to-github/-/raw/release/2021.2/images/form.png\" alt=\"form\" width=\"600px\">\n</td></tr></table>\n\nForm Inputs (look for above screenshot for example inputs)\n1%2E Adapter Name - Adapter name configured with user token\n2%2E GitHub Project Name - Project name in GitHub to Update/Create\n3%2E GitHub Organization Name - GitHub organization name to push repository\n4%2E Re-discover - Perform re-discover\n5%2E Artifact - name of the installed bundle to push onto remote repo\n6%2E PR Type - Type of PR (patch/minor/major)\n7%2E Commit Message -  Commit message to add for commit tasks\n8%2E Target Branch - Traget branch to set for PR\n"
            ]
          }
        },
        "required": []
      }
    }
  ],
  "steps": [
    {
      "id": 7,
      "type": "method",
      "library": "Array",
      "method": "map",
      "args": [
        null,
        "ƒ_map_5",
        null,
        null,
        null
      ],
      "view": {
        "row": 1,
        "col": 1
      }
    },
    {
      "id": 8,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "netmikoResult",
        "ptr": "/response/commands"
      },
      "to": {
        "location": "method",
        "name": 7,
        "ptr": "/args/0/value"
      }
    },
    {
      "id": 9,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "netmikoResult",
        "ptr": "/response/response"
      },
      "to": {
        "location": "method",
        "name": 7,
        "ptr": "/args/2/value"
      }
    },
    {
      "id": 10,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "filePath",
        "ptr": ""
      },
      "to": {
        "location": "method",
        "name": 7,
        "ptr": "/args/3/value"
      }
    },
    {
      "id": 11,
      "type": "assign",
      "from": {
        "location": "method",
        "name": 7,
        "ptr": "/return"
      },
      "to": {
        "location": "outgoing",
        "name": "netMikoResultsArray_copy",
        "ptr": ""
      }
    },
    {
      "id": 12,
      "type": "assign",
      "from": {
        "location": "incoming",
        "name": "netmikoResult",
        "ptr": "/response/host"
      },
      "to": {
        "location": "method",
        "name": 7,
        "ptr": "/args/4/value"
      }
    }
  ],
  "functions": [
    {
      "incoming": [
        {
          "type": "string",
          "examples": [
            "show interfaces"
          ],
          "$id": "currentValue"
        },
        {
          "title": "index",
          "type": "number",
          "optional": true,
          "$id": "index"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "examples": [
              "show interfaces"
            ]
          },
          "$id": "array",
          "optional": true
        },
        {
          "$id": "thisArg",
          "type": "object",
          "properties": {
            "0_response": {
              "type": "object",
              "required": []
            },
            "1_filePath": {
              "$id": "filePath",
              "type": "string"
            },
            "2_host": {
              "type": "string",
              "examples": [
                "172%2E20%2E103%2E2"
              ]
            }
          },
          "isContext": true,
          "isIndexed": true
        }
      ],
      "outgoing": [
        {
          "title": "newValue",
          "type": [
            "array",
            "boolean",
            "number",
            "integer",
            "string",
            "object",
            "null"
          ],
          "editable": true,
          "$id": "newValue"
        }
      ],
      "functions": [],
      "name": "ƒ_map_5",
      "steps": [
        {
          "id": 1,
          "type": "method",
          "library": "String",
          "method": "concat",
          "args": [
            null,
            "/",
            null,
            "/",
            null,
            ".json"
          ],
          "view": {
            "row": 3,
            "col": 1
          }
        },
        {
          "id": 2,
          "type": "assign",
          "from": {
            "location": "incoming",
            "name": "thisArg",
            "ptr": "/1_filePath"
          },
          "to": {
            "location": "method",
            "name": 1,
            "ptr": "/args/0/value"
          }
        },
        {
          "id": 4,
          "type": "method",
          "library": "Object",
          "method": "getProperty",
          "args": [
            null,
            null
          ],
          "view": {
            "row": 1,
            "col": 1
          }
        },
        {
          "id": 5,
          "type": "method",
          "library": "JSON",
          "method": "stringify",
          "args": [
            null,
            null,
            null
          ],
          "view": {
            "row": 1,
            "col": 2
          }
        },
        {
          "id": 6,
          "type": "assign",
          "from": {
            "location": "incoming",
            "name": "currentValue",
            "ptr": ""
          },
          "to": {
            "location": "method",
            "name": 4,
            "ptr": "/args/1/value"
          }
        },
        {
          "id": 7,
          "type": "assign",
          "from": {
            "location": "incoming",
            "name": "thisArg",
            "ptr": "/0_response"
          },
          "to": {
            "location": "method",
            "name": 4,
            "ptr": "/args/0/value"
          }
        },
        {
          "id": 8,
          "type": "assign",
          "from": {
            "location": "method",
            "name": 4,
            "ptr": "/return"
          },
          "to": {
            "location": "method",
            "name": 5,
            "ptr": "/args/0/value"
          }
        },
        {
          "id": 9,
          "type": "method",
          "library": "Object",
          "method": "setProperty",
          "args": [
            null,
            "content",
            null
          ],
          "view": {
            "row": 1,
            "col": 3
          }
        },
        {
          "id": 10,
          "type": "method",
          "library": "Object",
          "method": "setProperty",
          "args": [
            null,
            "action",
            "create"
          ],
          "view": {
            "row": 2,
            "col": 3
          }
        },
        {
          "id": 11,
          "type": "method",
          "library": "Object",
          "method": "setProperty",
          "args": [
            {},
            "file_path",
            null
          ],
          "view": {
            "row": 3,
            "col": 3
          }
        },
        {
          "id": 12,
          "type": "assign",
          "from": {
            "location": "method",
            "name": 11,
            "ptr": "/return"
          },
          "to": {
            "location": "method",
            "name": 10,
            "ptr": "/args/0/value"
          }
        },
        {
          "id": 13,
          "type": "assign",
          "from": {
            "location": "method",
            "name": 10,
            "ptr": "/return"
          },
          "to": {
            "location": "method",
            "name": 9,
            "ptr": "/args/0/value"
          }
        },
        {
          "id": 14,
          "type": "assign",
          "from": {
            "location": "method",
            "name": 5,
            "ptr": "/return"
          },
          "to": {
            "location": "method",
            "name": 9,
            "ptr": "/args/2/value"
          }
        },
        {
          "id": 15,
          "type": "assign",
          "from": {
            "location": "method",
            "name": 1,
            "ptr": "/return"
          },
          "to": {
            "location": "method",
            "name": 11,
            "ptr": "/args/2/value"
          }
        },
        {
          "id": 18,
          "type": "assign",
          "from": {
            "location": "method",
            "name": 9,
            "ptr": "/return"
          },
          "to": {
            "location": "outgoing",
            "name": "newValue",
            "ptr": ""
          }
        },
        {
          "id": 19,
          "type": "assign",
          "from": {
            "location": "incoming",
            "name": "thisArg",
            "ptr": "/2_host"
          },
          "to": {
            "location": "method",
            "name": 1,
            "ptr": "/args/2/value"
          }
        },
        {
          "id": 20,
          "type": "assign",
          "from": {
            "location": "incoming",
            "name": "currentValue",
            "ptr": ""
          },
          "to": {
            "location": "method",
            "name": 1,
            "ptr": "/args/4/value"
          }
        }
      ],
      "view": {
        "col": 3,
        "row": 6
      },
      "id": "ƒ_map_5",
      "comments": []
    }
  ],
  "comments": [],
  "view": {
    "col": 2,
    "row": 5
  },
  "created": "2023-02-02T21:16:19.498Z",
  "createdBy": {
    "_id": "6192b69c3adad129b3c1881c",
    "provenance": "Itential-Okta",
    "username": "nick.andreano@itential.com"
  },
  "lastUpdated": "2023-02-27T19:20:21.007Z",
  "lastUpdatedBy": {
    "_id": "6192b69c3adad129b3c1881c",
    "provenance": "Itential-Okta",
    "username": "nick.andreano@itential.com"
  },
  "version": "3.17.7-2021.1.22",
  "tags": []
}