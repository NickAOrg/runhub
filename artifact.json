{
  "metadata": {
    "name": "@capitalone/run-regional-hub",
    "version": "0.0.1",
    "description": "Run Regional Hub",
    "license": "Apache-2.0",
    "repository": {
      "type": "gitlab",
      "hostname": "gitlab.com",
      "path": "itentialopensource/pre-built-automations"
    },
    "keywords": [
      "Itential",
      "IAP",
      "artifacts"
    ],
    "author": "Itential Automation Platform",
    "IAPDependencies": {
      "@itential/app-operations_manager": "",
      "@itential/app-json_forms": "",
      "@itential/app-workflow_engine": "",
      "@itentialopensource/adapter-github": "",
      "@itential/adapter-automation_gateway": ""
    }
  },
  "manifest": {
    "bundleName": "@capitalone/run-regional-hub",
    "fingerprint": "64063bc3faf785276848b140",
    "createdEpoch": "1678130115338",
    "artifacts": [
      {
        "id": "Run Regional Hub",
        "name": "Run Regional Hub",
        "type": "automation",
        "location": "/bundles/automations/Run Regional Hub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Run Regional Hub",
        "name": "Run Regional Hub",
        "type": "workflow",
        "location": "/bundles/workflows/Run Regional Hub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Get Region File(s) from GitHub",
        "name": "Get Region File(s) from GitHub",
        "type": "workflow",
        "location": "/bundles/workflows/Get Region File(s) from GitHub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Run Regional Hub File",
        "name": "Run Regional Hub File",
        "type": "workflow",
        "location": "/bundles/workflows/Run Regional Hub File.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Get File - GitHub",
        "name": "Get File - GitHub",
        "type": "workflow",
        "location": "/bundles/workflows/Get File - GitHub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "runCommonDevicesCommandSets",
        "name": "runCommonDevicesCommandSets",
        "type": "workflow",
        "location": "/bundles/workflows/runCommonDevicesCommandSets.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "runUniqueDevicesCommands",
        "name": "runUniqueDevicesCommands",
        "type": "workflow",
        "location": "/bundles/workflows/runUniqueDevicesCommands.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "runCommandArrayonDevice",
        "name": "runCommandArrayonDevice",
        "type": "workflow",
        "location": "/bundles/workflows/runCommandArrayonDevice.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "RunCommandsandPushToGitHub",
        "name": "RunCommandsandPushToGitHub",
        "type": "workflow",
        "location": "/bundles/workflows/RunCommandsandPushToGitHub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "RunNetmikoCommands",
        "name": "RunNetmikoCommands",
        "type": "workflow",
        "location": "/bundles/workflows/RunNetmikoCommands.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Push Files to GitHub",
        "name": "Push Files to GitHub",
        "type": "workflow",
        "location": "/bundles/workflows/Push Files to GitHub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Run Regional Hub",
        "name": "Run Regional Hub",
        "type": "json-forms",
        "location": "/bundles/json_forms/Run Regional Hub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63e15fbf6cdd285d5d39a935",
        "name": "buildRunRegionalHubJobDescription",
        "type": "transformation",
        "location": "/bundles/transformations/buildRunRegionalHubJobDescription.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63f3d4f859b8702a8c6b78ce",
        "name": "GetChildJobLoopReports",
        "type": "transformation",
        "location": "/bundles/transformations/GetChildJobLoopReports.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63daa8ff99d6ef6162a28b49",
        "name": "runRegionalHubFormData",
        "type": "transformation",
        "location": "/bundles/transformations/runRegionalHubFormData.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63f3cc3a59b8702a8c6b78cd",
        "name": "Run Regional Hub File (1)",
        "type": "transformation",
        "location": "/bundles/transformations/Run Regional Hub File (1).json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63dadc5099d6ef6162a28b50",
        "name": "childJobLoopCheck",
        "type": "transformation",
        "location": "/bundles/transformations/childJobLoopCheck.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63f3bc1e59b8702a8c6b78c8",
        "name": "GetRegionDir",
        "type": "transformation",
        "location": "/bundles/transformations/GetRegionDir.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63f3bcdc59b8702a8c6b78c9",
        "name": "GetGitHubFiles",
        "type": "transformation",
        "location": "/bundles/transformations/GetGitHubFiles.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63f3bde559b8702a8c6b78ca",
        "name": "Get File - GitHub",
        "type": "transformation",
        "location": "/bundles/transformations/Get File - GitHub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63f3c1df59b8702a8c6b78cb",
        "name": "GetFileContentsFromChildLoop ",
        "type": "transformation",
        "location": "/bundles/transformations/GetFileContentsFromChildLoop .json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63dd5199be82950afcced645",
        "name": "UpdateResultsObject",
        "type": "transformation",
        "location": "/bundles/transformations/UpdateResultsObject.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63db182799d6ef6162a28b54",
        "name": "runCommonDevicesCommandSets",
        "type": "transformation",
        "location": "/bundles/transformations/runCommonDevicesCommandSets.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63dab21199d6ef6162a28b4a",
        "name": "ParseRegionalHubData",
        "type": "transformation",
        "location": "/bundles/transformations/ParseRegionalHubData.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63db221a99d6ef6162a28b57",
        "name": "runUniqueDevicesCommands",
        "type": "transformation",
        "location": "/bundles/transformations/runUniqueDevicesCommands.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63e0489fbe82950afcced649",
        "name": "CreateResultsReport",
        "type": "transformation",
        "location": "/bundles/transformations/CreateResultsReport.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63dabf4a99d6ef6162a28b4b",
        "name": "ParseCommonDevicesCommandSets",
        "type": "transformation",
        "location": "/bundles/transformations/ParseCommonDevicesCommandSets.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63db112d99d6ef6162a28b52",
        "name": "runCommandArrayonDevice (1)",
        "type": "transformation",
        "location": "/bundles/transformations/runCommandArrayonDevice (1).json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63db1e9599d6ef6162a28b55",
        "name": "parseUniqueDevicesCommands",
        "type": "transformation",
        "location": "/bundles/transformations/parseUniqueDevicesCommands.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63dad6d999d6ef6162a28b4f",
        "name": "RunCommandsandPushToGitHub (1)",
        "type": "transformation",
        "location": "/bundles/transformations/RunCommandsandPushToGitHub (1).json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63dacd5b99d6ef6162a28b4e",
        "name": "runCommandArrayonDeviceInput",
        "type": "transformation",
        "location": "/bundles/transformations/runCommandArrayonDeviceInput.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63dc32dcbe82950afcced644",
        "name": "buildJobDescription",
        "type": "transformation",
        "location": "/bundles/transformations/buildJobDescription.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63d8191d99d6ef6162a28b3f",
        "name": "parseNetmikoSendCommandforGitHub (1)",
        "type": "transformation",
        "location": "/bundles/transformations/parseNetmikoSendCommandforGitHub (1).json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63d966e399d6ef6162a28b40",
        "name": "CreateNetmikoInput",
        "type": "transformation",
        "location": "/bundles/transformations/CreateNetmikoInput.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63e0439fbe82950afcced648",
        "name": "createResultObjectFromNetmikoResult",
        "type": "transformation",
        "location": "/bundles/transformations/createResultObjectFromNetmikoResult.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "63e056aabe82950afcced64a",
        "name": "createResultObject",
        "type": "transformation",
        "location": "/bundles/transformations/createResultObject.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "61575550f19f3400ded634bd",
        "name": "convertObjecttoStringGithubSingleRepo",
        "type": "transformation",
        "location": "/bundles/transformations/convertObjecttoStringGithubSingleRepo.json",
        "properties": {
          "entryPoint": false
        }
      }
    ]
  },
  "bundles": [
    {
      "type": "automation",
      "data": {
        "_id": "63e14a2a2731730b24e35c70",
        "name": "Run Regional Hub",
        "description": "",
        "componentName": "Run Regional Hub",
        "componentType": "workflows",
        "gbac": {
          "write": [],
          "read": []
        },
        "created": "2023-02-06T18:42:50.025Z",
        "createdBy": "nick.andreano@itential.com",
        "lastUpdated": "2023-02-06T18:42:57.536Z",
        "lastUpdatedBy": "nick.andreano@itential.com",
        "triggers": [
          {
            "_id": "63e14ba72731730b24e35c71",
            "created": "2023-02-06T18:49:10.961Z",
            "createdBy": "nick.andreano@itential.com",
            "lastUpdated": "2023-03-01T19:44:19.142Z",
            "lastUpdatedBy": "nick.andreano@itential.com",
            "name": "Manual",
            "type": "manual",
            "enabled": true,
            "actionType": "automations",
            "actionId": "63e14a2a2731730b24e35c70",
            "formId": "Run Regional Hub",
            "formData": {
              "tags": [
                {
                  "designation": "first run"
                }
              ],
              "region": "San Jose"
            },
            "formSchemaHash": "21ea1801961e69b921217d421b9dcfc543379ec3b44d68279bd55888bb6aaabc"
          }
        ]
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Run Regional Hub",
        "type": "automation",
        "tasks": {
          "2108": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Did child Job run successfully?",
            "description": "Did child Job run successfully?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "error",
                        "operand_1": {
                          "variable": "job_details",
                          "task": "5d9d"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.3811764705882353,
            "y": 0.5639658848614072
          },
          "2337": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "buildRunRegionalHubJobDescription",
            "description": "buildRunRegionalHubJobDescription",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e15fbf6cdd285d5d39a935",
                "variableMap": {
                  "designations": "$var.efb4.filePath"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "jobDescription": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.20947630922693267,
            "y": 0.5643879173290938,
            "task_name": "buildRunRegionalHubJobDescription",
            "retrySettings": null
          },
          "4676": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.20365752285951788,
            "y": 0.9054054054054054,
            "scheduled": false
          },
          "5872": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "GetChildJobLoopReports",
            "description": "GetChildJobLoopReports",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63f3d4f859b8702a8c6b78ce",
                "variableMap": {
                  "childJobDetails": "$var.34df.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "report": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.8156862745098039,
            "y": 0.12153518123667377,
            "task_name": "GetChildJobLoopReports",
            "retrySettings": null
          },
          "6055": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.8203921568627451,
            "y": 0.31663113006396587,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.6159600997506235,
            "y": 0.5643879173290938
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.9796078431372551,
            "y": 0.5671641791044776
          },
          "73fe": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.5195344970906068,
            "y": 0.5643879173290938
          },
          "efb4": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "runRegionalHubFormData",
            "description": "runRegionalHubFormData",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63daa8ff99d6ef6162a28b49",
                "variableMap": {
                  "formData": "$var.job.formData"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "runFile": null,
                "filePath": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.38320864505403157,
            "y": 0.5643879173290938,
            "task_name": "internetReduceParentFormData",
            "retrySettings": null
          },
          "b9a0": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST Error Message",
            "description": "JST Error Message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.efb4.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.39068994181213634,
            "y": 0.7186009538950715,
            "scheduled": false
          },
          "fd0d": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.38985868661679135,
            "y": 0.9054054054054054,
            "scheduled": false
          },
          "fa6e": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6666666666666666,
            "y": 0.908315565031983,
            "scheduled": false
          },
          "987f": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.9733333333333334,
            "y": 0.908315565031983,
            "scheduled": false
          },
          "37de": {
            "name": "query",
            "canvasName": "query",
            "summary": "regionalHubDataArray",
            "description": "regionalHubDataArray",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "regionalHubDataArray",
                "obj": "$var.5d9d.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.regionalHubDataArray"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.44045206898957306,
            "y": 0.5671641791044776,
            "scheduled": false
          },
          "d731": {
            "name": "query",
            "canvasName": "query",
            "summary": "Github File error",
            "description": "Github File error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "errorMessage",
                "obj": "$var.2108.return_value"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.3835294117647059,
            "y": 0.7217484008528785,
            "scheduled": false
          },
          "3e6f": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.3835294117647059,
            "y": 0.908315565031983,
            "scheduled": false
          },
          "272e": {
            "name": "updateJobDescription",
            "canvasName": "updateJobDescription",
            "summary": "Update Job Description",
            "description": "Overwrite the job description with a new one",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "description": "$var.2337.jobDescription"
              },
              "outgoing": {
                "description": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.04239401496259352,
            "y": 0.5643879173290938,
            "scheduled": false
          },
          "b847": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST Error Message",
            "description": "JST Error Message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.2337.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.20615128844555278,
            "y": 0.7186009538950715,
            "scheduled": false
          },
          "5d9d": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Get Region Files(s) from GitHub",
            "description": "Get Region Files(s) from GitHub",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Get Region File(s) from GitHub",
                "variables": {
                  "repoOwner": {
                    "editable": true,
                    "task": "static",
                    "value": "NickAOrg"
                  },
                  "repoName": {
                    "editable": true,
                    "task": "static",
                    "value": "regions"
                  },
                  "runFile": {
                    "editable": true,
                    "task": "efb4",
                    "value": "runFile"
                  },
                  "branchName": {
                    "editable": true,
                    "task": "static",
                    "value": "main"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.2528681889078976,
            "y": 0.5671641791044776
          },
          "e1f3": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Regional Hub File",
            "description": "Run Regional Hub File",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Run Regional Hub File",
                "variables": {
                  "tags": {
                    "task": "efb4",
                    "value": "filePath"
                  }
                },
                "data_array": "$var.job.ParallelRegionalHubDataArray",
                "transformation": "63f3cc3a59b8702a8c6b78cd",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.5403877981347976,
            "y": 0.5671641791044776
          },
          "8e6": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "childJobLoopCheck",
            "description": "childJobLoopCheck",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dadc5099d6ef6162a28b50",
                "variableMap": {
                  "childJobLoopDetails": "$var.e1f3.job_details"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "AllChildJobsRanSuccessfully": null,
                "erroredMessages": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.6732647022546508,
            "y": 0.5671641791044776,
            "task_name": "childJobLoopCheck",
            "retrySettings": null
          },
          "68c7": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST Error Message",
            "description": "JST Error Message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.8e6.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.6705882352941176,
            "y": 0.7217484008528785,
            "scheduled": false
          },
          "17c9": {
            "name": "query",
            "canvasName": "query",
            "summary": "errorMessage",
            "description": "errorMessage",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.f7fc.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.8250980392156863,
            "y": 0.7217484008528785,
            "scheduled": false
          },
          "e759": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.8258823529411765,
            "y": 0.908315565031983,
            "scheduled": false
          },
          "f7fc": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "GetChildJobLoopReports",
            "description": "GetChildJobLoopReports",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63f3d4f859b8702a8c6b78ce",
                "variableMap": {
                  "childJobDetails": "$var.e1f3.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "report": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.8116318054448547,
            "y": 0.5671641791044776,
            "task_name": "GetChildJobLoopReports",
            "retrySettings": null
          },
          "b828": {
            "name": "query",
            "canvasName": "query",
            "summary": "Report",
            "description": "Report",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.f7fc.report"
              },
              "outgoing": {
                "return_data": "$var.job.report"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.9170577336604302,
            "y": 0.5671641791044776,
            "scheduled": false
          },
          "76bb": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Get File(s) from GitHub?",
            "description": "Get File(s) from GitHub? TO BE DELETED after region files are retrievable from Github.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": false,
                          "task": "static"
                        },
                        "operator": "contains",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.09476309226932668,
            "y": 0.5620031796502385
          },
          "db2e": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "ParallelRegionalHubDataArray",
                "value": "[[{\"leaf\":{\"commonDevicesCommandSets\":[{\"devices\":[\"172.20.103.138\",\"172.20.103.137\"],\"deviceType\":\"cisco_nxos\",\"username\":\"admin\",\"port\":22,\"commands\":[[\"show interfaces\",\"show version\"],[\"show location\"]]}],\"uniqueDevicesCommands\":[{\"device\":\"172.20.103.121\",\"deviceType\":\"cisco_xr\",\"username\":\"admin\",\"port\":22,\"commands\":[[\"show interfaces\",\"show version\"],[\"show location\"]]}]},\"spine\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"dci\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"internet\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"mpls\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"apic\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]}},{\"leaf\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"spine\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"dci\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"internet\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"mpls\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"apic\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]}},{\"leaf\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"spine\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"dci\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"internet\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"mpls\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"apic\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]}},{\"leaf\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"spine\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"dci\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"internet\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"mpls\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"apic\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]}},{\"leaf\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"spine\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"dci\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"internet\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"mpls\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"apic\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]}},{\"leaf\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"spine\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"dci\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"internet\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"mpls\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"apic\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]}},{\"leaf\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"spine\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"dci\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"internet\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"mpls\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"apic\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]}},{\"leaf\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"spine\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"dci\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"internet\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"mpls\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"apic\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]}},{\"leaf\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"spine\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"dci\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"internet\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"mpls\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"apic\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]}},{\"leaf\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"spine\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"dci\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"internet\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"mpls\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"apic\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]}},{\"leaf\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"spine\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"dci\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"internet\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"mpls\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"apic\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]}},{\"leaf\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"spine\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"dci\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"internet\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"mpls\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]},\"apic\":{\"commonDevicesCommandSets\":[],\"uniqueDevicesCommands\":[]}}]"
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.08862745098039215,
            "y": 0.27398720682302774
          },
          "f9e6": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "SequentialRegionalHubDataArray",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.08078431372549019,
            "y": 0.11194029850746269
          },
          "34df": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Regional Hub File",
            "description": "Run Regional Hub File",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Run Regional Hub File",
                "variables": {
                  "tags": {
                    "task": "efb4",
                    "value": "filePath"
                  }
                },
                "data_array": "$var.job.SequentialRegionalHubDataArray",
                "transformation": "63f3cc3a59b8702a8c6b78cd",
                "loopType": "sequential"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.5317647058823529,
            "y": 0.13326226012793177
          },
          "e9bf": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "childJobLoopCheck",
            "description": "childJobLoopCheck",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dadc5099d6ef6162a28b50",
                "variableMap": {
                  "childJobLoopDetails": "$var.34df.job_details"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "AllChildJobsRanSuccessfully": null,
                "erroredMessages": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.672156862745098,
            "y": 0.12366737739872068,
            "task_name": "childJobLoopCheck",
            "retrySettings": null
          },
          "8f05": {
            "name": "query",
            "canvasName": "query",
            "summary": "Report",
            "description": "Report",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.5872.report"
              },
              "outgoing": {
                "return_data": "$var.job.reportSequential"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.923921568627451,
            "y": 0.12686567164179105,
            "scheduled": false
          },
          "bd8": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST Error Message",
            "description": "JST Error Message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.e9bf.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.6768627450980392,
            "y": 0.23880597014925373,
            "scheduled": false
          },
          "d329": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6823529411764706,
            "y": 0.3272921108742004,
            "scheduled": false
          },
          "9b": {
            "name": "query",
            "canvasName": "query",
            "summary": "errorMessage",
            "description": "errorMessage",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.5872.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.8133333333333334,
            "y": 0.2281449893390192,
            "scheduled": false
          },
          "1c50": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "To be deleted after files are in GitHub",
            "description": "To be deleted after files are in GitHub",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.0773067331670823,
            "y": 0.4189189189189189,
            "scheduled": false
          },
          "950c": {
            "name": "validateJsonSchema",
            "canvasName": "validateJsonSchema",
            "summary": "Validate JSON data with schema.",
            "description": "Perform a JSON Schema validation.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "jsonData": "$var.job.ParallelRegionalHubDataArray",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "leaf": {
                        "type": "object",
                        "properties": {
                          "commonDevicesCommandSets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devices": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "examples": [
                                      "sealeaf101"
                                    ]
                                  }
                                },
                                "deviceType": {
                                  "type": "string",
                                  "examples": [
                                    "cisco_nxos"
                                  ]
                                },
                                "username": {
                                  "type": "string",
                                  "examples": [
                                    "admin"
                                  ]
                                },
                                "port": {
                                  "type": "integer",
                                  "examples": [
                                    22
                                  ]
                                },
                                "commands": {
                                  "type": "array",
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "examples": [
                                        "acidiag fnvread",
                                        "show interface",
                                        "show interface description",
                                        "show cdp neighbors",
                                        "show diagnostic result module all",
                                        "show endpoint vrf all detail",
                                        "show environment",
                                        "show interface status",
                                        "show port-channel summary",
                                        "show tunnel internal database reachability",
                                        "show tunnel internal database reachability | wc -l",
                                        "show version",
                                        "show vlan extended",
                                        "show vpc brief",
                                        "show vrf",
                                        "show interface status up",
                                        "show interface trunk",
                                        "show isis adjacency detail vrf overlay-1",
                                        "show isis dteps vrf all | sort",
                                        "show lldp neighbors",
                                        "show mac address-table | grep -v tunnel | sort",
                                        "show module"
                                      ]
                                    }
                                  }
                                }
                              },
                              "required": []
                            }
                          },
                          "uniqueDevicesCommands": {
                            "type": "array"
                          }
                        },
                        "required": []
                      },
                      "spine": {
                        "type": "object",
                        "properties": {
                          "commonDevicesCommandSets": {
                            "type": "array"
                          },
                          "uniqueDevicesCommands": {
                            "type": "array"
                          }
                        },
                        "required": []
                      },
                      "dci": {
                        "type": "object",
                        "properties": {
                          "commonDevicesCommandSets": {
                            "type": "array"
                          },
                          "uniqueDevicesCommands": {
                            "type": "array"
                          }
                        },
                        "required": []
                      },
                      "internet": {
                        "type": "object",
                        "properties": {
                          "commonDevicesCommandSets": {
                            "type": "array"
                          },
                          "uniqueDevicesCommands": {
                            "type": "array"
                          }
                        },
                        "required": []
                      },
                      "mpls": {
                        "type": "object",
                        "properties": {
                          "commonDevicesCommandSets": {
                            "type": "array"
                          },
                          "uniqueDevicesCommands": {
                            "type": "array"
                          }
                        },
                        "required": []
                      },
                      "apic": {
                        "type": "object",
                        "properties": {
                          "commonDevicesCommandSets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devices": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "examples": [
                                      "seaapic001"
                                    ]
                                  }
                                },
                                "deviceType": {
                                  "type": "string",
                                  "examples": [
                                    "cisco_nxos"
                                  ]
                                },
                                "username": {
                                  "type": "string",
                                  "examples": [
                                    "admin"
                                  ]
                                },
                                "port": {
                                  "type": "integer",
                                  "examples": [
                                    22
                                  ]
                                },
                                "commands": {
                                  "type": "array",
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "examples": [
                                        "acidiag avread",
                                        "cat /proc/net/bonding/bond0",
                                        "show controller",
                                        "show endpoints | grep -v tunnel",
                                        "show faults tenant common | grep -P '.*'",
                                        "show health tenant common",
                                        "show switch",
                                        "show tenant",
                                        "show version"
                                      ]
                                    }
                                  }
                                }
                              },
                              "required": []
                            }
                          },
                          "uniqueDevicesCommands": {
                            "type": "array"
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  }
                }
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.40784313725490196,
            "y": 0.3272921108742004,
            "scheduled": false
          }
        },
        "transitions": {
          "2108": {
            "37de": {
              "type": "standard",
              "state": "success"
            },
            "d731": {
              "type": "standard",
              "state": "failure"
            }
          },
          "2337": {
            "272e": {
              "type": "standard",
              "state": "success"
            },
            "b847": {
              "type": "standard",
              "state": "error"
            }
          },
          "4676": {
            "3e6f": {
              "type": "standard",
              "state": "success"
            }
          },
          "5872": {
            "8f05": {
              "type": "standard",
              "state": "success"
            },
            "9b": {
              "type": "standard",
              "state": "error"
            }
          },
          "6055": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "6224": {},
          "workflow_start": {
            "73fe": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "73fe": {
            "efb4": {
              "type": "standard",
              "state": "success"
            }
          },
          "efb4": {
            "2337": {
              "type": "standard",
              "state": "success"
            },
            "b9a0": {
              "type": "standard",
              "state": "error"
            }
          },
          "9b0a": {},
          "b9a0": {
            "fd0d": {
              "type": "standard",
              "state": "success"
            }
          },
          "fd0d": {
            "4676": {
              "type": "standard",
              "state": "success"
            }
          },
          "fa6e": {
            "e759": {
              "type": "standard",
              "state": "success"
            }
          },
          "987f": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "8a83": {},
          "37de": {
            "950c": {
              "type": "standard",
              "state": "success"
            }
          },
          "d731": {
            "3e6f": {
              "type": "standard",
              "state": "success"
            }
          },
          "3e6f": {
            "fa6e": {
              "type": "standard",
              "state": "success"
            }
          },
          "37da": {},
          "272e": {
            "76bb": {
              "type": "standard",
              "state": "success"
            }
          },
          "b847": {
            "4676": {
              "type": "standard",
              "state": "success"
            }
          },
          "5d9d": {
            "2108": {
              "type": "standard",
              "state": "success"
            }
          },
          "e1f3": {
            "8e6": {
              "type": "standard",
              "state": "success"
            }
          },
          "8e6": {
            "68c7": {
              "type": "standard",
              "state": "error"
            },
            "f7fc": {
              "type": "standard",
              "state": "success"
            }
          },
          "68c7": {
            "fa6e": {
              "type": "standard",
              "state": "success"
            }
          },
          "17c9": {
            "e759": {
              "type": "standard",
              "state": "success"
            }
          },
          "e759": {
            "987f": {
              "type": "standard",
              "state": "success"
            }
          },
          "f7fc": {
            "17c9": {
              "type": "standard",
              "state": "error"
            },
            "b828": {
              "type": "standard",
              "state": "success"
            }
          },
          "b828": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "76bb": {
            "5d9d": {
              "type": "standard",
              "state": "success"
            },
            "1c50": {
              "type": "standard",
              "state": "failure"
            }
          },
          "db2e": {
            "f9e6": {
              "type": "standard",
              "state": "success"
            },
            "950c": {
              "type": "standard",
              "state": "success"
            }
          },
          "f9e6": {
            "34df": {
              "type": "standard",
              "state": "success"
            }
          },
          "34df": {
            "e9bf": {
              "type": "standard",
              "state": "success"
            }
          },
          "e9bf": {
            "5872": {
              "type": "standard",
              "state": "success"
            },
            "bd8": {
              "type": "standard",
              "state": "error"
            }
          },
          "8f05": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "bd8": {
            "d329": {
              "type": "standard",
              "state": "success"
            }
          },
          "d329": {
            "6055": {
              "type": "standard",
              "state": "success"
            }
          },
          "9b": {
            "6055": {
              "type": "standard",
              "state": "success"
            }
          },
          "1c50": {
            "db2e": {
              "type": "standard",
              "state": "success"
            }
          },
          "950c": {
            "e1f3": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "last_updated": "2023-03-01T20:59:13.330Z",
        "last_updated_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.123.0",
        "inputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "$id": "formData",
              "type": "object",
              "properties": {
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "designation": {
                        "type": "string",
                        "examples": [
                          "Night 1"
                        ]
                      }
                    },
                    "required": []
                  },
                  "$id": "tags"
                },
                "region": {
                  "type": "string",
                  "examples": [
                    "San Jose"
                  ]
                }
              },
              "required": []
            }
          },
          "required": [
            "formData"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "$id": "formData",
              "type": "object",
              "properties": {
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "designation": {
                        "type": "string",
                        "examples": [
                          "Night 1"
                        ]
                      }
                    },
                    "required": []
                  },
                  "$id": "tags"
                },
                "region": {
                  "type": "string",
                  "examples": [
                    "San Jose"
                  ]
                }
              },
              "required": []
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "error": {
              "type": "boolean"
            },
            "errorMessage": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            },
            "regionalHubDataArray": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            },
            "ParallelRegionalHubDataArray": {
              "type": "string"
            },
            "report": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            },
            "SequentialRegionalHubDataArray": {
              "type": "array"
            },
            "reportSequential": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "created": "2023-02-06T00:51:04.830Z",
        "created_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.40.5-2021.1.123.0",
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Get Region File(s) from GitHub",
        "type": "automation",
        "tasks": {
          "11": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handling",
            "description": "Error Handling",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.7458823529411764,
            "y": 0.8859275053304904,
            "scheduled": false
          },
          "609": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handling",
            "description": "Error Handling",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.140392156862745,
            "y": 1.29317697228145,
            "scheduled": false
          },
          "1127": {
            "name": "query",
            "canvasName": "query",
            "summary": "fileArray",
            "description": "Get FileArray",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "fileResponse",
                "obj": "$var.162b.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.7905882352941176,
            "y": 1.0735607675906182,
            "scheduled": false
          },
          "3351": {
            "name": "query",
            "canvasName": "query",
            "summary": "Error",
            "description": "Error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.ed18.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.7458823529411764,
            "y": 0.746268656716418,
            "scheduled": false
          },
          "4448": {
            "name": "query",
            "canvasName": "query",
            "summary": "Error",
            "description": "Error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "errorMessage",
                "obj": "$var.4e6.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5105882352941177,
            "y": 0.7452025586353944,
            "scheduled": false
          },
          "6165": {
            "name": "query",
            "canvasName": "query",
            "summary": "Error",
            "description": "Error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "errorMessage",
                "obj": "$var.162b.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.7192156862745098,
            "y": 1.1823027718550108,
            "scheduled": false
          },
          "6332": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handling",
            "description": "Error Handling",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.4956862745098039,
            "y": 1.29317697228145,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0.08,
            "y": 0.6311300639658849
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.6588235294117648,
            "y": 0.6311300639658849
          },
          "4e6": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Child Job",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Get File - GitHub",
                "variables": {
                  "repoOwner": {
                    "editable": true,
                    "task": "job",
                    "value": "repoOwner"
                  },
                  "repoName": {
                    "editable": true,
                    "task": "job",
                    "value": "repoName"
                  },
                  "filePath": {
                    "editable": true,
                    "task": "job",
                    "value": "runFile"
                  },
                  "branchName": {
                    "editable": true,
                    "task": "job",
                    "value": "branchName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.4015686274509804,
            "y": 0.6311300639658849
          },
          "42d4": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": false
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.24549019607843137,
            "y": 0.6332622601279317
          },
          "4bb1": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Did Child Job Run Successfully?",
            "description": "Did Child Job Run Successfully?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "error",
                        "operand_1": {
                          "variable": "job_details",
                          "task": "4e6"
                        },
                        "operator": "contains",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5098039215686274,
            "y": 0.6311300639658849
          },
          "2d12": {
            "name": "query",
            "canvasName": "query",
            "summary": "File Contents",
            "description": "Get File Contents",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "fileResponse.response.content",
                "obj": "$var.4e6.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5992156862745098,
            "y": 0.6311300639658849,
            "scheduled": false
          },
          "ed18": {
            "name": "parse",
            "canvasName": "parse",
            "summary": "Parse files contents into object",
            "description": "Parses a JSON string, constructing the JavaScript value or object described by the string.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "text": "$var.2d12.return_data"
              },
              "outgoing": {
                "textObject": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.7474509803921568,
            "y": 0.6311300639658849,
            "scheduled": false
          },
          "ed95": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Add file to regionalHubDataArray",
            "description": "Add file to regionalHubDataArray",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": [],
                "elementN": "$var.ed18.textObject"
              },
              "outgoing": {
                "pushedArray": "$var.job.regionalHubDataArray"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.9262745098039216,
            "y": 0.6311300639658849,
            "scheduled": false
          },
          "798c": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handling",
            "description": "Error Handling",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": "$var.4448.return_data"
              },
              "outgoing": {
                "response": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6392156862745098,
            "y": 0.8827292110874201,
            "scheduled": false
          },
          "7b1e": {
            "name": "query",
            "canvasName": "query",
            "summary": "Error",
            "description": "Error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.ed95.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.9223529411764706,
            "y": 0.7515991471215352,
            "scheduled": false
          },
          "da63": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handling",
            "description": "Error Handling",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.9215686274509803,
            "y": 0.8859275053304904,
            "scheduled": false
          },
          "162b": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Child Job",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Get File - GitHub",
                "variables": {
                  "repoOwner": {
                    "editable": true,
                    "task": "job",
                    "value": "repoOwner"
                  },
                  "repoName": {
                    "editable": true,
                    "task": "job",
                    "value": "repoName"
                  },
                  "filePath": {
                    "editable": true,
                    "task": "37ae",
                    "value": "RegionDir"
                  },
                  "branchName": {
                    "editable": true,
                    "task": "job",
                    "value": "branchName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.6172549019607844,
            "y": 1.0735607675906182
          },
          "37ae": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "GetRegionDir",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63f3bc1e59b8702a8c6b78c8",
                "variableMap": {
                  "runFile": "$var.job.runFile",
                  "repoName": "$var.job.repoName",
                  "repoOwner": "$var.job.repoOwner",
                  "branchName": "$var.job.branchName"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "RegionDir": null,
                "repoName": null,
                "repoOwner": null,
                "branchName": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.4988235294117647,
            "y": 1.0735607675906182,
            "task_name": "GetRegionDir",
            "retrySettings": null
          },
          "dbf1": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "GetGitHubFiles",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63f3bcdc59b8702a8c6b78c9",
                "variableMap": {
                  "gitHubResp": "$var.1127.return_data"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "fileArray": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.8847058823529412,
            "y": 1.0735607675906182,
            "task_name": "GetGitHubFiles",
            "retrySettings": null
          },
          "c188": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Child Job",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Get File - GitHub",
                "variables": {
                  "repoName": {
                    "task": "37ae",
                    "value": "repoName"
                  },
                  "repoOwner": {
                    "task": "37ae",
                    "value": "repoOwner"
                  },
                  "branchName": {
                    "task": "37ae",
                    "value": "branchName"
                  }
                },
                "data_array": "$var.dbf1.fileArray",
                "transformation": "63f3bde559b8702a8c6b78ca",
                "loopType": "sequential"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 1.0062745098039216,
            "y": 1.0735607675906182
          },
          "80bc": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "GetFileContentsFromChildLoop ",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63f3c1df59b8702a8c6b78cb",
                "variableMap": {
                  "childJobDetails": "$var.c188.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "regionalHubDataArray": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.375686274509804,
            "y": 1.0735607675906182,
            "task_name": "GetFileContentsFromChildLoop ",
            "retrySettings": null
          },
          "db58": {
            "name": "query",
            "canvasName": "query",
            "summary": "regionalHubDataArray",
            "description": "Get regionalHubDataArray",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.80bc.regionalHubDataArray"
              },
              "outgoing": {
                "return_data": "$var.job.regionalHubDataArray"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.5050980392156863,
            "y": 1.0735607675906182,
            "scheduled": false
          },
          "958e": {
            "name": "query",
            "canvasName": "query",
            "summary": "Error",
            "description": "Error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.37ae.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.4972549019607843,
            "y": 1.1823027718550108,
            "scheduled": false
          },
          "85bd": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Did Child Job Run Successfully?",
            "description": "Did Child Job Run Successfully?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "error",
                        "operand_1": {
                          "variable": "job_details",
                          "task": "162b"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.7176470588235294,
            "y": 1.0735607675906182
          },
          "5c1a": {
            "name": "query",
            "canvasName": "query",
            "summary": "Error",
            "description": "Error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.dbf1.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.883921568627451,
            "y": 1.1823027718550108,
            "scheduled": false
          },
          "be56": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "childJobLoopCheck",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dadc5099d6ef6162a28b50",
                "variableMap": {
                  "childJobLoopDetails": "$var.c188.job_details"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "AllChildJobsRanSuccessfully": null,
                "erroredMessages": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.1364705882352941,
            "y": 1.0735607675906182,
            "task_name": "childJobLoopCheck",
            "retrySettings": null
          },
          "cd4c": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Did Child Job Run Successfully?",
            "description": "Did Child Job Run Successfully?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "AllChildJobsRanSuccessfully",
                          "task": "be56"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.2431372549019608,
            "y": 1.0735607675906182
          },
          "cc59": {
            "name": "query",
            "canvasName": "query",
            "summary": "Error",
            "description": "Error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.be56.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.1349019607843138,
            "y": 1.1823027718550108,
            "scheduled": false
          },
          "16b4": {
            "name": "query",
            "canvasName": "query",
            "summary": "Error",
            "description": "Error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "errorMessage",
                "obj": "$var.be56.erroredMessages"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.2423529411764707,
            "y": 1.1823027718550108,
            "scheduled": false
          },
          "804d": {
            "name": "query",
            "canvasName": "query",
            "summary": "Error",
            "description": "Error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.80bc.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.3709803921568628,
            "y": 1.1823027718550108,
            "scheduled": false
          },
          "51f6": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handling",
            "description": "Error Handling",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.24,
            "y": 1.29317697228145,
            "scheduled": false
          },
          "b71c": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handling",
            "description": "Error Handling",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.3725490196078431,
            "y": 1.29317697228145,
            "scheduled": false
          },
          "f3af": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handling",
            "description": "Error Handling",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.7207843137254902,
            "y": 1.29317697228145,
            "scheduled": false
          },
          "c539": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handling",
            "description": "Error Handling",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.8870588235294118,
            "y": 1.29317697228145,
            "scheduled": false
          },
          "21b4": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.4164705882352941,
            "y": 0.8837953091684435
          },
          "9e2a": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.5145098039215685,
            "y": 1.29317697228145
          },
          "d438": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Run Entire Region?",
            "description": "Run Entire Region?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": true,
                    "evaluations": [
                      {
                        "query": "filePath",
                        "operand_1": {
                          "variable": "job_details",
                          "task": "4e6"
                        },
                        "operator": "contains",
                        "operand_2": {
                          "variable": "All.json",
                          "task": "static"
                        }
                      },
                      {
                        "query": "IAPerror.raw_response.response",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "4448"
                        },
                        "operator": "contains",
                        "operand_2": {
                          "variable": "Not Found",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5035294117647059,
            "y": 0.8816631130063965
          }
        },
        "transitions": {
          "11": {
            "da63": {
              "type": "standard",
              "state": "success"
            }
          },
          "609": {
            "51f6": {
              "type": "standard",
              "state": "success"
            }
          },
          "1127": {
            "dbf1": {
              "type": "standard",
              "state": "success"
            }
          },
          "3351": {
            "11": {
              "type": "standard",
              "state": "success"
            }
          },
          "4448": {
            "d438": {
              "type": "standard",
              "state": "success"
            }
          },
          "4561": {},
          "6165": {
            "f3af": {
              "type": "standard",
              "state": "success"
            }
          },
          "6332": {
            "f3af": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "42d4": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "4e6": {
            "4bb1": {
              "type": "standard",
              "state": "success"
            }
          },
          "42d4": {
            "4e6": {
              "type": "standard",
              "state": "success"
            }
          },
          "4bb1": {
            "4448": {
              "type": "standard",
              "state": "failure"
            },
            "2d12": {
              "type": "standard",
              "state": "success"
            }
          },
          "2d12": {
            "ed18": {
              "type": "standard",
              "state": "success"
            }
          },
          "ed18": {
            "3351": {
              "type": "standard",
              "state": "error"
            },
            "ed95": {
              "type": "standard",
              "state": "success"
            }
          },
          "ed95": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "7b1e": {
              "type": "standard",
              "state": "error"
            }
          },
          "798c": {
            "11": {
              "type": "standard",
              "state": "success"
            }
          },
          "7b1e": {
            "da63": {
              "type": "standard",
              "state": "success"
            }
          },
          "da63": {
            "21b4": {
              "type": "standard",
              "state": "success"
            }
          },
          "162b": {
            "85bd": {
              "type": "standard",
              "state": "success"
            }
          },
          "1bb3": {},
          "e9cb": {},
          "37ae": {
            "162b": {
              "type": "standard",
              "state": "success"
            },
            "958e": {
              "type": "standard",
              "state": "error"
            }
          },
          "dbf1": {
            "c188": {
              "type": "standard",
              "state": "success"
            },
            "5c1a": {
              "type": "standard",
              "state": "error"
            }
          },
          "c188": {
            "be56": {
              "type": "standard",
              "state": "success"
            }
          },
          "80bc": {
            "db58": {
              "type": "standard",
              "state": "success"
            },
            "804d": {
              "type": "standard",
              "state": "error"
            }
          },
          "db58": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "958e": {
            "6332": {
              "type": "standard",
              "state": "success"
            }
          },
          "85bd": {
            "1127": {
              "type": "standard",
              "state": "success"
            },
            "6165": {
              "type": "standard",
              "state": "failure"
            }
          },
          "5c1a": {
            "c539": {
              "type": "standard",
              "state": "success"
            }
          },
          "2bd3": {},
          "be56": {
            "cd4c": {
              "type": "standard",
              "state": "success"
            },
            "cc59": {
              "type": "standard",
              "state": "error"
            }
          },
          "cd4c": {
            "80bc": {
              "type": "standard",
              "state": "success"
            },
            "16b4": {
              "type": "standard",
              "state": "failure"
            }
          },
          "cc59": {
            "609": {
              "type": "standard",
              "state": "success"
            }
          },
          "16b4": {
            "51f6": {
              "type": "standard",
              "state": "success"
            }
          },
          "804d": {
            "b71c": {
              "type": "standard",
              "state": "success"
            }
          },
          "51f6": {
            "b71c": {
              "type": "standard",
              "state": "success"
            }
          },
          "b71c": {
            "9e2a": {
              "type": "standard",
              "state": "success"
            }
          },
          "f3af": {
            "c539": {
              "type": "standard",
              "state": "success"
            }
          },
          "c539": {
            "609": {
              "type": "standard",
              "state": "success"
            }
          },
          "21b4": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "9e2a": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "d438": {
            "37ae": {
              "type": "standard",
              "state": "success"
            },
            "798c": {
              "type": "standard",
              "state": "failure"
            }
          },
          "c59a": {}
        },
        "font_size": 12,
        "last_updated": "2023-03-01T20:09:12.509Z",
        "last_updated_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.123.0",
        "inputSchema": {
          "type": "object",
          "properties": {
            "repoOwner": {
              "title": "owner",
              "type": "string"
            },
            "repoName": {
              "title": "repo",
              "type": "string"
            },
            "runFile": {
              "title": "pathParam",
              "type": "string"
            },
            "branchName": {
              "title": "ref",
              "type": "string"
            }
          },
          "required": [
            "repoOwner",
            "repoName",
            "runFile",
            "branchName"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "repoOwner": {
              "title": "owner",
              "type": "string"
            },
            "repoName": {
              "title": "repo",
              "type": "string"
            },
            "runFile": {
              "title": "pathParam",
              "type": "string"
            },
            "branchName": {
              "title": "ref",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "errorMessage": {
              "title": "response",
              "type": "string",
              "examples": [
                "awesome"
              ]
            },
            "error": {
              "type": "boolean"
            },
            "regionalHubDataArray": {
              "title": "pushedArray",
              "type": "array",
              "items": [
                {
                  "type": [
                    "string",
                    "number",
                    "integer",
                    "object",
                    "array",
                    "boolean",
                    "null"
                  ]
                }
              ],
              "examples": [
                [
                  "Device1",
                  "Device2",
                  "Device3"
                ]
              ]
            }
          }
        },
        "created": "2023-02-20T17:32:13.786Z",
        "created_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.40.5-2021.1.123.0",
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Run Regional Hub File",
        "type": "automation",
        "tasks": {
          "2284": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "mplsCommonResults",
            "description": "mplsCommonResults",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.5401.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0345098039215685,
            "y": 0.9253731343283582,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "2337": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "buildRunRegionalHubJobDescription",
            "description": "buildRunRegionalHubJobDescription",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e15fbf6cdd285d5d39a935",
                "variableMap": {
                  "designations": "$var.3b35.response"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "jobDescription": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.3058823529411765,
            "y": 0.5607675906183369,
            "task_name": "buildRunRegionalHubJobDescription",
            "retrySettings": null
          },
          "4676": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.30980392156862746,
            "y": 1.5138592750533049,
            "scheduled": false
          },
          "5401": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "MPLS Common Device Command Sets",
            "description": "MPLS Common Device Command Sets",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "runCommonDevicesCommandSets",
                "variables": {
                  "filePath": {
                    "task": "3b35",
                    "value": "response"
                  }
                },
                "data_array": "$var.b6dd.mplsCommonDevicesCommandSets",
                "transformation": "63db182799d6ef6162a28b54",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.8611764705882353,
            "y": 0.9253731343283582
          },
          "6761": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "apicCommonResults",
            "description": "apicCommonResults",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.c25a.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0345098039215685,
            "y": 1.2142857142857142,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "7641": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "apicUniqueResults",
            "description": "apicUniqueResults",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.6d10.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0345098039215685,
            "y": 1.328358208955224,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "8730": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST Error Message",
            "description": "JST Error Message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.b6dd.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5905882352941176,
            "y": 0.9690831556503199,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.10745098039215686,
            "y": 0.5607675906183369
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.4203921568627451,
            "y": 0.5607675906183369
          },
          "73fe": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.008627450980392156,
            "y": 0.5607675906183369
          },
          "b6dd": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "ParseRegionalHubData",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dab21199d6ef6162a28b4a",
                "variableMap": {
                  "regionalHubData": "$var.job.regionalHubData"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "leafCommonDevicesCommandSets": null,
                "leafUniqueDevicesCommands": null,
                "spineCommonDevicesCommandSets": null,
                "spineUniqueDevicesCommands": null,
                "dciCommonDevicesCommandSets": null,
                "dciUniqueDevicesCommands": null,
                "internetCommonDevicesCommandSets": null,
                "internetUniqueDevicesCommands": null,
                "mplsCommonDevicesCommandSets": null,
                "mplsUniqueDevicesCommands": null,
                "apicCommonDevicesCommandSets": null,
                "apicUniqueDevicesCommands": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.624313725490196,
            "y": 0.5628997867803838,
            "task_name": "ParseRegionalHubData",
            "retrySettings": null
          },
          "b04": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Leaf Common Device Command Sets",
            "description": "Leaf Common Device Command Sets",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "runCommonDevicesCommandSets",
                "variables": {
                  "filePath": {
                    "task": "3b35",
                    "value": "response"
                  }
                },
                "data_array": "$var.b6dd.leafCommonDevicesCommandSets",
                "transformation": "63db182799d6ef6162a28b54",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.8611764705882353,
            "y": -0.2345415778251599
          },
          "d6cd": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Leaf Unique Devices Commands",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "runUniqueDevicesCommands",
                "variables": {
                  "filePath": {
                    "task": "3b35",
                    "value": "response"
                  }
                },
                "data_array": "$var.b6dd.leafUniqueDevicesCommands",
                "transformation": "63db221a99d6ef6162a28b57",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.8611764705882353,
            "y": -0.1257995735607676
          },
          "d8a5": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Spine Common Device Command Sets",
            "description": "Spine Common Device Command Sets",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "runCommonDevicesCommandSets",
                "variables": {
                  "filePath": {
                    "task": "3b35",
                    "value": "response"
                  }
                },
                "data_array": "$var.b6dd.spineCommonDevicesCommandSets",
                "transformation": "63db182799d6ef6162a28b54",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.8611764705882353,
            "y": 0.05970149253731343
          },
          "ed09": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Spine Unique Devices Commands",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "runUniqueDevicesCommands",
                "variables": {
                  "filePath": {
                    "task": "3b35",
                    "value": "response"
                  }
                },
                "data_array": "$var.b6dd.spineUniqueDevicesCommands",
                "transformation": "63db221a99d6ef6162a28b57",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.8611764705882353,
            "y": 0.1695095948827292
          },
          "55ae": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "DCI Common Device Command Sets",
            "description": "DCI Common Device Command Sets",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "runCommonDevicesCommandSets",
                "variables": {
                  "filePath": {
                    "task": "3b35",
                    "value": "response"
                  }
                },
                "data_array": "$var.b6dd.dciCommonDevicesCommandSets",
                "transformation": "63db182799d6ef6162a28b54",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.8611764705882353,
            "y": 0.3742004264392324
          },
          "2bd3": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "DCI Unique Devices Commands",
            "description": "DCI Unique Devices Commands",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "runUniqueDevicesCommands",
                "variables": {
                  "filePath": {
                    "task": "3b35",
                    "value": "response"
                  }
                },
                "data_array": "$var.b6dd.dciUniqueDevicesCommands",
                "transformation": "63db221a99d6ef6162a28b57",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.8611764705882353,
            "y": 0.48081023454157784
          },
          "75bf": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Internet Common Device Command Sets",
            "description": "Internet Common Device Command Sets",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "runCommonDevicesCommandSets",
                "variables": {
                  "filePath": {
                    "task": "3b35",
                    "value": "response"
                  }
                },
                "data_array": "$var.b6dd.internetCommonDevicesCommandSets",
                "transformation": "63db182799d6ef6162a28b54",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.8611764705882353,
            "y": 0.6396588486140725
          },
          "11f2": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Internet Unique Devices Commands",
            "description": "Internet Unique Devices Commands",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "runUniqueDevicesCommands",
                "variables": {
                  "filePath": {
                    "task": "3b35",
                    "value": "response"
                  }
                },
                "data_array": "$var.b6dd.internetUniqueDevicesCommands",
                "transformation": "63db221a99d6ef6162a28b57",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.8611764705882353,
            "y": 0.7484008528784648
          },
          "d620": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "MPLS Unique Devices Commands",
            "description": "MPLS Unique Devices Commands",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "runUniqueDevicesCommands",
                "variables": {
                  "filePath": {
                    "task": "3b35",
                    "value": "response"
                  }
                },
                "data_array": "$var.b6dd.mplsUniqueDevicesCommands",
                "transformation": "63db221a99d6ef6162a28b57",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.8611764705882353,
            "y": 1.0309168443496801
          },
          "c25a": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "APIC Common Device Command Sets",
            "description": "APIC Common Device Command Sets",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "runCommonDevicesCommandSets",
                "variables": {
                  "filePath": {
                    "task": "3b35",
                    "value": "response"
                  }
                },
                "data_array": "$var.b6dd.apicCommonDevicesCommandSets",
                "transformation": "63db182799d6ef6162a28b54",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.8611764705882353,
            "y": 1.2142857142857142
          },
          "6d10": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "APIC Unique Devices Commands",
            "description": "APIC Unique Devices Commands",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "runUniqueDevicesCommands",
                "variables": {
                  "filePath": {
                    "task": "3b35",
                    "value": "response"
                  }
                },
                "data_array": "$var.b6dd.apicUniqueDevicesCommands",
                "transformation": "63db221a99d6ef6162a28b57",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.8611764705882353,
            "y": 1.3198294243070363
          },
          "fa6e": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6290196078431373,
            "y": 1.5159914712153517,
            "scheduled": false
          },
          "987f": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.2666666666666666,
            "y": 1.5159914712153517,
            "scheduled": false
          },
          "5cef": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "mplsUniqueResults",
            "description": "mplsUniqueResults",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.d620.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0345098039215685,
            "y": 1.0309168443496801,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "b6ea": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "internetUniqueResults",
            "description": "internetUniqueResults",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.11f2.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0345098039215685,
            "y": 0.755863539445629,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "f759": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "internetCommonResults",
            "description": "internetCommonResults",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.75bf.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0345098039215685,
            "y": 0.6492537313432836,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "20a9": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "dciUniqueResults",
            "description": "dciUniqueResults",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.2bd3.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0345098039215685,
            "y": 0.48081023454157784,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "aea8": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "dciCommonResults",
            "description": "dciCommonResults",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.55ae.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0345098039215685,
            "y": 0.3742004264392324,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "65d6": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "spineCommonResults",
            "description": "spineCommonResults",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.d8a5.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0345098039215685,
            "y": 0.05970149253731343,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "2acd": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "spineUniqueResults",
            "description": "spineUniqueResults",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.ed09.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0345098039215685,
            "y": 0.1695095948827292,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "6cae": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "leafUniqueResults",
            "description": "leafUniqueResults",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.d6cd.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0345098039215685,
            "y": -0.1257995735607676,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "b6f6": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "leafCommonResults",
            "description": "leafCommonResults",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.b04.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0345098039215685,
            "y": -0.2345415778251599,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "c6d9": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "CreateResulsReport",
            "description": "CreateResulsReport",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e0489fbe82950afcced649",
                "variableMap": {
                  "leafCommonResults": "$var.b6f6.resultsObject",
                  "leafUniqueResults": "$var.6cae.resultsObject",
                  "spineCommonResults": "$var.65d6.resultsObject",
                  "spineUniqueResults": "$var.2acd.resultsObject",
                  "dciCommonResults": "$var.aea8.resultsObject",
                  "dciUniqueResults": "$var.20a9.resultsObject",
                  "internetCommonResults": "$var.f759.resultsObject",
                  "internetUniqueResults": "$var.b6ea.resultsObject",
                  "mplsCommonResults": "$var.2284.resultsObject",
                  "mplsUniqueResults": "$var.5cef.resultsObject",
                  "apicCommonResults": "$var.6761.resultsObject",
                  "apicUniqueResults": "$var.7641.resultsObject"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "results": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.2682352941176471,
            "y": 0.5650319829424307,
            "task_name": "CreateResulsReport",
            "retrySettings": null
          },
          "272e": {
            "name": "updateJobDescription",
            "canvasName": "updateJobDescription",
            "summary": "Update Job Description",
            "description": "Overwrite the job description with a new one",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "description": "$var.2337.jobDescription"
              },
              "outgoing": {
                "description": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.4752941176470588,
            "y": 0.5607675906183369,
            "scheduled": false
          },
          "b847": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST Error Message",
            "description": "JST Error Message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.2337.jobDescription"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.2980392156862745,
            "y": 0.9946695095948828,
            "scheduled": false
          },
          "a56c": {
            "name": "query",
            "canvasName": "query",
            "summary": "Report",
            "description": "Send report to Job variable",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.c6d9.results"
              },
              "outgoing": {
                "return_data": "$var.job.report"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.3607647547797175,
            "y": 0.5596184419713831,
            "scheduled": false
          },
          "3b35": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "tags",
            "description": "tags",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": "$var.job.tags"
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.13176470588235295,
            "y": 0.5565031982942431,
            "scheduled": false
          }
        },
        "transitions": {
          "2284": {
            "c6d9": {
              "type": "standard",
              "state": "success"
            }
          },
          "2337": {
            "272e": {
              "type": "standard",
              "state": "success"
            },
            "b847": {
              "type": "standard",
              "state": "error"
            }
          },
          "4676": {
            "fa6e": {
              "type": "standard",
              "state": "success"
            }
          },
          "5401": {
            "2284": {
              "type": "standard",
              "state": "success"
            }
          },
          "6224": {},
          "6761": {
            "c6d9": {
              "type": "standard",
              "state": "success"
            }
          },
          "7641": {
            "c6d9": {
              "type": "standard",
              "state": "success"
            }
          },
          "8730": {
            "fa6e": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "73fe": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "73fe": {
            "3b35": {
              "type": "standard",
              "state": "success"
            }
          },
          "b6dd": {
            "5401": {
              "type": "standard",
              "state": "success"
            },
            "8730": {
              "type": "standard",
              "state": "error"
            },
            "b04": {
              "type": "standard",
              "state": "success"
            },
            "d6cd": {
              "type": "standard",
              "state": "success"
            },
            "d8a5": {
              "type": "standard",
              "state": "success"
            },
            "ed09": {
              "type": "standard",
              "state": "success"
            },
            "55ae": {
              "type": "standard",
              "state": "success"
            },
            "2bd3": {
              "type": "standard",
              "state": "success"
            },
            "75bf": {
              "type": "standard",
              "state": "success"
            },
            "11f2": {
              "type": "standard",
              "state": "success"
            },
            "d620": {
              "type": "standard",
              "state": "success"
            },
            "c25a": {
              "type": "standard",
              "state": "success"
            },
            "6d10": {
              "type": "standard",
              "state": "success"
            }
          },
          "b04": {
            "b6f6": {
              "type": "standard",
              "state": "success"
            }
          },
          "d6cd": {
            "6cae": {
              "type": "standard",
              "state": "success"
            }
          },
          "9b0a": {},
          "d8a5": {
            "65d6": {
              "type": "standard",
              "state": "success"
            }
          },
          "ed09": {
            "2acd": {
              "type": "standard",
              "state": "success"
            }
          },
          "55ae": {
            "aea8": {
              "type": "standard",
              "state": "success"
            }
          },
          "2bd3": {
            "20a9": {
              "type": "standard",
              "state": "success"
            }
          },
          "75bf": {
            "f759": {
              "type": "standard",
              "state": "success"
            }
          },
          "11f2": {
            "b6ea": {
              "type": "standard",
              "state": "success"
            }
          },
          "d620": {
            "5cef": {
              "type": "standard",
              "state": "success"
            }
          },
          "c25a": {
            "6761": {
              "type": "standard",
              "state": "success"
            }
          },
          "6d10": {
            "7641": {
              "type": "standard",
              "state": "success"
            }
          },
          "fa6e": {
            "987f": {
              "type": "standard",
              "state": "success"
            }
          },
          "987f": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "5cef": {
            "c6d9": {
              "type": "standard",
              "state": "success"
            }
          },
          "b6ea": {
            "c6d9": {
              "type": "standard",
              "state": "success"
            }
          },
          "f759": {
            "c6d9": {
              "type": "standard",
              "state": "success"
            }
          },
          "20a9": {
            "c6d9": {
              "type": "standard",
              "state": "success"
            }
          },
          "aea8": {
            "c6d9": {
              "type": "standard",
              "state": "success"
            }
          },
          "65d6": {
            "c6d9": {
              "type": "standard",
              "state": "success"
            }
          },
          "2acd": {
            "c6d9": {
              "type": "standard",
              "state": "success"
            }
          },
          "6cae": {
            "c6d9": {
              "type": "standard",
              "state": "success"
            }
          },
          "b6f6": {
            "c6d9": {
              "type": "standard",
              "state": "success"
            }
          },
          "8a83": {},
          "c6d9": {
            "987f": {
              "type": "standard",
              "state": "error"
            },
            "a56c": {
              "type": "standard",
              "state": "success"
            }
          },
          "37da": {},
          "272e": {
            "b6dd": {
              "type": "standard",
              "state": "success"
            }
          },
          "b847": {
            "4676": {
              "type": "standard",
              "state": "success"
            }
          },
          "a56c": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "3b35": {
            "2337": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "last_updated": "2023-03-01T19:51:01.723Z",
        "last_updated_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.123.0",
        "inputSchema": {
          "type": "object",
          "properties": {
            "regionalHubData": {
              "$id": "regionalHubData",
              "type": "object",
              "properties": {
                "leaf": {
                  "type": "object",
                  "properties": {
                    "commonDevicesCommandSets": {
                      "type": "array"
                    },
                    "uniqueDevicesCommands": {
                      "type": "array"
                    }
                  },
                  "required": []
                },
                "spine": {
                  "type": "object",
                  "properties": {
                    "commonDevicesCommandSets": {
                      "type": "array"
                    },
                    "uniqueDevicesCommands": {
                      "type": "array"
                    }
                  },
                  "required": []
                },
                "dci": {
                  "type": "object",
                  "properties": {
                    "commonDevicesCommandSets": {
                      "type": "array"
                    },
                    "uniqueDevicesCommands": {
                      "type": "array"
                    }
                  },
                  "required": []
                },
                "internet": {
                  "type": "object",
                  "properties": {
                    "commonDevicesCommandSets": {
                      "type": "array"
                    },
                    "uniqueDevicesCommands": {
                      "type": "array"
                    }
                  },
                  "required": []
                },
                "mpls": {
                  "type": "object",
                  "properties": {
                    "commonDevicesCommandSets": {
                      "type": "array"
                    },
                    "uniqueDevicesCommands": {
                      "type": "array"
                    }
                  },
                  "required": []
                },
                "apic": {
                  "type": "object",
                  "properties": {
                    "commonDevicesCommandSets": {
                      "type": "array"
                    },
                    "uniqueDevicesCommands": {
                      "type": "array"
                    }
                  },
                  "required": []
                }
              },
              "required": []
            },
            "tags": {
              "title": "response",
              "type": "string",
              "examples": [
                "awesome"
              ]
            }
          },
          "required": [
            "regionalHubData",
            "tags"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "regionalHubData": {
              "$id": "regionalHubData",
              "type": "object",
              "properties": {
                "leaf": {
                  "type": "object",
                  "properties": {
                    "commonDevicesCommandSets": {
                      "type": "array"
                    },
                    "uniqueDevicesCommands": {
                      "type": "array"
                    }
                  },
                  "required": []
                },
                "spine": {
                  "type": "object",
                  "properties": {
                    "commonDevicesCommandSets": {
                      "type": "array"
                    },
                    "uniqueDevicesCommands": {
                      "type": "array"
                    }
                  },
                  "required": []
                },
                "dci": {
                  "type": "object",
                  "properties": {
                    "commonDevicesCommandSets": {
                      "type": "array"
                    },
                    "uniqueDevicesCommands": {
                      "type": "array"
                    }
                  },
                  "required": []
                },
                "internet": {
                  "type": "object",
                  "properties": {
                    "commonDevicesCommandSets": {
                      "type": "array"
                    },
                    "uniqueDevicesCommands": {
                      "type": "array"
                    }
                  },
                  "required": []
                },
                "mpls": {
                  "type": "object",
                  "properties": {
                    "commonDevicesCommandSets": {
                      "type": "array"
                    },
                    "uniqueDevicesCommands": {
                      "type": "array"
                    }
                  },
                  "required": []
                },
                "apic": {
                  "type": "object",
                  "properties": {
                    "commonDevicesCommandSets": {
                      "type": "array"
                    },
                    "uniqueDevicesCommands": {
                      "type": "array"
                    }
                  },
                  "required": []
                }
              },
              "required": []
            },
            "tags": {
              "title": "response",
              "type": "string",
              "examples": [
                "awesome"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "errorMessage": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            },
            "error": {
              "type": "boolean"
            },
            "report": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "created": "2023-02-20T17:40:57.664Z",
        "created_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.40.5-2021.1.123.0",
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "canvasVersion": 1,
        "created": "2022-03-10T14:24:09.562Z",
        "createdVersion": "5.40.5-2021.1.52.0",
        "created_by": {
          "provenance": "CloudAAA",
          "username": "jerry.dollens@itential.com",
          "firstname": "Jerry",
          "inactive": true
        },
        "description": null,
        "font_size": 12,
        "inputSchema": {
          "type": "object",
          "properties": {
            "repoOwner": {
              "title": "owner",
              "type": "string"
            },
            "repoName": {
              "title": "repo",
              "type": "string"
            },
            "filePath": {
              "title": "pathParam",
              "type": "string"
            },
            "branchName": {
              "title": "ref",
              "type": "string"
            }
          },
          "required": [
            "repoOwner",
            "repoName",
            "filePath",
            "branchName"
          ]
        },
        "lastUpdatedVersion": "5.40.5-2021.1.123.0",
        "last_updated": "2023-02-06T02:13:39.712Z",
        "last_updated_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "name": "Get File - GitHub",
        "outputSchema": {
          "type": "object",
          "properties": {
            "repoOwner": {
              "title": "owner",
              "type": "string"
            },
            "repoName": {
              "title": "repo",
              "type": "string"
            },
            "filePath": {
              "title": "pathParam",
              "type": "string"
            },
            "branchName": {
              "title": "ref",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "error": {
              "type": "boolean"
            },
            "fileResponse": {
              "title": "result",
              "type": "object"
            },
            "githubError": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "errorMessage": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "preAutomationTime": 0,
        "sla": 0,
        "tasks": {
          "9720": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": false
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.8729411764705882,
            "y": 0.3805970149253731
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.9607843137254902,
            "y": 0.3656716417910448
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": -0.5537254901960784,
            "y": 0.3678038379530917
          },
          "915f": {
            "name": "getReposOwnerRepoContentsPath",
            "canvasName": "getReposOwnerRepoContentsPath",
            "summary": "Get File",
            "description": "Get File",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.repoOwner",
                "repo": "$var.job.repoName",
                "pathParam": "$var.job.filePath",
                "pathParamQuery": "",
                "ref": "$var.job.branchName",
                "adapter_id": "GitHub"
              },
              "outgoing": {
                "result": "$var.job.fileResponse"
              },
              "error": "$var.job.githubError",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.7288712422007941,
            "y": 0.3720728534258456,
            "scheduled": false
          },
          "6a3a": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.5607843137254902,
            "y": 0.48081023454157784
          },
          "7f7f": {
            "name": "query",
            "canvasName": "query",
            "summary": "errorMessage",
            "description": "errorMessage",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.915f.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.7341176470588235,
            "y": 0.4914712153518124,
            "scheduled": false
          }
        },
        "transitions": {
          "5464": {},
          "9720": {
            "915f": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "9720": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "702a": {},
          "f797": {},
          "332f": {},
          "a85b": {},
          "915f": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "7f7f": {
              "type": "standard",
              "state": "error"
            }
          },
          "130d": {},
          "3d37": {},
          "6a3a": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "7f7f": {
            "6a3a": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "type": "automation",
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "runCommonDevicesCommandSets",
        "type": "automation",
        "tasks": {
          "2659": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.2344139650872818,
            "y": 0.724960254372019,
            "scheduled": false
          },
          "3919": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "resultsObject",
                "value": {}
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.4052428364933527,
            "y": 0.4562899786780384
          },
          "4707": {
            "name": "query",
            "canvasName": "query",
            "summary": "Set resultsObject job variable",
            "description": "Set resultsObject job variable",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.ead0.resultsObject"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.6949019607843138,
            "y": 0.5724946695095949,
            "scheduled": false
          },
          "7562": {
            "name": "query",
            "canvasName": "query",
            "summary": "Set resultsObject Job Variable",
            "description": "Set resultsObject Job Variable",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.b7f4.resultsObject"
              },
              "outgoing": {
                "return_data": "$var.job.resultsObject"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.2293564595356246,
            "y": 0.4562899786780384,
            "scheduled": false
          },
          "8752": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.923921568627451,
            "y": 0.7292110874200426,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.6627450980392157,
            "y": 0.4562899786780384
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.1749019607843136,
            "y": 0.4573560767590618
          },
          "b7f4": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "ParseCommonDevicesCommandSets",
            "description": "ParseCommonDevicesCommandSets",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dabf4a99d6ef6162a28b4b",
                "variableMap": {
                  "CommonDevicesCommandSets": "$var.job.CommonDevicesCommandSets",
                  "filePath": "$var.job.filePath"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "devices": null,
                "deviceType": null,
                "username": null,
                "port": null,
                "commands": null,
                "filePath": null,
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.07571643817838315,
            "y": 0.4562899786780384,
            "task_name": "ParseCommonDevicesCommandSets",
            "retrySettings": null
          },
          "6af4": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "runCommandArrayonDevice",
            "description": "",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "runCommandArrayonDevice",
                "variables": {
                  "username": {
                    "task": "b7f4",
                    "value": "username"
                  },
                  "port": {
                    "task": "b7f4",
                    "value": "port"
                  },
                  "deviceType": {
                    "task": "b7f4",
                    "value": "deviceType"
                  },
                  "password": {
                    "task": "job",
                    "value": "password"
                  },
                  "filePath": {
                    "task": "b7f4",
                    "value": "filePath"
                  },
                  "commandsArray": {
                    "task": "b7f4",
                    "value": "commands"
                  }
                },
                "data_array": "$var.b7f4.devices",
                "transformation": "63db112d99d6ef6162a28b52",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.527224733056346,
            "y": 0.4562899786780384
          },
          "4d60": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": false
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.5445822025604018,
            "y": 0.4562899786780384
          },
          "1b4d": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST error",
            "description": "JST error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.b7f4.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.0784313725490196,
            "y": 0.582089552238806,
            "scheduled": false
          },
          "4dd9": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.0533333333333332,
            "y": 0.7249466950959488,
            "scheduled": false
          },
          "5d60": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.1623529411764706,
            "y": 0.7281449893390192
          },
          "63c8": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Did all child jobs run successfully?",
            "description": "Did all child jobs run successfully?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "AllChildJobsRanSuccessfully",
                          "task": "f095"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0500201096110395,
            "y": 0.4562899786780384
          },
          "f095": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "childJobLoopCheck",
            "description": "childJobLoopCheck",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dadc5099d6ef6162a28b50",
                "variableMap": {
                  "childJobLoopDetails": "$var.6af4.job_details"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "AllChildJobsRanSuccessfully": null,
                "erroredMessages": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.9316742073968166,
            "y": 0.4562899786780384,
            "task_name": "childJobLoopCheck",
            "retrySettings": null
          },
          "6a5d": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST error",
            "description": "JST error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.f095.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.9294117647058824,
            "y": 0.5948827292110874,
            "scheduled": false
          },
          "a714": {
            "name": "arrayToString",
            "canvasName": "toString",
            "summary": "collect errorMessages from child jobs",
            "description": "collect errorMessages from child jobs",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.f095.erroredMessages"
              },
              "outgoing": {
                "arrayString": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.055686274509804,
            "y": 0.5874200426439232,
            "scheduled": false
          },
          "9e2a": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.08862745098039215,
            "y": 0.7185501066098081,
            "scheduled": false
          },
          "9d44": {
            "name": "updateJobDescription",
            "canvasName": "updateJobDescription",
            "summary": "Update Job Description",
            "description": "Overwrite the job description with a new one",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "description": "$var.b7f4.devices"
              },
              "outgoing": {
                "description": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.3526696825099387,
            "y": 0.4562899786780384,
            "scheduled": false
          },
          "a4c9": {
            "name": "runScript",
            "canvasName": "runScript",
            "summary": "Run a script in Automation Gateway",
            "description": "This method will run a script in Automation Gateway",
            "location": "Adapter",
            "locationType": "AutomationGateway",
            "app": "AutomationGateway",
            "type": "automatic",
            "displayName": "AutomationGateway",
            "variables": {
              "incoming": {
                "scriptName": "get_secret.sh",
                "hosts": "",
                "args": {
                  "argument_list": [
                    "nwauto_sys"
                  ]
                },
                "template": "",
                "adapter_id": "IAG"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.22738059600553906,
            "y": 0.4562899786780384,
            "scheduled": false
          },
          "af5f": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Temp Itential Testing",
            "description": "Temp Itential Testing",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": "admin"
              },
              "outgoing": {
                "response": "$var.job.password"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.22980392156862745,
            "y": 0.2771855010660981,
            "scheduled": false
          },
          "f550": {
            "name": "query",
            "canvasName": "query",
            "summary": "Password",
            "description": "Password",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response[0].stdout",
                "obj": "$var.a4c9.result"
              },
              "outgoing": {
                "return_data": "$var.job.password"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.07792358317885828,
            "y": 0.4562899786780384,
            "scheduled": false
          },
          "ead0": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "UpdateResultsObject",
            "description": "UpdateResultsObject",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.6af4.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.6973353411529218,
            "y": 0.4562899786780384,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "747a": {
            "name": "query",
            "canvasName": "query",
            "summary": "Set resultsObject Job Variable",
            "description": "Set resultsObject Job Variable",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.ead0.resultsObject"
              },
              "outgoing": {
                "return_data": "$var.job.resultsObject"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.8162041216774044,
            "y": 0.4562899786780384,
            "scheduled": false
          },
          "649c": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6909803921568628,
            "y": 0.7238805970149254,
            "scheduled": false
          },
          "f7d7": {
            "name": "query",
            "canvasName": "query",
            "summary": "Error",
            "description": "Error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.a4c9.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.23025768911055694,
            "y": 0.6017488076311606,
            "scheduled": false
          }
        },
        "transitions": {
          "2659": {},
          "3919": {
            "a4c9": {
              "type": "standard",
              "state": "success"
            }
          },
          "4707": {
            "649c": {
              "type": "standard",
              "state": "success"
            }
          },
          "7562": {
            "9d44": {
              "type": "standard",
              "state": "success"
            }
          },
          "8752": {
            "4dd9": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "4d60": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "b7f4": {
            "7562": {
              "type": "standard",
              "state": "success"
            },
            "1b4d": {
              "type": "standard",
              "state": "error"
            }
          },
          "6af4": {
            "ead0": {
              "type": "standard",
              "state": "success"
            }
          },
          "4d60": {
            "3919": {
              "type": "standard",
              "state": "success"
            }
          },
          "1b4d": {
            "9e2a": {
              "type": "standard",
              "state": "success"
            }
          },
          "6a99": {},
          "4dd9": {
            "5d60": {
              "type": "standard",
              "state": "success"
            }
          },
          "5d60": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "63c8": {
            "a714": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "f095": {
            "63c8": {
              "type": "standard",
              "state": "success"
            },
            "6a5d": {
              "type": "standard",
              "state": "error"
            }
          },
          "6a5d": {
            "8752": {
              "type": "standard",
              "state": "success"
            }
          },
          "a714": {
            "4dd9": {
              "type": "standard",
              "state": "success"
            }
          },
          "9e2a": {
            "649c": {
              "type": "standard",
              "state": "success"
            }
          },
          "9d44": {
            "6af4": {
              "type": "standard",
              "state": "success"
            }
          },
          "a4c9": {
            "af5f": {
              "type": "standard",
              "state": "error"
            },
            "f550": {
              "type": "standard",
              "state": "success"
            },
            "f7d7": {
              "type": "standard",
              "state": "error"
            }
          },
          "af5f": {
            "b7f4": {
              "type": "standard",
              "state": "success"
            }
          },
          "f550": {
            "b7f4": {
              "type": "standard",
              "state": "success"
            }
          },
          "a59": {},
          "ead0": {
            "4707": {
              "type": "standard",
              "state": "error"
            },
            "747a": {
              "type": "standard",
              "state": "success"
            }
          },
          "747a": {
            "f095": {
              "type": "standard",
              "state": "success"
            }
          },
          "649c": {
            "8752": {
              "type": "standard",
              "state": "success"
            }
          },
          "f7d7": {
            "2659": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "last_updated": "2023-03-01T17:17:16.187Z",
        "last_updated_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.123.0",
        "inputSchema": {
          "type": "object",
          "properties": {
            "CommonDevicesCommandSets": {
              "$id": "CommonDevicesCommandSets",
              "type": "object",
              "properties": {
                "devices": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "$id": "devices"
                },
                "deviceType": {
                  "type": "string",
                  "examples": [
                    "ios"
                  ]
                },
                "username": {
                  "type": "string",
                  "examples": [
                    "admin"
                  ]
                },
                "port": {
                  "type": "integer",
                  "examples": [
                    22
                  ]
                },
                "commands": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "cmd_1",
                        "cmd_3"
                      ]
                    }
                  },
                  "$id": "commands"
                }
              },
              "required": []
            },
            "filePath": {
              "$id": "filePath",
              "type": "string"
            }
          },
          "required": [
            "CommonDevicesCommandSets",
            "filePath"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "CommonDevicesCommandSets": {
              "$id": "CommonDevicesCommandSets",
              "type": "object",
              "properties": {
                "devices": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "$id": "devices"
                },
                "deviceType": {
                  "type": "string",
                  "examples": [
                    "ios"
                  ]
                },
                "username": {
                  "type": "string",
                  "examples": [
                    "admin"
                  ]
                },
                "port": {
                  "type": "integer",
                  "examples": [
                    22
                  ]
                },
                "commands": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "cmd_1",
                        "cmd_3"
                      ]
                    }
                  },
                  "$id": "commands"
                }
              },
              "required": []
            },
            "filePath": {
              "$id": "filePath",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "resultsObject": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            },
            "errorMessage": {
              "title": "arrayString",
              "type": "string",
              "examples": [
                "array,elements,in,a,string"
              ]
            },
            "password": {
              "title": "response",
              "type": "string",
              "examples": [
                "awesome"
              ]
            },
            "error": {
              "type": "boolean"
            }
          }
        },
        "created": "2023-02-01T19:26:28.784Z",
        "created_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.40.5-2021.1.123.0",
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "runUniqueDevicesCommands",
        "type": "automation",
        "tasks": {
          "4281": {
            "name": "runScript",
            "canvasName": "runScript",
            "summary": "Secret",
            "description": "Run IAG script to get secret.",
            "location": "Adapter",
            "locationType": "AutomationGateway",
            "app": "AutomationGateway",
            "type": "automatic",
            "displayName": "AutomationGateway",
            "variables": {
              "incoming": {
                "scriptName": "get_secret.sh",
                "hosts": "",
                "args": {
                  "argument_list": [
                    "nwauto_sys"
                  ]
                },
                "template": "",
                "adapter_id": "IAG"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.08602396883995708,
            "y": 0.6311300639658849,
            "scheduled": false
          },
          "8752": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.0729411764705883,
            "y": 0.9829424307036247,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.5003921568627451,
            "y": 0.6332622601279317
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.3333333333333333,
            "y": 0.6321961620469083
          },
          "b7f4": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "parseUniqueDevicesCommands",
            "description": "parseUniqueDevicesCommands",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63db1e9599d6ef6162a28b55",
                "variableMap": {
                  "uniqueDevicesCommands": "$var.job.uniqueDevicesCommands",
                  "filePath": "$var.job.filePath"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "device": null,
                "deviceType": null,
                "username": null,
                "port": null,
                "commands": null,
                "filePath": null,
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.20678866641973356,
            "y": 0.6311300639658849,
            "task_name": "parseUniqueDevicesCommands",
            "retrySettings": null
          },
          "4d60": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": false
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.3811764705882353,
            "y": 0.6332622601279317
          },
          "1b4d": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST error",
            "description": "JST error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.b7f4.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.20705882352941177,
            "y": 0.7665245202558635,
            "scheduled": false
          },
          "5d60": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.336470588235294,
            "y": 0.9829424307036247
          },
          "b538": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Itential Temp Testing",
            "description": "Itential Temp Testing",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": "admin"
              },
              "outgoing": {
                "response": "$var.job.password"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.09019607843137255,
            "y": 0.44243070362473347,
            "scheduled": false
          },
          "63c8": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Did child jobs run successfully?",
            "description": "Did child jobs run successfully?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "AllChildJobsRanSuccessfully",
                          "task": "60c"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.197515250249626,
            "y": 0.6311300639658849
          },
          "6a5d": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST Error",
            "description": "JST Error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.60c.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0713725490196078,
            "y": 0.7665245202558635,
            "scheduled": false
          },
          "9e2a": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.20941176470588235,
            "y": 0.9829424307036247,
            "scheduled": false
          },
          "d490": {
            "name": "updateJobDescription",
            "canvasName": "updateJobDescription",
            "summary": "Update Job Description",
            "description": "Overwrite the job description with a new one",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "description": "$var.b7f4.device"
              },
              "outgoing": {
                "description": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.4734575118270575,
            "y": 0.6311300639658849,
            "scheduled": false
          },
          "ebc5": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "RunCommandsandPushToGitHub",
            "description": "RunCommandsandPushToGitHub",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "RunCommandsandPushToGitHub",
                "variables": {
                  "filePath": {
                    "task": "b7f4",
                    "value": "filePath"
                  },
                  "device": {
                    "task": "b7f4",
                    "value": "device"
                  },
                  "deviceType": {
                    "task": "b7f4",
                    "value": "deviceType"
                  },
                  "port": {
                    "task": "b7f4",
                    "value": "port"
                  },
                  "username": {
                    "task": "b7f4",
                    "value": "username"
                  },
                  "password": {
                    "task": "job",
                    "value": "password"
                  }
                },
                "data_array": "$var.b7f4.commands",
                "transformation": "63dad6d999d6ef6162a28b4f",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.6602559878156076,
            "y": 0.6311300639658849
          },
          "60c": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "childJobLoopCheck",
            "description": "childJobLoopCheck",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dadc5099d6ef6162a28b50",
                "variableMap": {
                  "childJobLoopDetails": "$var.ebc5.job_details"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "AllChildJobsRanSuccessfully": null,
                "erroredMessages": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.0784291945563422,
            "y": 0.6311300639658849,
            "task_name": "childJobLoopCheck",
            "retrySettings": null
          },
          "c83f": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.2086274509803923,
            "y": 0.9829424307036247,
            "scheduled": false
          },
          "3a5d": {
            "name": "arrayToString",
            "canvasName": "toString",
            "summary": "Converts the array to a string.",
            "description": "Returns a string representing the specified array and its elements.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.60c.erroredMessages"
              },
              "outgoing": {
                "arrayString": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.1992156862745098,
            "y": 0.7665245202558635,
            "scheduled": false
          },
          "6fe8": {
            "name": "query",
            "canvasName": "query",
            "summary": "Password",
            "description": "Password",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response[0].stdout",
                "obj": "$var.4281.result"
              },
              "outgoing": {
                "return_data": "$var.job.password"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.06417319746578438,
            "y": 0.6311300639658849,
            "scheduled": false
          },
          "c12d": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "UpdateResultsObject",
            "description": "UpdateResultsObject",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.ebc5.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.8426100213543262,
            "y": 0.6311300639658849,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "fa6b": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST Error",
            "description": "JST Error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.c12d.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.847843137254902,
            "y": 0.7665245202558635,
            "scheduled": false
          },
          "75f9": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.84,
            "y": 0.9829424307036247,
            "scheduled": false
          },
          "bfad": {
            "name": "query",
            "canvasName": "query",
            "summary": "set resultsObject job variable",
            "description": "set resultsObject job variable",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.c12d.resultsObject"
              },
              "outgoing": {
                "return_data": "$var.job.resultsObject"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.9622189553578695,
            "y": 0.6311300639658849,
            "scheduled": false
          },
          "fc96": {
            "name": "query",
            "canvasName": "query",
            "summary": "set resultsObject job variable",
            "description": "set resultsObject job variable",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.b7f4.resultsObject"
              },
              "outgoing": {
                "return_data": "$var.job.resultsObject"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.34940413537368276,
            "y": 0.6311300639658849,
            "scheduled": false
          },
          "540c": {
            "name": "query",
            "canvasName": "query",
            "summary": "error",
            "description": "error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.4281.result"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.06431372549019608,
            "y": 0.7782515991471215,
            "scheduled": false
          },
          "e759": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.05568627450980392,
            "y": 0.9754797441364605,
            "scheduled": false
          },
          "d8d": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "resultsObject",
                "value": {}
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.26433915211970077,
            "y": 0.6343402225755167
          }
        },
        "transitions": {
          "4281": {
            "b538": {
              "type": "standard",
              "state": "error"
            },
            "6fe8": {
              "type": "standard",
              "state": "success"
            }
          },
          "8752": {
            "c83f": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "4d60": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "b7f4": {
            "1b4d": {
              "type": "standard",
              "state": "error"
            },
            "fc96": {
              "type": "standard",
              "state": "success"
            }
          },
          "4d60": {
            "d8d": {
              "type": "standard",
              "state": "success"
            }
          },
          "1b4d": {
            "9e2a": {
              "type": "standard",
              "state": "success"
            }
          },
          "6a99": {},
          "5d60": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "b538": {
            "b7f4": {
              "type": "standard",
              "state": "success"
            }
          },
          "63c8": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "3a5d": {
              "type": "standard",
              "state": "failure"
            }
          },
          "6a5d": {
            "8752": {
              "type": "standard",
              "state": "success"
            }
          },
          "9e2a": {
            "75f9": {
              "type": "standard",
              "state": "success"
            }
          },
          "d490": {
            "ebc5": {
              "type": "standard",
              "state": "success"
            }
          },
          "ebc5": {
            "c12d": {
              "type": "standard",
              "state": "success"
            }
          },
          "60c": {
            "63c8": {
              "type": "standard",
              "state": "success"
            },
            "6a5d": {
              "type": "standard",
              "state": "error"
            }
          },
          "c83f": {
            "5d60": {
              "type": "standard",
              "state": "success"
            }
          },
          "3a5d": {
            "c83f": {
              "type": "standard",
              "state": "success"
            }
          },
          "6fe8": {
            "b7f4": {
              "type": "standard",
              "state": "success"
            },
            "540c": {
              "type": "standard",
              "state": "failure"
            }
          },
          "c12d": {
            "fa6b": {
              "type": "standard",
              "state": "error"
            },
            "bfad": {
              "type": "standard",
              "state": "success"
            }
          },
          "fa6b": {
            "75f9": {
              "type": "standard",
              "state": "success"
            }
          },
          "75f9": {
            "8752": {
              "type": "standard",
              "state": "success"
            }
          },
          "bfad": {
            "60c": {
              "type": "standard",
              "state": "success"
            }
          },
          "fc96": {
            "d490": {
              "type": "standard",
              "state": "success"
            }
          },
          "540c": {
            "e759": {
              "type": "standard",
              "state": "success"
            }
          },
          "e759": {
            "9e2a": {
              "type": "standard",
              "state": "success"
            }
          },
          "d8d": {
            "4281": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "last_updated": "2023-03-01T19:59:39.054Z",
        "last_updated_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.123.0",
        "inputSchema": {
          "type": "object",
          "properties": {
            "uniqueDevicesCommands": {
              "$id": "uniqueDevicesCommands",
              "type": "object",
              "properties": {
                "device": {
                  "type": "string",
                  "examples": [
                    "172%2E20%2E103%2E134"
                  ]
                },
                "deviceType": {
                  "type": "string",
                  "examples": [
                    "ios"
                  ]
                },
                "username": {
                  "type": "string",
                  "examples": [
                    "admin"
                  ]
                },
                "port": {
                  "type": "integer",
                  "examples": [
                    22
                  ]
                },
                "commands": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "show interfaces"
                      ]
                    }
                  },
                  "$id": "commands"
                }
              },
              "required": []
            },
            "filePath": {
              "$id": "filePath",
              "type": "string"
            }
          },
          "required": [
            "uniqueDevicesCommands",
            "filePath"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "uniqueDevicesCommands": {
              "$id": "uniqueDevicesCommands",
              "type": "object",
              "properties": {
                "device": {
                  "type": "string",
                  "examples": [
                    "172%2E20%2E103%2E134"
                  ]
                },
                "deviceType": {
                  "type": "string",
                  "examples": [
                    "ios"
                  ]
                },
                "username": {
                  "type": "string",
                  "examples": [
                    "admin"
                  ]
                },
                "port": {
                  "type": "integer",
                  "examples": [
                    22
                  ]
                },
                "commands": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "show interfaces"
                      ]
                    }
                  },
                  "$id": "commands"
                }
              },
              "required": []
            },
            "filePath": {
              "$id": "filePath",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "error": {
              "type": "boolean"
            },
            "errorMessage": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            },
            "password": {
              "title": "response",
              "type": "string",
              "examples": [
                "awesome"
              ]
            },
            "resultsObject": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "created": "2023-02-02T02:21:07.585Z",
        "created_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.40.5-2021.1.123.0",
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "runCommandArrayonDevice",
        "type": "automation",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.5686274509803921,
            "y": 0.48720682302771856
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.9160784313725491,
            "y": 0.4914712153518124
          },
          "4d60": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": false
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.4454901960784314,
            "y": 0.48720682302771856
          },
          "4dd9": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.1811764705882353,
            "y": 0.7633262260127932,
            "scheduled": false
          },
          "5d60": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.9168627450980392,
            "y": 0.7633262260127932
          },
          "ff54": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "runCommandArrayonDeviceInput",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dacd5b99d6ef6162a28b4e",
                "variableMap": {
                  "device": "$var.job.device",
                  "deviceType": "$var.job.deviceType",
                  "port": "$var.job.port",
                  "username": "$var.job.username",
                  "password": "$var.job.password",
                  "filePath": "$var.job.filePath",
                  "commandsArray": "$var.job.commandsArray"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "device": null,
                "deviceType": null,
                "port": null,
                "username": null,
                "password": null,
                "filePath": null,
                "commandsArray": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.17333333333333334,
            "y": 0.48720682302771856,
            "task_name": "runCommandArrayonDeviceInput",
            "retrySettings": null
          },
          "2a41": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "RunCommandsandPushToGitHub",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "RunCommandsandPushToGitHub",
                "variables": {
                  "filePath": {
                    "task": "ff54",
                    "value": "filePath"
                  },
                  "device": {
                    "task": "ff54",
                    "value": "device"
                  },
                  "deviceType": {
                    "task": "ff54",
                    "value": "deviceType"
                  },
                  "port": {
                    "task": "ff54",
                    "value": "port"
                  },
                  "username": {
                    "task": "ff54",
                    "value": "username"
                  },
                  "password": {
                    "task": "ff54",
                    "value": "password"
                  }
                },
                "data_array": "$var.ff54.commandsArray",
                "transformation": "63dad6d999d6ef6162a28b4f",
                "loopType": "parallel"
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.3314967320012111,
            "y": 0.48933901918976547
          },
          "7cb": {
            "name": "query",
            "canvasName": "query",
            "summary": "get errorMessage",
            "description": "get errorMessage",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.ff54.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.1780392156862745,
            "y": 0.6119402985074627,
            "scheduled": false
          },
          "b86": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "childJobLoopCheck",
            "description": "childJobLoopCheck",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dadc5099d6ef6162a28b50",
                "variableMap": {
                  "childJobLoopDetails": "$var.2a41.job_details"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "AllChildJobsRanSuccessfully": null,
                "erroredMessages": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.7058823529411765,
            "y": 0.48933901918976547,
            "task_name": "childJobLoopCheck",
            "retrySettings": null
          },
          "2bef": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Did all child jobs run successfully?",
            "description": "Did all child jobs run successfully?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "AllChildJobsRanSuccessfully",
                          "task": "b86"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.8243137254901961,
            "y": 0.4914712153518124
          },
          "15b0": {
            "name": "query",
            "canvasName": "query",
            "summary": "get errorMessage",
            "description": "get errorMessage",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.b86.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.6972549019607843,
            "y": 0.6119402985074627,
            "scheduled": false
          },
          "2c91": {
            "name": "arrayToString",
            "canvasName": "toString",
            "summary": "collect errorMessages from child jobs",
            "description": "collect errorMessages from child jobs",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.b86.erroredMessages"
              },
              "outgoing": {
                "arrayString": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.8274509803921568,
            "y": 0.6119402985074627,
            "scheduled": false
          },
          "3f1c": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.7003921568627451,
            "y": 0.7633262260127932,
            "scheduled": false
          },
          "ddac": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.8305882352941176,
            "y": 0.7633262260127932,
            "scheduled": false
          },
          "d1ca": {
            "name": "updateJobDescription",
            "canvasName": "updateJobDescription",
            "summary": "Update Job Description",
            "description": "Overwrite the job description with a new one",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "description": "$var.7e60.jobDescription"
              },
              "outgoing": {
                "description": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.1450980392156863,
            "y": 0.4936034115138593,
            "scheduled": false
          },
          "7e60": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "buildJobDescription",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dc32dcbe82950afcced644",
                "variableMap": {
                  "device": "$var.ff54.device",
                  "commands": "$var.ff54.commandsArray",
                  "designations": "$var.job.filePath"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "jobDescription": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.009411764705882352,
            "y": 0.4957356076759062,
            "task_name": "buildJobDescription",
            "retrySettings": null
          },
          "a3f6": {
            "name": "query",
            "canvasName": "query",
            "summary": "get errorMessage",
            "description": "get errorMessage",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.7e60.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.01568627450980392,
            "y": 0.6119402985074627,
            "scheduled": false
          },
          "b6ea": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.013333333333333334,
            "y": 0.7633262260127932,
            "scheduled": false
          },
          "17d6": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "UpdateResultsObject",
            "description": "UpdateResultsObject",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dd5199be82950afcced645",
                "variableMap": {
                  "childJobLoopDetails": "$var.2a41.job_details"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.48470588235294115,
            "y": 0.4946695095948827,
            "task_name": "UpdateResultsObject",
            "retrySettings": null
          },
          "ad2a": {
            "name": "query",
            "canvasName": "query",
            "summary": "get errorMessage",
            "description": "get errorMessage",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.17d6.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.476078431372549,
            "y": 0.6119402985074627,
            "scheduled": false
          },
          "62ab": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.47372549019607846,
            "y": 0.7633262260127932,
            "scheduled": false
          },
          "20fe": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "resultsObject",
                "value": {}
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.3192156862745098,
            "y": 0.48507462686567165
          },
          "992a": {
            "name": "query",
            "canvasName": "query",
            "summary": "resultsObject",
            "description": "set resultsObject job variable",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.17d6.resultsObject"
              },
              "outgoing": {
                "return_data": "$var.job.resultsObject"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5929411764705882,
            "y": 0.4957356076759062,
            "scheduled": false
          }
        },
        "transitions": {
          "6787": {},
          "9065": {},
          "workflow_start": {
            "4d60": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "4d60": {
            "20fe": {
              "type": "standard",
              "state": "success"
            }
          },
          "6a99": {},
          "4dd9": {
            "b6ea": {
              "type": "standard",
              "state": "success"
            }
          },
          "5d60": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "7c8f": {},
          "9e61": {},
          "2f8c": {},
          "ff54": {
            "7cb": {
              "type": "standard",
              "state": "error"
            },
            "7e60": {
              "type": "standard",
              "state": "success"
            }
          },
          "2a41": {
            "17d6": {
              "type": "standard",
              "state": "success"
            }
          },
          "7caa": {},
          "7cb": {
            "4dd9": {
              "type": "standard",
              "state": "success"
            }
          },
          "b86": {
            "2bef": {
              "type": "standard",
              "state": "success"
            },
            "15b0": {
              "type": "standard",
              "state": "error"
            }
          },
          "2bef": {
            "2c91": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "15b0": {
            "3f1c": {
              "type": "standard",
              "state": "success"
            }
          },
          "be5e": {},
          "2c91": {
            "ddac": {
              "type": "standard",
              "state": "success"
            }
          },
          "3f1c": {
            "ddac": {
              "type": "standard",
              "state": "success"
            }
          },
          "ddac": {
            "5d60": {
              "type": "standard",
              "state": "success"
            }
          },
          "d1ca": {
            "2a41": {
              "type": "standard",
              "state": "success"
            }
          },
          "7e60": {
            "d1ca": {
              "type": "standard",
              "state": "success"
            },
            "a3f6": {
              "type": "standard",
              "state": "error"
            }
          },
          "a3f6": {
            "b6ea": {
              "type": "standard",
              "state": "success"
            }
          },
          "b6ea": {
            "62ab": {
              "type": "standard",
              "state": "success"
            }
          },
          "17d6": {
            "ad2a": {
              "type": "standard",
              "state": "error"
            },
            "992a": {
              "type": "standard",
              "state": "success"
            }
          },
          "ad2a": {
            "62ab": {
              "type": "standard",
              "state": "success"
            }
          },
          "62ab": {
            "3f1c": {
              "type": "standard",
              "state": "success"
            }
          },
          "20fe": {
            "ff54": {
              "type": "standard",
              "state": "success"
            }
          },
          "992a": {
            "b86": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "last_updated": "2023-02-08T15:46:13.817Z",
        "last_updated_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.123.0",
        "inputSchema": {
          "type": "object",
          "properties": {
            "device": {
              "$id": "device",
              "type": "string"
            },
            "deviceType": {
              "$id": "deviceType",
              "type": "string"
            },
            "port": {
              "$id": "port",
              "type": "number"
            },
            "username": {
              "$id": "username",
              "type": "string"
            },
            "password": {
              "$id": "password",
              "type": "string"
            },
            "filePath": {
              "$id": "filePath",
              "type": "string"
            },
            "commandsArray": {
              "$id": "commandsArray",
              "type": "array"
            }
          },
          "required": [
            "device",
            "deviceType",
            "port",
            "username",
            "password",
            "filePath",
            "commandsArray"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "device": {
              "$id": "device",
              "type": "string"
            },
            "deviceType": {
              "$id": "deviceType",
              "type": "string"
            },
            "port": {
              "$id": "port",
              "type": "number"
            },
            "username": {
              "$id": "username",
              "type": "string"
            },
            "password": {
              "$id": "password",
              "type": "string"
            },
            "filePath": {
              "$id": "filePath",
              "type": "string"
            },
            "commandsArray": {
              "$id": "commandsArray",
              "type": "array"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "error": {
              "type": "boolean"
            },
            "errorMessage": {
              "title": "arrayString",
              "type": "string",
              "examples": [
                "array,elements,in,a,string"
              ]
            },
            "resultsObject": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "created": "2023-02-01T19:41:30.173Z",
        "created_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.40.5-2021.1.123.0",
        "tags": [],
        "canvasVersion": 1,
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "RunCommandsandPushToGitHub",
        "type": "automation",
        "tasks": {
          "160": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Child Job Run Successfully?",
            "description": "Child Job Run Successfully?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "error",
                        "operand_1": {
                          "variable": "job_details",
                          "task": "6dd0"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.989869280278593,
            "y": 0.48081023454157784
          },
          "7762": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "parseNetmikoSendCommandforGitHub (1)",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63d8191d99d6ef6162a28b3f",
                "variableMap": {
                  "netmikoResult": "$var.e85c.return_data",
                  "filePath": "$var.job.filePath"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "netMikoResultsArray_copy": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5707189539223236,
            "y": 0.48081023454157784,
            "task_name": "parseNetmikoSendCommandforGitHub (1)",
            "retrySettings": null
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.6635294117647059,
            "y": 0.48081023454157784
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.1137254901960785,
            "y": 0.48294243070362475
          },
          "6af4": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "RunNetmikoCommands",
            "description": "RunNetmikoCommands",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "RunNetmikoCommands",
                "variables": {
                  "commands": {
                    "editable": true,
                    "task": "job",
                    "value": "commands"
                  },
                  "host": {
                    "editable": true,
                    "task": "job",
                    "value": "device"
                  },
                  "deviceType": {
                    "editable": true,
                    "task": "job",
                    "value": "deviceType"
                  },
                  "port": {
                    "editable": true,
                    "task": "job",
                    "value": "port"
                  },
                  "username": {
                    "editable": true,
                    "task": "job",
                    "value": "username"
                  },
                  "password": {
                    "editable": true,
                    "task": "job",
                    "value": "password"
                  },
                  "designations": {
                    "editable": true,
                    "task": "job",
                    "value": "filePath"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.09333332993865559,
            "y": 0.48081023454157784
          },
          "e85c": {
            "name": "query",
            "canvasName": "query",
            "summary": "NetmikoResult",
            "description": "NetmikoResult",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "NetmikoResult",
                "obj": "$var.6af4.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.2245098025406828,
            "y": 0.48081023454157784,
            "scheduled": false
          },
          "6dd0": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Child Job",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Push Files to GitHub",
                "variables": {
                  "netMikoResultsArray": {
                    "editable": true,
                    "task": "7762",
                    "value": "netMikoResultsArray_copy"
                  },
                  "owner": {
                    "editable": true,
                    "task": "static",
                    "value": "NickAOrg"
                  },
                  "repo": {
                    "editable": true,
                    "task": "static",
                    "value": "TestTwo"
                  },
                  "adapter_id": {
                    "editable": true,
                    "task": "static",
                    "value": "GitHubNickA"
                  },
                  "commitMessage": {
                    "editable": true,
                    "task": "static",
                    "value": "TempCommitMessage"
                  },
                  "branch": {
                    "editable": true,
                    "task": "static",
                    "value": "main"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.8626143777999764,
            "y": 0.48081023454157784
          },
          "4d60": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": false
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.5385490202867786,
            "y": 0.48081023454157784
          },
          "f2": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Child Job Run Successfully?",
            "description": "Child Job Run Successfully?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "error",
                        "operand_1": {
                          "variable": "job_details",
                          "task": "6af4"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.40607843252328735,
            "y": 0.48081023454157784
          },
          "42a": {
            "name": "query",
            "canvasName": "query",
            "summary": "child job error",
            "description": "child job error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "errorMessage",
                "obj": "$var.6af4.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.4023529411764706,
            "y": 0.5959488272921108,
            "scheduled": false
          },
          "f63f": {
            "name": "query",
            "canvasName": "query",
            "summary": "child job error",
            "description": "child job error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "errorMessage",
                "obj": "$var.6dd0.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.9874509803921568,
            "y": 0.5959488272921108,
            "scheduled": false
          },
          "6a99": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST error",
            "description": "JST error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.7762.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.567843137254902,
            "y": 0.5959488272921108,
            "scheduled": false
          },
          "c763": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.41411764705882353,
            "y": 0.7313432835820896,
            "scheduled": false
          },
          "1d2b": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.571764705882353,
            "y": 0.7313432835820896,
            "scheduled": false
          },
          "4dd9": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.9945098039215686,
            "y": 0.7313432835820896,
            "scheduled": false
          },
          "5d60": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.1035294117647059,
            "y": 0.7313432835820896
          },
          "45f7": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Run Github?",
            "description": "Run Github?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": true,
                          "task": "static"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.7353594753213599,
            "y": 0.48081023454157784
          },
          "fc6b": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Skipping github for now",
            "description": "Skipping github for now",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.7411764705882353,
            "y": 0.2771855010660981,
            "scheduled": false
          },
          "681d": {
            "name": "updateJobDescription",
            "canvasName": "updateJobDescription",
            "summary": "Update Job Description",
            "description": "Overwrite the job description with a new one",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "description": "$var.5faa.jobDescription"
              },
              "outgoing": {
                "description": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.07862745489290211,
            "y": 0.48081023454157784,
            "scheduled": false
          },
          "5faa": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "buildJobDescription",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dc32dcbe82950afcced644",
                "variableMap": {
                  "device": "$var.job.device",
                  "commands": "$var.job.commands",
                  "designations": "$var.job.filePath"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "jobDescription": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.24169934884095798,
            "y": 0.48081023454157784,
            "task_name": "buildJobDescription",
            "retrySettings": null
          },
          "e5d": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST Error",
            "description": "JST Error",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.5faa.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.24235294117647058,
            "y": 0.5959488272921108,
            "scheduled": false
          },
          "933d": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.2384313725490196,
            "y": 0.7313432835820896,
            "scheduled": false
          },
          "ad7f": {
            "name": "query",
            "canvasName": "query",
            "summary": "ResultsObject",
            "description": "ResultsObject",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "resultsObject",
                "obj": "$var.6af4.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.resultsObject"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.3138562092845797,
            "y": 0.48081023454157784,
            "scheduled": false
          },
          "f3b8": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "resultsObject",
                "value": {}
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.3923921582206162,
            "y": 0.48081023454157784
          }
        },
        "transitions": {
          "160": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "f63f": {
              "type": "standard",
              "state": "failure"
            }
          },
          "7762": {
            "6a99": {
              "type": "standard",
              "state": "error"
            },
            "45f7": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "4d60": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "6af4": {
            "e85c": {
              "type": "standard",
              "state": "success"
            }
          },
          "e85c": {
            "ad7f": {
              "type": "standard",
              "state": "success"
            }
          },
          "6dd0": {
            "160": {
              "type": "standard",
              "state": "success"
            }
          },
          "4d60": {
            "f3b8": {
              "type": "standard",
              "state": "success"
            }
          },
          "f2": {
            "7762": {
              "type": "standard",
              "state": "success"
            },
            "42a": {
              "type": "standard",
              "state": "failure"
            }
          },
          "42a": {
            "c763": {
              "type": "standard",
              "state": "success"
            }
          },
          "f63f": {
            "4dd9": {
              "type": "standard",
              "state": "success"
            }
          },
          "6a99": {
            "1d2b": {
              "type": "standard",
              "state": "success"
            }
          },
          "c763": {
            "1d2b": {
              "type": "standard",
              "state": "success"
            }
          },
          "1d2b": {
            "4dd9": {
              "type": "standard",
              "state": "success"
            }
          },
          "4dd9": {
            "5d60": {
              "type": "standard",
              "state": "success"
            }
          },
          "5d60": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "45f7": {
            "6dd0": {
              "type": "standard",
              "state": "success"
            },
            "fc6b": {
              "type": "standard",
              "state": "failure"
            }
          },
          "fc6b": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "681d": {
            "6af4": {
              "type": "standard",
              "state": "success"
            }
          },
          "5faa": {
            "681d": {
              "type": "standard",
              "state": "success"
            },
            "e5d": {
              "type": "standard",
              "state": "error"
            }
          },
          "e5d": {
            "933d": {
              "type": "standard",
              "state": "success"
            }
          },
          "933d": {
            "c763": {
              "type": "standard",
              "state": "success"
            }
          },
          "ad7f": {
            "f2": {
              "type": "standard",
              "state": "success"
            }
          },
          "f3b8": {
            "5faa": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "last_updated": "2023-03-01T20:37:03.358Z",
        "last_updated_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.123.0",
        "inputSchema": {
          "type": "object",
          "properties": {
            "filePath": {
              "$id": "filePath",
              "type": "string"
            },
            "commands": {
              "$id": "commands",
              "type": "array"
            },
            "device": {
              "$id": "host",
              "type": "string"
            },
            "deviceType": {
              "$id": "deviceType",
              "type": "string"
            },
            "port": {
              "$id": "port",
              "type": "number"
            },
            "username": {
              "$id": "username",
              "type": "string"
            },
            "password": {
              "$id": "password",
              "type": "string"
            }
          },
          "required": [
            "filePath",
            "commands",
            "device",
            "deviceType",
            "port",
            "username",
            "password"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "filePath": {
              "$id": "filePath",
              "type": "string"
            },
            "commands": {
              "$id": "commands",
              "type": "array"
            },
            "device": {
              "$id": "host",
              "type": "string"
            },
            "deviceType": {
              "$id": "deviceType",
              "type": "string"
            },
            "port": {
              "$id": "port",
              "type": "number"
            },
            "username": {
              "$id": "username",
              "type": "string"
            },
            "password": {
              "$id": "password",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "error": {
              "type": "boolean"
            },
            "errorMessage": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            },
            "resultsObject": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "created": "2023-02-01T21:16:04.365Z",
        "created_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.40.5-2021.1.123.0",
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "RunNetmikoCommands",
        "type": "automation",
        "tasks": {
          "7645": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "CreateNetmikoInput",
            "description": "CreateNetmikoInput",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63d966e399d6ef6162a28b40",
                "variableMap": {
                  "commands": "$var.job.commands",
                  "host": "$var.job.host",
                  "deviceType": "$var.job.deviceType",
                  "port": "$var.job.port",
                  "username": "$var.job.username",
                  "password": "$var.job.password",
                  "fast_cli": false
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "netmikoSendCommandParameters": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.09860368113254266,
            "y": 0.4253731343283582,
            "task_name": "CapOneFormData",
            "retrySettings": null
          },
          "7855": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Did command execute successfully?",
            "description": "Did command execute successfully?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "response.status",
                        "operand_1": {
                          "variable": "result",
                          "task": "c2d0"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": "FAILURE",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.6495769451773741,
            "y": 0.4253731343283582
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.6235294117647059,
            "y": 0.4253731343283582
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.7725490196078432,
            "y": 0.42430703624733473
          },
          "c2d0": {
            "name": "netmikoSendCommand",
            "canvasName": "netmikoSendCommand",
            "summary": "netmiko send_command",
            "description": "netmiko send_command",
            "location": "Adapter",
            "locationType": "AutomationGateway",
            "app": "AutomationGateway",
            "type": "automatic",
            "displayName": "AutomationGateway",
            "variables": {
              "incoming": {
                "netmikoSendCommandParameters": "$var.7645.netmikoSendCommandParameters",
                "adapter_id": "DSUP IAG-2021.1"
              },
              "outgoing": {
                "result": "$var.job.NetmikoResult"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.25320973924987034,
            "y": 0.4253731343283582,
            "scheduled": false
          },
          "6c3e": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": false
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.5190409989110502,
            "y": 0.4253731343283582
          },
          "c7c2": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.7654901960784314,
            "y": 0.7185501066098081
          },
          "797f": {
            "name": "query",
            "canvasName": "query",
            "summary": "Netmiko Error Message",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.error_msg",
                "obj": "$var.c2d0.result"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.6541176470588236,
            "y": 0.5671641791044776,
            "scheduled": false
          },
          "cbe2": {
            "name": "query",
            "canvasName": "query",
            "summary": "Netmiko Error Message",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.c2d0.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.2541176470588235,
            "y": 0.5671641791044776,
            "scheduled": false
          },
          "f78": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST Error Message",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.7645.netmikoSendCommandParameters"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.09647058823529411,
            "y": 0.5671641791044776,
            "scheduled": false
          },
          "bec6": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6580392156862745,
            "y": 0.7196162046908315,
            "scheduled": false
          },
          "af1b": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.2690196078431373,
            "y": 0.7196162046908315,
            "scheduled": false
          },
          "1ea9": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.1011764705882353,
            "y": 0.7196162046908315,
            "scheduled": false
          },
          "6f7": {
            "name": "updateJobDescription",
            "canvasName": "updateJobDescription",
            "summary": "Update Job Description",
            "description": "Update Job Description",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "description": "$var.b140.jobDescription"
              },
              "outgoing": {
                "description": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.246260252831879,
            "y": 0.4253731343283582,
            "scheduled": false
          },
          "b140": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "buildJobDescription",
            "description": "buildJobDescription",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63dc32dcbe82950afcced644",
                "variableMap": {
                  "device": "$var.job.host",
                  "commands": "$var.job.commands",
                  "designations": "$var.job.designations"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "jobDescription": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.3888401681556634,
            "y": 0.4253731343283582,
            "task_name": "buildJobDescription",
            "retrySettings": null
          },
          "38cd": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST Error Message",
            "description": "JST Error Message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.b140.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.3905882352941176,
            "y": 0.5671641791044776,
            "scheduled": false
          },
          "7e75": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.3905882352941176,
            "y": 0.7196162046908315,
            "scheduled": false
          },
          "50ab": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "createResultObjectFromNetmikoResult",
            "description": "createResultObjectFromNetmikoResult",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e0439fbe82950afcced648",
                "variableMap": {
                  "netmikoResult": "$var.c2d0.result"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.4415412905551958,
            "y": 0.4253731343283582,
            "task_name": "createResultObject",
            "retrySettings": null
          },
          "8bf7": {
            "name": "query",
            "canvasName": "query",
            "summary": "resultsObject",
            "description": "set resultsObject job variable",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.50ab.resultsObject"
              },
              "outgoing": {
                "return_data": "$var.job.resultsObject"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5778467005629379,
            "y": 0.4253731343283582,
            "scheduled": false
          },
          "d5fa": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST Error Message",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.50ab.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.44392156862745097,
            "y": 0.5671641791044776,
            "scheduled": false
          },
          "cacc": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.4454901960784314,
            "y": 0.7196162046908315,
            "scheduled": false
          },
          "a5d": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "createResultObject",
            "description": "createResultObject",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "63e056aabe82950afcced64a",
                "variableMap": {
                  "commands": "$var.job.commands",
                  "device": "$var.job.host"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "resultsObject": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.10472608814477499,
            "y": 0.4253731343283582,
            "task_name": "createResultObject",
            "retrySettings": null
          },
          "441e": {
            "name": "query",
            "canvasName": "query",
            "summary": "resultsObject",
            "description": "set resultsObject job variable",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.a5d.resultsObject"
              },
              "outgoing": {
                "return_data": "$var.job.resultsObject"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.003976235687201489,
            "y": 0.4253731343283582,
            "scheduled": false
          },
          "d9fa": {
            "name": "query",
            "canvasName": "query",
            "summary": "JST Error Message",
            "description": "JST Error Message",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.a5d.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.10588235294117647,
            "y": 0.5671641791044776,
            "scheduled": false
          },
          "7a85": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Error Handler",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.10588235294117647,
            "y": 0.7196162046908315,
            "scheduled": false
          }
        },
        "transitions": {
          "7645": {
            "c2d0": {
              "type": "standard",
              "state": "success"
            },
            "f78": {
              "type": "standard",
              "state": "error"
            }
          },
          "7855": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "797f": {
              "type": "standard",
              "state": "failure"
            }
          },
          "workflow_start": {
            "6c3e": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "64a8": {},
          "c2d0": {
            "cbe2": {
              "type": "standard",
              "state": "error"
            },
            "50ab": {
              "type": "standard",
              "state": "success"
            }
          },
          "6c3e": {
            "b140": {
              "type": "standard",
              "state": "success"
            }
          },
          "c7c2": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "797f": {
            "bec6": {
              "type": "standard",
              "state": "success"
            }
          },
          "cbe2": {
            "af1b": {
              "type": "standard",
              "state": "success"
            }
          },
          "f78": {
            "1ea9": {
              "type": "standard",
              "state": "success"
            }
          },
          "bec6": {
            "c7c2": {
              "type": "standard",
              "state": "success"
            }
          },
          "af1b": {
            "cacc": {
              "type": "standard",
              "state": "success"
            }
          },
          "1ea9": {
            "af1b": {
              "type": "standard",
              "state": "success"
            }
          },
          "6f7": {
            "a5d": {
              "type": "standard",
              "state": "success"
            }
          },
          "b140": {
            "6f7": {
              "type": "standard",
              "state": "success"
            },
            "38cd": {
              "type": "standard",
              "state": "error"
            }
          },
          "38cd": {
            "7e75": {
              "type": "standard",
              "state": "success"
            }
          },
          "7e75": {
            "7a85": {
              "type": "standard",
              "state": "success"
            }
          },
          "50ab": {
            "8bf7": {
              "type": "standard",
              "state": "success"
            },
            "d5fa": {
              "type": "standard",
              "state": "error"
            }
          },
          "8bf7": {
            "7855": {
              "type": "standard",
              "state": "success"
            }
          },
          "d5fa": {
            "cacc": {
              "type": "standard",
              "state": "success"
            }
          },
          "cacc": {
            "bec6": {
              "type": "standard",
              "state": "success"
            }
          },
          "a5d": {
            "441e": {
              "type": "standard",
              "state": "success"
            },
            "d9fa": {
              "type": "standard",
              "state": "error"
            }
          },
          "441e": {
            "7645": {
              "type": "standard",
              "state": "success"
            }
          },
          "d9fa": {
            "7a85": {
              "type": "standard",
              "state": "success"
            }
          },
          "7a85": {
            "1ea9": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "last_updated": "2023-02-20T19:54:47.737Z",
        "last_updated_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.123.0",
        "inputSchema": {
          "type": "object",
          "properties": {
            "commands": {
              "$id": "commands",
              "type": "array"
            },
            "host": {
              "$id": "host",
              "type": "string"
            },
            "deviceType": {
              "$id": "deviceType",
              "type": "string"
            },
            "port": {
              "$id": "port",
              "type": "number"
            },
            "username": {
              "$id": "username",
              "type": "string"
            },
            "password": {
              "$id": "password",
              "type": "string"
            },
            "designations": {
              "$id": "designations",
              "type": "string"
            }
          },
          "required": [
            "commands",
            "host",
            "deviceType",
            "port",
            "username",
            "password",
            "designations"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "commands": {
              "$id": "commands",
              "type": "array"
            },
            "host": {
              "$id": "host",
              "type": "string"
            },
            "deviceType": {
              "$id": "deviceType",
              "type": "string"
            },
            "port": {
              "$id": "port",
              "type": "number"
            },
            "username": {
              "$id": "username",
              "type": "string"
            },
            "password": {
              "$id": "password",
              "type": "string"
            },
            "designations": {
              "$id": "designations",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "NetmikoResult": {
              "title": "result",
              "type": "object"
            },
            "error": {
              "type": "boolean"
            },
            "errorMessage": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            },
            "resultsObject": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "created": "2023-02-01T19:55:52.557Z",
        "created_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.40.5-2021.1.123.0",
        "canvasVersion": 1,
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "created": "2023-01-30T18:52:36.584Z",
        "createdVersion": "5.44.8-2021.2.60.0",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": true,
          "email": ""
        },
        "description": "",
        "font_size": 12,
        "inputSchema": {
          "type": "object",
          "properties": {
            "netMikoResultsArray": {
              "title": "data_array",
              "type": "array",
              "items": [
                {
                  "type": [
                    "string",
                    "number",
                    "integer",
                    "object",
                    "array",
                    "boolean",
                    "null"
                  ]
                }
              ]
            },
            "owner": {
              "title": "owner",
              "type": "string"
            },
            "repo": {
              "title": "repo",
              "type": "string"
            },
            "adapter_id": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "commitMessage": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "branch": {
              "title": "branch",
              "type": "string"
            }
          },
          "required": [
            "netMikoResultsArray",
            "owner",
            "repo",
            "adapter_id",
            "commitMessage",
            "branch"
          ]
        },
        "lastUpdatedVersion": "5.40.5-2021.1.123.0",
        "last_updated": "2023-02-02T21:16:19.734Z",
        "last_updated_by": {
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com",
          "firstname": "Nick",
          "inactive": false,
          "email": ""
        },
        "name": "Push Files to GitHub",
        "outputSchema": {
          "type": "object",
          "properties": {
            "netMikoResultsArray": {
              "title": "data_array",
              "type": "array",
              "items": [
                {
                  "type": [
                    "string",
                    "number",
                    "integer",
                    "object",
                    "array",
                    "boolean",
                    "null"
                  ]
                }
              ]
            },
            "owner": {
              "title": "owner",
              "type": "string"
            },
            "repo": {
              "title": "repo",
              "type": "string"
            },
            "adapter_id": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "commitMessage": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "branch": {
              "title": "branch",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "treeArray": {
              "title": "pushedArray",
              "type": "array",
              "items": [
                {
                  "type": [
                    "string",
                    "number",
                    "integer",
                    "object",
                    "array",
                    "boolean",
                    "null"
                  ]
                }
              ],
              "examples": [
                [
                  "Device1",
                  "Device2",
                  "Device3"
                ]
              ]
            },
            "payLoad": {
              "title": "object",
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "first": {
                    "second": {
                      "third": "last"
                    }
                  }
                }
              ]
            },
            "shaArray": {
              "title": "pushedArray",
              "type": "array",
              "items": [
                {
                  "type": [
                    "string",
                    "number",
                    "integer",
                    "object",
                    "array",
                    "boolean",
                    "null"
                  ]
                }
              ],
              "examples": [
                [
                  "Device1",
                  "Device2",
                  "Device3"
                ]
              ]
            },
            "error": {
              "type": "boolean"
            },
            "errorMessage": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "preAutomationTime": 0,
        "sla": 0,
        "tasks": {
          "6602": {
            "name": "numberToString",
            "canvasName": "toString",
            "summary": "Convert number to string.",
            "description": "Returns a string representing the specified Number object.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Number",
            "variables": {
              "incoming": {
                "num": 100644,
                "radix": ""
              },
              "outgoing": {
                "numToString": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5192156862745098,
            "y": 1.2164179104477613,
            "scheduled": false
          },
          "7884": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "treeArray",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.3755832365007411,
            "y": 0.2260127931769723
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.314214463840399,
            "y": 0.2138314785373609
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 2.441568627450981,
            "y": 0.2260127931769723
          },
          "2e4d": {
            "name": "forEach",
            "canvasName": "forEach",
            "summary": "For Each Loop",
            "description": "Loop over each file to be committed",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_array": "$var.job.netMikoResultsArray"
              },
              "outgoing": {
                "current_item": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5273417889288139,
            "y": 0.2260127931769723,
            "scheduled": false
          },
          "3a1c": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "payLoad",
                "value": {
                  "content": "aGpmZGM=",
                  "encoding": "utf-8|base64"
                }
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5231372549019608,
            "y": 0.417910447761194
          },
          "d4b5": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "61575550f19f3400ded634bd",
                "variableMap": {
                  "inputObject": "$var.2e4d.current_item"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": false,
                  "revertToDefaultValue": false
                }
              },
              "outgoing": {
                "action": null,
                "filePath": null,
                "content": null
              },
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5192156862745098,
            "y": 0.5756929637526652,
            "task_name": "convertObjecttoStringGithubSingleRepo",
            "retrySettings": null
          },
          "e95f": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object Key",
            "description": "Set content data per file",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.payLoad",
                "path": [
                  "content"
                ],
                "value": "$var.d4b5.content"
              },
              "outgoing": {
                "object": "$var.job.payLoad"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5192156862745098,
            "y": 0.7388059701492538,
            "scheduled": false
          },
          "7ece": {
            "name": "postReposOwnerRepoGitBlobs",
            "canvasName": "postReposOwnerRepoGitBlobs",
            "summary": "Create a Blob.",
            "description": "Create a Blob. This is done for each file and adds the file data to the github server",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "body": "$var.job.payLoad",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5192156862745098,
            "y": 0.920042643923241,
            "scheduled": false
          },
          "423c": {
            "name": "postReposOwnerRepoGitTrees",
            "canvasName": "postReposOwnerRepoGitTrees",
            "summary": "Create a tree",
            "description": "Create a Tree. This will create the tree with the files and their paths for git",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "body": "$var.36ba.merged_object",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.814401377245629,
            "y": 0.2260127931769723,
            "scheduled": false
          },
          "cc5a": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query blob sha",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.sha",
                "obj": "$var.7ece.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5192156862745098,
            "y": 1.068230277185501,
            "scheduled": false
          },
          "5f91": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Adds an element to the end of the array.",
            "description": "Adds one element to the end of an array and returns the (newly modified) array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.job.treeArray",
                "elementN": "$var.97cc.merged_object"
              },
              "outgoing": {
                "pushedArray": "$var.job.treeArray"
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5192156862745098,
            "y": 1.537313432835821,
            "scheduled": false
          },
          "97cc": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Merge Data",
            "description": "Create payload per blob to be added to Tree array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "path",
                    "value": {
                      "task": "d4b5",
                      "variable": "filePath"
                    }
                  },
                  {
                    "key": "mode",
                    "value": {
                      "task": "6602",
                      "variable": "numToString"
                    }
                  },
                  {
                    "key": "type",
                    "value": {
                      "task": "static",
                      "variable": "blob"
                    }
                  },
                  {
                    "key": "sha",
                    "value": {
                      "task": "cc5a",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5192156862745098,
            "y": 1.3773987206823028
          },
          "36ba": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "create tree body",
            "description": "Add blobs from tree array and tree's sha to single object for new tree payload",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "base_tree",
                    "value": {
                      "task": "79cc",
                      "variable": "return_data",
                      "editable": true
                    }
                  },
                  {
                    "key": "tree",
                    "value": {
                      "task": "job",
                      "variable": "treeArray"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.6535709301905648,
            "y": 0.2260127931769723
          },
          "20f0": {
            "name": "postReposOwnerRepoGitCommits",
            "canvasName": "postReposOwnerRepoGitCommits",
            "summary": "Create a Commit.",
            "description": "Create a Commit of the Tree created in prior task",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "body": "$var.f1d9.merged_object",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.6253248677149226,
            "y": 0.2260127931769723,
            "scheduled": false
          },
          "f1d9": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "create commit body",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "message",
                    "value": {
                      "task": "job",
                      "variable": "commitMessage",
                      "editable": true
                    }
                  },
                  {
                    "key": "tree",
                    "value": {
                      "task": "cbe5",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "parents",
                    "value": {
                      "task": "job",
                      "variable": "shaArray"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.4577885359133815,
            "y": 0.2260127931769723
          },
          "af31": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "shaArray",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.1013694636906994,
            "y": 0.2260127931769723
          },
          "e604": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Adds an element to the shaArray",
            "description": "Adds an element to the shaArray",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.job.shaArray",
                "elementN": "$var.5a2b.return_data"
              },
              "outgoing": {
                "pushedArray": "$var.job.shaArray"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.2923437053852014,
            "y": 0.2260127931769723,
            "scheduled": false
          },
          "cbe5": {
            "name": "query",
            "canvasName": "query",
            "summary": "query tree sha",
            "description": "query tree sha",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.sha",
                "obj": "$var.423c.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.9723560078058825,
            "y": 0.2260127931769723,
            "scheduled": false
          },
          "22a3": {
            "name": "getReposOwnerRepoBranchesBranch",
            "canvasName": "getReposOwnerRepoBranchesBranch",
            "summary": "Get Branch",
            "description": "Get Branch. Returns SHA of commit the head of this branch points to as well as SHA of tree associated with this commit",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "branch": "$var.job.branch",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.02654210016939193,
            "y": 0.2260127931769723,
            "scheduled": false
          },
          "5a2b": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query branch SHA",
            "description": "Query branch's commit SHA",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.commit.sha",
                "obj": "$var.22a3.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.1459615523922402,
            "y": 0.2260127931769723,
            "scheduled": false
          },
          "79cc": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query parent tree SHA",
            "description": "Query tree SHA",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.commit.commit.tree.sha",
                "obj": "$var.22a3.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.24656978061592424,
            "y": 0.2260127931769723,
            "scheduled": false
          },
          "5a89": {
            "name": "patchReposOwnerRepoGitRefsRef",
            "canvasName": "patchReposOwnerRepoGitRefsRef",
            "summary": "Update a Reference",
            "description": "Updates the HEAD reference on your branch up to the new commit made in last step",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "ref": "$var.a641.combinedStrings",
                "body": "$var.d72a.merged_object",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 2.2740322934055004,
            "y": 0.2260127931769723,
            "scheduled": false
          },
          "f120": {
            "name": "query",
            "canvasName": "query",
            "summary": "new commit sha",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.sha",
                "obj": "$var.20f0.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "x": 1.7899853830216528,
            "y": 0.2260127931769723,
            "scheduled": false
          },
          "d72a": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "update ref body",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "sha",
                    "value": {
                      "task": "f120",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.8934694277401478,
            "y": 0.2260127931769723
          },
          "a641": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Concatenates strings together.",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "heads/",
                "stringN": "$var.job.branch"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 2.0526397484644066,
            "y": 0.2260127931769723,
            "scheduled": false
          },
          "c95e": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": false
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.2028262676641729,
            "y": 0.23370429252782193
          },
          "a95d": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "error",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 2.42310889443059,
            "y": 0.4968203497615262
          },
          "34e8": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 2.257689110556941,
            "y": 0.4968203497615262,
            "scheduled": false
          },
          "3d57": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.6201163757273482,
            "y": 0.4968203497615262,
            "scheduled": false
          },
          "3a10": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.8046550290939318,
            "y": 0.4968203497615262,
            "scheduled": false
          },
          "f3bd": {
            "name": "query",
            "canvasName": "query",
            "summary": "ErrorMessage",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.423c.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.8079800498753117,
            "y": 0.3656597774244833,
            "scheduled": false
          },
          "184e": {
            "name": "query",
            "canvasName": "query",
            "summary": "ErrorMessage",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.20f0.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 1.6176226101413134,
            "y": 0.3656597774244833,
            "scheduled": false
          },
          "5e59": {
            "name": "query",
            "canvasName": "query",
            "summary": "ErrorMessage",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.5a89.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 2.2618453865336656,
            "y": 0.3656597774244833,
            "scheduled": false
          },
          "d07": {
            "name": "query",
            "canvasName": "query",
            "summary": "ErrorMessage",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.22a3.error"
              },
              "outgoing": {
                "return_data": "$var.job.errorMessage"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": -0.024106400665004156,
            "y": 0.3656597774244833,
            "scheduled": false
          },
          "c095": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Error Handler",
            "description": "Create a stub for an automated task",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.0399002493765586,
            "y": 0.4968203497615262,
            "scheduled": false
          }
        },
        "transitions": {
          "6223": {},
          "6602": {
            "97cc": {
              "type": "standard",
              "state": "success"
            }
          },
          "6839": {},
          "7884": {
            "2e4d": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "c95e": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "2e4d": {
            "3a1c": {
              "type": "standard",
              "state": "loop"
            },
            "36ba": {
              "type": "standard",
              "state": "success"
            }
          },
          "3a1c": {
            "d4b5": {
              "type": "standard",
              "state": "success"
            }
          },
          "d4b5": {
            "e95f": {
              "type": "standard",
              "state": "success"
            }
          },
          "e95f": {
            "7ece": {
              "type": "standard",
              "state": "success"
            }
          },
          "1b02": {},
          "7ece": {
            "cc5a": {
              "type": "standard",
              "state": "success"
            }
          },
          "423c": {
            "cbe5": {
              "type": "standard",
              "state": "success"
            },
            "f3bd": {
              "type": "standard",
              "state": "error"
            }
          },
          "cc5a": {
            "6602": {
              "type": "standard",
              "state": "success"
            }
          },
          "5f91": {},
          "99aa": {},
          "97cc": {
            "5f91": {
              "type": "standard",
              "state": "success"
            }
          },
          "36ba": {
            "423c": {
              "type": "standard",
              "state": "success"
            }
          },
          "20f0": {
            "f120": {
              "type": "standard",
              "state": "success"
            },
            "184e": {
              "type": "standard",
              "state": "error"
            }
          },
          "f1d9": {
            "20f0": {
              "type": "standard",
              "state": "success"
            }
          },
          "a37a": {},
          "af31": {
            "e604": {
              "type": "standard",
              "state": "success"
            }
          },
          "e604": {
            "f1d9": {
              "type": "standard",
              "state": "success"
            }
          },
          "cbe5": {
            "af31": {
              "type": "standard",
              "state": "success"
            }
          },
          "22a3": {
            "5a2b": {
              "type": "standard",
              "state": "success"
            },
            "d07": {
              "type": "standard",
              "state": "error"
            }
          },
          "5a2b": {
            "79cc": {
              "type": "standard",
              "state": "success"
            }
          },
          "79cc": {
            "7884": {
              "type": "standard",
              "state": "success"
            }
          },
          "5a89": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "5e59": {
              "type": "standard",
              "state": "error"
            }
          },
          "f120": {
            "d72a": {
              "type": "standard",
              "state": "success"
            }
          },
          "d72a": {
            "a641": {
              "type": "standard",
              "state": "success"
            }
          },
          "a641": {
            "5a89": {
              "type": "standard",
              "state": "success"
            }
          },
          "c95e": {
            "22a3": {
              "type": "standard",
              "state": "success"
            }
          },
          "a95d": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "34e8": {
            "a95d": {
              "type": "standard",
              "state": "success"
            }
          },
          "3d57": {
            "34e8": {
              "type": "standard",
              "state": "success"
            }
          },
          "3a10": {
            "3d57": {
              "type": "standard",
              "state": "success"
            }
          },
          "f3bd": {
            "3a10": {
              "type": "standard",
              "state": "success"
            }
          },
          "184e": {
            "3d57": {
              "type": "standard",
              "state": "success"
            }
          },
          "5e59": {
            "34e8": {
              "type": "standard",
              "state": "success"
            }
          },
          "d07": {
            "c095": {
              "type": "standard",
              "state": "success"
            }
          },
          "c095": {
            "3a10": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "type": "automation",
        "canvasVersion": 1,
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "63e14a5e63396d0afa0679b5",
        "created": "2023-02-06T18:43:42.942Z",
        "createdBy": "nick.andreano@itential.com",
        "lastUpdated": "2023-03-01T19:44:06.226Z",
        "lastUpdatedBy": "nick.andreano@itential.com",
        "name": "Run Regional Hub",
        "description": null,
        "struct": {
          "type": "object",
          "description": "",
          "items": [
            {
              "nodeId": "d4c9cec3-2820-4d7b-86ef-6a3da598cb23",
              "type": "object",
              "description": "",
              "combinationType": "anyOf",
              "items": [
                {
                  "nodeId": "d3367493-4592-44eb-b45e-5603fb55d1c6",
                  "title": "Run Entire Region",
                  "type": "object",
                  "schemaOption": true,
                  "items": [
                    {
                      "nodeId": "2576051b-dfd6-493e-8795-1a90b27bb47e",
                      "type": "string",
                      "title": "Region",
                      "description": "",
                      "placeholder": "Select an item",
                      "required": true,
                      "enum": [
                        {
                          "id": "5fa4981a-a991-4e02-ae60-f090fbe89ef3",
                          "label": "Ashburn",
                          "value": "Ashburn"
                        },
                        {
                          "id": "22844a09-dc5b-45ac-bf59-1374739d1dc0",
                          "label": "San Jose",
                          "value": "San Jose"
                        },
                        {
                          "id": "fc5e5817-e021-4d7a-b894-c285c52ae0db",
                          "label": "Seattle",
                          "value": "Seattle"
                        }
                      ],
                      "binding": false,
                      "rel": "collection",
                      "targetPointer": "/enum"
                    }
                  ]
                },
                {
                  "nodeId": "229cd03e-4fb5-489b-9f02-829e4f6f3bd2",
                  "title": "Run File",
                  "type": "object",
                  "schemaOption": true,
                  "items": [
                    {
                      "nodeId": "b037f5f5-f055-4793-9584-dbfb6f133424",
                      "type": "string",
                      "title": "Region",
                      "description": "",
                      "placeholder": "Select an item",
                      "required": true,
                      "enum": [
                        {
                          "id": "fe6a14c7-7570-4163-a35b-b2370d1bf2c0",
                          "label": "Ashburn",
                          "value": "Ashburn"
                        },
                        {
                          "id": "44eec724-f05e-4ad4-8f81-10fffec31edc",
                          "label": "San Jose",
                          "value": "San Jose"
                        },
                        {
                          "id": "cf3c0720-1400-4b19-8b69-95eb0b86b124",
                          "label": "Seattle",
                          "value": "Seattle"
                        }
                      ],
                      "binding": false,
                      "rel": "collection",
                      "targetPointer": "/enum"
                    },
                    {
                      "nodeId": "ff5aad87-0398-4369-ad7e-4c8ffe8a42cf",
                      "type": "string",
                      "title": "File",
                      "description": "",
                      "placeholder": "Select an item",
                      "required": true,
                      "enum": [
                        {
                          "id": "26feac2e-f5f6-44f8-8df1-db2452a102f1",
                          "label": "san_jose_apics",
                          "value": "san_jose_apics"
                        },
                        {
                          "id": "531dcc9b-b14a-4858-bfd0-09617015b83e",
                          "label": "san_jose_dci_reduced",
                          "value": "san_jose_dci_reduced"
                        },
                        {
                          "id": "463d164b-95f4-4e9f-aff5-f969bc1723b3",
                          "label": "san_jose_fabric_leafs_401_402_downstream_devices",
                          "value": "san_jose_fabric_leafs_401_402_downstream_devices"
                        },
                        {
                          "id": "5994afe1-a1ee-463e-be09-f536db047b9e",
                          "label": "san_jose_fabric_leafs_403_404_downstream_devices",
                          "value": "san_jose_fabric_leafs_403_404_downstream_devices"
                        },
                        {
                          "id": "fdf7b747-e5c7-4a3c-b8c1-25303c5a7767",
                          "label": "san_jose_fabric_leafs_405_406_downstream_devices",
                          "value": "san_jose_fabric_leafs_405_406_downstream_devices"
                        },
                        {
                          "id": "feb8fda5-6aa2-4813-9444-769a5c9e93bc",
                          "label": "san_jose_leafs_3PCI",
                          "value": "san_jose_leafs_3PCI"
                        },
                        {
                          "id": "95070b15-2b01-413f-ac76-919831b033c8",
                          "label": "san_jose_leafs_without_vrfs",
                          "value": "san_jose_leafs_without_vrfs"
                        },
                        {
                          "id": "4b0b1d1e-a8e6-4775-ab51-f50ec1ea0824",
                          "label": "san_jose_oob",
                          "value": "san_jose_oob"
                        },
                        {
                          "id": "747df5cc-6ec2-4e17-b95f-a3075368add1",
                          "label": "san_jose_spines",
                          "value": "san_jose_spines"
                        },
                        {
                          "id": "cbef1d8f-eda5-4e79-8acd-536b44239611",
                          "label": "sanjose_internet_reduced_commands",
                          "value": "sanjose_internet_reduced_commands"
                        },
                        {
                          "id": "99b89b09-5594-49cf-8de4-391d3770ea51",
                          "label": "sanjose_mpls_reduced",
                          "value": "sanjose_mpls_reduced"
                        },
                        {
                          "id": "64037294-e40b-461c-b30e-c5d38730b8ef",
                          "label": "sanjose_null_router",
                          "value": "sanjose_null_router"
                        }
                      ],
                      "binding": false,
                      "rel": "collection",
                      "targetPointer": "/enum"
                    }
                  ]
                }
              ],
              "title": "Combinations 1"
            },
            {
              "nodeId": "5b106d4b-5d6b-498b-9b57-2bf3c3343a37",
              "type": "array",
              "description": "",
              "items": [
                {
                  "nodeId": "07fdd75f-35eb-4faf-8180-498939c3afbe",
                  "type": "string",
                  "title": "Designation",
                  "description": "",
                  "placeholder": "Enter text",
                  "required": true,
                  "readOnly": false,
                  "binding": false,
                  "rel": "item",
                  "targetPointer": "/default"
                }
              ],
              "title": "Tags",
              "uniqueItems": true,
              "minItems": 1
            }
          ]
        },
        "schema": {
          "title": "Run Regional Hub",
          "description": "",
          "type": "object",
          "required": [],
          "properties": {
            "tags": {
              "type": "array",
              "title": "Tags",
              "description": "",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "object",
                "required": [
                  "designation"
                ],
                "properties": {
                  "designation": {
                    "type": "string",
                    "title": "Designation",
                    "description": ""
                  }
                }
              }
            }
          },
          "anyOf": [
            {
              "title": "Run Entire Region",
              "properties": {
                "region": {
                  "type": "string",
                  "title": "Region",
                  "description": "",
                  "enum": [
                    "Ashburn",
                    "San Jose",
                    "Seattle"
                  ]
                }
              }
            },
            {
              "title": "Run File",
              "properties": {
                "region": {
                  "type": "string",
                  "title": "Region",
                  "description": "",
                  "enum": [
                    "Ashburn",
                    "San Jose",
                    "Seattle"
                  ]
                },
                "file": {
                  "type": "string",
                  "title": "File",
                  "description": "",
                  "enum": [
                    "san_jose_apics",
                    "san_jose_dci_reduced",
                    "san_jose_fabric_leafs_401_402_downstream_devices",
                    "san_jose_fabric_leafs_403_404_downstream_devices",
                    "san_jose_fabric_leafs_405_406_downstream_devices",
                    "san_jose_leafs_3PCI",
                    "san_jose_leafs_without_vrfs",
                    "san_jose_oob",
                    "san_jose_spines",
                    "sanjose_internet_reduced_commands",
                    "sanjose_mpls_reduced",
                    "sanjose_null_router"
                  ]
                }
              }
            }
          ]
        },
        "uiSchema": {
          "combinations1": {
            "ui:collapseByDefault": false,
            "runEntireRegion": {
              "ui:collapseByDefault": false,
              "region": {
                "ui:placeholder": "Select an item"
              }
            },
            "runFile": {
              "ui:collapseByDefault": false,
              "region": {
                "ui:placeholder": "Select an item"
              },
              "file": {
                "ui:placeholder": "Select an item"
              }
            }
          },
          "tags": {
            "items": {
              "designation": {
                "ui:placeholder": "Enter text"
              }
            }
          }
        },
        "bindingSchema": {
          "anyOf": [],
          "properties": {
            "combinations1": {
              "properties": {
                "runEntireRegion": {
                  "properties": {}
                },
                "runFile": {
                  "properties": {}
                }
              }
            },
            "tags": {
              "items": {
                "properties": {}
              }
            }
          }
        },
        "validationSchema": {
          "combinations1": {
            "runEntireRegion": {},
            "runFile": {}
          },
          "tags": {}
        },
        "version": "2020.1"
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63e15fbf6cdd285d5d39a935",
        "name": "buildRunRegionalHubJobDescription",
        "description": "Builds the jobs description for the RubRegionalHub Jobs based on the designations (tags)",
        "incoming": [
          {
            "$id": "designations",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "jobDescription",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 14,
            "type": "method",
            "library": "String",
            "method": "concat",
            "args": [
              "Run Regional Hub",
              " | ",
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "designations",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 14,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 14,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "jobDescription",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_1",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [
                  null,
                  " ",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "ƒ_reduce_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2023-02-02T22:02:04.328Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T18:59:13.737Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63f3d4f859b8702a8c6b78ce",
        "name": "GetChildJobLoopReports",
        "description": "",
        "incoming": [
          {
            "$id": "childJobDetails",
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "examples": [
                  "complete"
                ]
              },
              "loop": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "examples": [
                        "complete"
                      ]
                    },
                    "tags": {
                      "type": "string",
                      "examples": [
                        "San Jose, Night 1, Initial Run"
                      ]
                    },
                    "childJobLoopIndex": {
                      "type": "integer",
                      "examples": [
                        0
                      ]
                    },
                    "_id": {
                      "type": "string",
                      "examples": [
                        "d252e2b97b1a420ea237b891"
                      ]
                    },
                    "initiator": {
                      "type": "string",
                      "examples": [
                        "nick%2Eandreano@itential%2Ecom"
                      ],
                      "format": "email"
                    },
                    "error": {
                      "type": "boolean",
                      "examples": [
                        true,
                        false
                      ]
                    },
                    "report": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "loop"
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "report",
            "type": "object"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              {}
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "report",
              "ptr": ""
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "childJobDetails",
              "ptr": "/loop"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "examples": [
                      "complete"
                    ]
                  },
                  "tags": {
                    "type": "string",
                    "examples": [
                      "San Jose, Night 1, Initial Run"
                    ]
                  },
                  "childJobLoopIndex": {
                    "type": "integer",
                    "examples": [
                      0
                    ]
                  },
                  "_id": {
                    "type": "string",
                    "examples": [
                      "d252e2b97b1a420ea237b891"
                    ]
                  },
                  "initiator": {
                    "type": "string",
                    "examples": [
                      "nick%2Eandreano@itential%2Ecom"
                    ],
                    "format": "email"
                  },
                  "error": {
                    "type": "boolean",
                    "examples": [
                      true,
                      false
                    ]
                  },
                  "report": {
                    "type": "object",
                    "properties": {},
                    "required": []
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "examples": [
                        "complete"
                      ]
                    },
                    "tags": {
                      "type": "string",
                      "examples": [
                        "San Jose, Night 1, Initial Run"
                      ]
                    },
                    "childJobLoopIndex": {
                      "type": "integer",
                      "examples": [
                        0
                      ]
                    },
                    "_id": {
                      "type": "string",
                      "examples": [
                        "d252e2b97b1a420ea237b891"
                      ]
                    },
                    "initiator": {
                      "type": "string",
                      "examples": [
                        "nick%2Eandreano@itential%2Ecom"
                      ],
                      "format": "email"
                    },
                    "error": {
                      "type": "boolean",
                      "examples": [
                        true,
                        false
                      ]
                    },
                    "report": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_1",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "entries",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Array",
                "method": "concat",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Object",
                "method": "fromEntries",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "entries",
                "args": [
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/report"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/1/value"
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "ƒ_reduce_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2023-02-20T20:15:52.323Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-03-02T15:33:59.897Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63daa8ff99d6ef6162a28b49",
        "name": "runRegionalHubFormData",
        "description": "Creates the runFile and filePath(designations/tags) from the formData",
        "incoming": [
          {
            "$id": "formData",
            "type": "object",
            "properties": {
              "tags": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "designation": {
                      "type": "string",
                      "examples": [
                        "Night 1"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "tags"
              },
              "region": {
                "type": "string",
                "examples": [
                  "San Jose"
                ]
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "runFile",
            "type": "string"
          },
          {
            "$id": "filePath",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 17,
            "type": "method",
            "library": "Logical",
            "method": "nullish",
            "args": [
              null,
              null
            ],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 42,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_2",
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 44,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 42,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "filePath",
              "ptr": ""
            }
          },
          {
            "id": 45,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/region"
            },
            "to": {
              "location": "method",
              "name": 42,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 46,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/tags"
            },
            "to": {
              "location": "method",
              "name": 42,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 48,
            "type": "method",
            "library": "String",
            "method": "concat",
            "args": [
              null,
              "/",
              null,
              ".json"
            ],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 49,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/region"
            },
            "to": {
              "location": "method",
              "name": 48,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 50,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 17,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 48,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 51,
            "type": "method",
            "library": "String",
            "method": "trim",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 4
            }
          },
          {
            "id": 52,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 48,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 51,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 53,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 51,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "runFile",
              "ptr": ""
            }
          },
          {
            "id": 54,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [
              null,
              "file"
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 55,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 54,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 56,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 54,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 17,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 57,
            "type": "method",
            "library": "String",
            "method": "concat",
            "args": [
              null,
              " ",
              "All"
            ],
            "view": {
              "row": 3,
              "col": 1
            }
          },
          {
            "id": 58,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/region"
            },
            "to": {
              "location": "method",
              "name": 57,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 59,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 57,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 17,
              "ptr": "/args/1/value"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "designation": {
                    "type": "string",
                    "examples": [
                      "night 1"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "designation": {
                      "type": "string",
                      "examples": [
                        "night 1"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_1",
            "steps": [
              {
                "id": 5,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [
                  null,
                  ", ",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/designation"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/2/value"
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "ƒ_reduce_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": "string",
                "examples": [
                  "Pre"
                ],
                "$id": "accumulator"
              },
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_2",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [
                  null,
                  ", ",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "designation"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 6
            },
            "id": "ƒ_reduce_2",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 4,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.505Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T20:04:15.612Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63f3cc3a59b8702a8c6b78cd",
        "name": "Run Regional Hub File (1)",
        "incoming": [
          {
            "$id": "currentValue",
            "type": [
              "array",
              "boolean",
              "integer",
              "null",
              "number",
              "object",
              "string"
            ],
            "$immutable": true
          },
          {
            "$id": "tags",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "regionalHubData",
            "type": "object",
            "$immutable": true
          },
          {
            "$id": "tags",
            "type": "string",
            "$immutable": true
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "tags",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "tags",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "currentValue",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "regionalHubData",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 0,
          "row": 5
        },
        "created": "2023-02-20T19:38:34.469Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-20T19:39:01.202Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63dadc5099d6ef6162a28b50",
        "name": "childJobLoopCheck",
        "description": "Loops though the return job details of a child job loop and returns a boolean \"AllChildJobsRanSuccessfully\" that is set to true if all child jobs ran successfully. It also extracts any error messages from the failed jobs.",
        "incoming": [
          {
            "$id": "childJobLoopDetails",
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "examples": [
                  "complete"
                ]
              },
              "loop": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "commands": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "examples": [
                          "show interfaces"
                        ]
                      },
                      "$id": "commands"
                    },
                    "status": {
                      "type": "string",
                      "examples": [
                        "complete"
                      ]
                    },
                    "error": {
                      "type": "boolean",
                      "examples": [
                        true,
                        false
                      ]
                    },
                    "errorMessage": {
                      "type": [
                        "string",
                        "null",
                        "object"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "loop"
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "AllChildJobsRanSuccessfully",
            "type": "boolean"
          },
          {
            "$id": "erroredMessages",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "filter",
            "args": [
              null,
              "FindErroredJobs"
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "childJobLoopDetails",
              "ptr": "/loop"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "method",
            "library": "Array",
            "method": "length",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 3,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 5,
            "type": "method",
            "library": "Conditional",
            "method": "ternary",
            "args": [
              null,
              null,
              []
            ],
            "view": {
              "row": 2,
              "col": 3
            }
          },
          {
            "id": 10,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "getErrorMessages"
            ],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 10,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 10,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 5,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "erroredMessages",
              "ptr": ""
            }
          },
          {
            "id": 16,
            "type": "method",
            "library": "Relational",
            "method": "greaterThanOrEqual",
            "args": [
              null,
              1
            ],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 16,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 16,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 5,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 20,
            "type": "method",
            "library": "Logical",
            "method": "not",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 4
            }
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 16,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 20,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 20,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "AllChildJobsRanSuccessfully",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "commands": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "show interfaces"
                      ]
                    }
                  },
                  "device": {
                    "type": "string",
                    "examples": [
                      "172%2E20%2E103%2E135"
                    ]
                  },
                  "status": {
                    "type": "string",
                    "examples": [
                      "complete"
                    ]
                  },
                  "error": {
                    "type": "boolean",
                    "examples": [
                      true,
                      false
                    ]
                  },
                  "errorMessage": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "commands": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "examples": [
                          "show interfaces"
                        ]
                      }
                    },
                    "device": {
                      "type": "string",
                      "examples": [
                        "172%2E20%2E103%2E135"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "examples": [
                        "complete"
                      ]
                    },
                    "error": {
                      "type": "boolean",
                      "examples": [
                        true,
                        false
                      ]
                    },
                    "errorMessage": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "functions": [],
            "name": "FindErroredJobs",
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": "/error"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 2,
              "row": 6
            },
            "id": "FindErroredJobs",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_1",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "device"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "errorMessage"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  {},
                  "errorMessage",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "device",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/2/value"
                }
              }
            ],
            "view": {
              "col": 7,
              "row": 6
            },
            "id": "getErrorMessages",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 4,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.507Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T18:59:00.866Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63f3bc1e59b8702a8c6b78c8",
        "name": "GetRegionDir",
        "description": "",
        "incoming": [
          {
            "$id": "runFile",
            "type": "string",
            "examples": [
              "San Jose/San Jose ALL%2Ejson"
            ]
          },
          {
            "$id": "repoName",
            "type": "string"
          },
          {
            "$id": "repoOwner",
            "type": "string"
          },
          {
            "$id": "branchName",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "RegionDir",
            "type": "string"
          },
          {
            "$id": "repoName",
            "type": "string"
          },
          {
            "$id": "repoOwner",
            "type": "string"
          },
          {
            "$id": "branchName",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "String",
            "method": "split",
            "args": [
              null,
              "/",
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "runFile",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "method",
            "library": "Array",
            "method": "getIndex",
            "args": [
              null,
              0
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 3,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "RegionDir",
              "ptr": ""
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "repoName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "repoName",
              "ptr": ""
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "repoOwner",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "repoOwner",
              "ptr": ""
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "branchName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "branchName",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2023-02-20T18:29:50.340Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-20T18:42:05.851Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63f3bcdc59b8702a8c6b78c9",
        "name": "GetGitHubFiles",
        "description": "",
        "incoming": [
          {
            "$id": "gitHubResp",
            "type": "object",
            "properties": {
              "icode": {
                "type": "string",
                "examples": [
                  "AD%2E200"
                ]
              },
              "response": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "pathParam": {
                      "type": "string",
                      "examples": [
                        "San Jose/%2EDS_Store"
                      ]
                    },
                    "pathParamQuery": {
                      "type": "string",
                      "examples": [
                        "San Jose/%2EDS_Store"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "%2EDS_Store"
                      ]
                    },
                    "sha": {
                      "type": "string",
                      "examples": [
                        "5008ddfcf53c02e82d7eee2e57c38e5672ef89f6"
                      ]
                    },
                    "size": {
                      "type": [
                        "integer",
                        "number"
                      ],
                      "examples": [
                        6148
                      ]
                    },
                    "url": {
                      "type": "string",
                      "examples": [
                        "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/%2EDS_Store?ref=main"
                      ]
                    },
                    "html_url": {
                      "type": "string",
                      "examples": [
                        "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/%2EDS_Store"
                      ]
                    },
                    "git_url": {
                      "type": "string",
                      "examples": [
                        "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/5008ddfcf53c02e82d7eee2e57c38e5672ef89f6"
                      ]
                    },
                    "download_url": {
                      "type": "string",
                      "examples": [
                        "https://raw%2Egithubusercontent%2Ecom/NickAOrg/regions/main/San%20Jose/%2EDS_Store"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "file"
                      ]
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "examples": [
                            "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/%2EDS_Store?ref=main"
                          ]
                        },
                        "git": {
                          "type": "string",
                          "examples": [
                            "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/5008ddfcf53c02e82d7eee2e57c38e5672ef89f6"
                          ]
                        },
                        "html": {
                          "type": "string",
                          "examples": [
                            "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/%2EDS_Store"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "response"
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "fileArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "ƒ_map_1"
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "gitHubResp",
              "ptr": "/response"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "fileArray",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "pathParam": {
                    "type": "string",
                    "examples": [
                      "San Jose/%2EDS_Store"
                    ]
                  },
                  "pathParamQuery": {
                    "type": "string",
                    "examples": [
                      "San Jose/%2EDS_Store"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "examples": [
                      "%2EDS_Store"
                    ]
                  },
                  "sha": {
                    "type": "string",
                    "examples": [
                      "5008ddfcf53c02e82d7eee2e57c38e5672ef89f6"
                    ]
                  },
                  "size": {
                    "type": [
                      "integer",
                      "number"
                    ],
                    "examples": [
                      6148
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/%2EDS_Store?ref=main"
                    ]
                  },
                  "html_url": {
                    "type": "string",
                    "examples": [
                      "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/%2EDS_Store"
                    ]
                  },
                  "git_url": {
                    "type": "string",
                    "examples": [
                      "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/5008ddfcf53c02e82d7eee2e57c38e5672ef89f6"
                    ]
                  },
                  "download_url": {
                    "type": "string",
                    "examples": [
                      "https://raw%2Egithubusercontent%2Ecom/NickAOrg/regions/main/San%20Jose/%2EDS_Store"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "examples": [
                      "file"
                    ]
                  },
                  "_links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "examples": [
                          "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/%2EDS_Store?ref=main"
                        ]
                      },
                      "git": {
                        "type": "string",
                        "examples": [
                          "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/5008ddfcf53c02e82d7eee2e57c38e5672ef89f6"
                        ]
                      },
                      "html": {
                        "type": "string",
                        "examples": [
                          "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/%2EDS_Store"
                        ]
                      }
                    },
                    "required": []
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "pathParam": {
                      "type": "string",
                      "examples": [
                        "San Jose/%2EDS_Store"
                      ]
                    },
                    "pathParamQuery": {
                      "type": "string",
                      "examples": [
                        "San Jose/%2EDS_Store"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "%2EDS_Store"
                      ]
                    },
                    "sha": {
                      "type": "string",
                      "examples": [
                        "5008ddfcf53c02e82d7eee2e57c38e5672ef89f6"
                      ]
                    },
                    "size": {
                      "type": [
                        "integer",
                        "number"
                      ],
                      "examples": [
                        6148
                      ]
                    },
                    "url": {
                      "type": "string",
                      "examples": [
                        "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/%2EDS_Store?ref=main"
                      ]
                    },
                    "html_url": {
                      "type": "string",
                      "examples": [
                        "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/%2EDS_Store"
                      ]
                    },
                    "git_url": {
                      "type": "string",
                      "examples": [
                        "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/5008ddfcf53c02e82d7eee2e57c38e5672ef89f6"
                      ]
                    },
                    "download_url": {
                      "type": "string",
                      "examples": [
                        "https://raw%2Egithubusercontent%2Ecom/NickAOrg/regions/main/San%20Jose/%2EDS_Store"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "file"
                      ]
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "examples": [
                            "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/%2EDS_Store?ref=main"
                          ]
                        },
                        "git": {
                          "type": "string",
                          "examples": [
                            "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/5008ddfcf53c02e82d7eee2e57c38e5672ef89f6"
                          ]
                        },
                        "html": {
                          "type": "string",
                          "examples": [
                            "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/%2EDS_Store"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_1",
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/pathParam"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "ƒ_map_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2023-02-20T18:33:00.066Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-20T18:35:07.926Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63f3bde559b8702a8c6b78ca",
        "name": "Get File - GitHub",
        "incoming": [
          {
            "$id": "currentValue",
            "type": [
              "array",
              "boolean",
              "integer",
              "null",
              "number",
              "object",
              "string"
            ],
            "$immutable": true
          },
          {
            "$id": "repoName",
            "type": "string"
          },
          {
            "$id": "repoOwner",
            "type": "string"
          },
          {
            "$id": "branchName",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "filePath",
            "type": "string",
            "$immutable": true
          },
          {
            "$id": "repoName",
            "type": "string",
            "$immutable": true
          },
          {
            "$id": "repoOwner",
            "type": "string",
            "$immutable": true
          },
          {
            "$id": "branchName",
            "type": "string",
            "$immutable": true
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "currentValue",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "filePath",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "branchName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "branchName",
              "ptr": ""
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "repoOwner",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "repoOwner",
              "ptr": ""
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "repoName",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "repoName",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 0,
          "row": 5
        },
        "created": "2023-02-20T18:37:25.024Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-20T18:38:39.543Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63f3c1df59b8702a8c6b78cb",
        "name": "GetFileContentsFromChildLoop ",
        "description": "",
        "incoming": [
          {
            "$id": "childJobDetails",
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "examples": [
                  "complete"
                ]
              },
              "loop": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "examples": [
                        "complete"
                      ]
                    },
                    "filePath": {
                      "type": "string",
                      "examples": [
                        "San Jose/san_jose_apics%2Ejson"
                      ]
                    },
                    "branchName": {
                      "type": "string",
                      "examples": [
                        "main"
                      ]
                    },
                    "repoOwner": {
                      "type": "string",
                      "examples": [
                        "NickAOrg"
                      ]
                    },
                    "repoName": {
                      "type": "string",
                      "examples": [
                        "regions"
                      ]
                    },
                    "childJobLoopIndex": {
                      "type": [
                        "integer",
                        "number"
                      ],
                      "examples": [
                        0
                      ]
                    },
                    "_id": {
                      "type": "string",
                      "examples": [
                        "4265054058694bed816650ba"
                      ]
                    },
                    "initiator": {
                      "type": "string",
                      "examples": [
                        "nick%2Eandreano@itential%2Ecom"
                      ],
                      "format": "email"
                    },
                    "error": {
                      "type": "boolean",
                      "examples": [
                        true,
                        false
                      ]
                    },
                    "fileResponse": {
                      "type": "object",
                      "properties": {
                        "icode": {
                          "type": "string",
                          "examples": [
                            "AD%2E200"
                          ]
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "pathParam": {
                              "type": "string",
                              "examples": [
                                "San Jose/san_jose_apics%2Ejson"
                              ]
                            },
                            "pathParamQuery": {
                              "type": "string",
                              "examples": [
                                "San Jose/san_jose_apics%2Ejson"
                              ]
                            },
                            "content": {
                              "type": "string",
                              "examples": [
                                "{\n    \"leaf\":\n    {\n        \"commonDevicesCommandSets\":\n        [\n            {\n                \"devices\":\n                [\n                    \"172.20.103.138\",\n                    \"172.20.103.137\"\n                ],\n                \"deviceType\": \"cisco_ios\",\n                \"username\": \"admin\",\n                \"port\": 22,\n                \"commands\":\n                [\n                    [\n                        \"show interfaces\",\n                        \"show version\"\n                    ],\n                    [\n                        \"show location\"\n                    ]\n                ]\n            }\n        ],\n        \"uniqueDevicesCommands\":\n        [\n            {\n                \"device\": \"172.20.103.121\",\n                \"deviceType\": \"cisco_xr\",\n                \"username\": \"admin\",\n                \"port\": 22,\n                \"commands\":\n                [\n                    [\n                        \"show interfaces\"\n                    ],\n                    [\n                        \"show version\"\n                    ]\n                ]\n            }\n        ]\n    },\n    \"spine\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"dci\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"internet\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"mpls\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"apic\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    }\n}"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "examples": [
                                "san_jose_apics%2Ejson"
                              ]
                            },
                            "sha": {
                              "type": "string",
                              "examples": [
                                "3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                              ]
                            },
                            "size": {
                              "type": "integer",
                              "examples": [
                                1689
                              ]
                            },
                            "url": {
                              "type": "string",
                              "examples": [
                                "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/san_jose_apics%2Ejson?ref=main"
                              ]
                            },
                            "html_url": {
                              "type": "string",
                              "examples": [
                                "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/san_jose_apics%2Ejson"
                              ]
                            },
                            "git_url": {
                              "type": "string",
                              "examples": [
                                "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                              ]
                            },
                            "download_url": {
                              "type": "string",
                              "examples": [
                                "https://raw%2Egithubusercontent%2Ecom/NickAOrg/regions/main/San%20Jose/san_jose_apics%2Ejson"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "examples": [
                                "file"
                              ]
                            },
                            "encoding": {
                              "type": "string",
                              "examples": [
                                "base64"
                              ]
                            },
                            "_links": {
                              "type": "object",
                              "properties": {
                                "self": {
                                  "type": "string",
                                  "examples": [
                                    "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/san_jose_apics%2Ejson?ref=main"
                                  ]
                                },
                                "git": {
                                  "type": "string",
                                  "examples": [
                                    "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                                  ]
                                },
                                "html": {
                                  "type": "string",
                                  "examples": [
                                    "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/san_jose_apics%2Ejson"
                                  ]
                                }
                              },
                              "required": []
                            }
                          },
                          "required": []
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "loop"
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "regionalHubDataArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              []
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "childJobDetails",
              "ptr": "/loop"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "regionalHubDataArray",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "examples": [
                      "complete"
                    ]
                  },
                  "filePath": {
                    "type": "string",
                    "examples": [
                      "San Jose/san_jose_apics%2Ejson"
                    ]
                  },
                  "branchName": {
                    "type": "string",
                    "examples": [
                      "main"
                    ]
                  },
                  "repoOwner": {
                    "type": "string",
                    "examples": [
                      "NickAOrg"
                    ]
                  },
                  "repoName": {
                    "type": "string",
                    "examples": [
                      "regions"
                    ]
                  },
                  "childJobLoopIndex": {
                    "type": [
                      "integer",
                      "number"
                    ],
                    "examples": [
                      0
                    ]
                  },
                  "_id": {
                    "type": "string",
                    "examples": [
                      "4265054058694bed816650ba"
                    ]
                  },
                  "initiator": {
                    "type": "string",
                    "examples": [
                      "nick%2Eandreano@itential%2Ecom"
                    ],
                    "format": "email"
                  },
                  "error": {
                    "type": "boolean",
                    "examples": [
                      true,
                      false
                    ]
                  },
                  "fileResponse": {
                    "type": "object",
                    "properties": {
                      "icode": {
                        "type": "string",
                        "examples": [
                          "AD%2E200"
                        ]
                      },
                      "response": {
                        "type": "object",
                        "properties": {
                          "pathParam": {
                            "type": "string",
                            "examples": [
                              "San Jose/san_jose_apics%2Ejson"
                            ]
                          },
                          "pathParamQuery": {
                            "type": "string",
                            "examples": [
                              "San Jose/san_jose_apics%2Ejson"
                            ]
                          },
                          "content": {
                            "type": "string",
                            "examples": [
                              "{\n    \"leaf\":\n    {\n        \"commonDevicesCommandSets\":\n        [\n            {\n                \"devices\":\n                [\n                    \"172.20.103.138\",\n                    \"172.20.103.137\"\n                ],\n                \"deviceType\": \"cisco_ios\",\n                \"username\": \"admin\",\n                \"port\": 22,\n                \"commands\":\n                [\n                    [\n                        \"show interfaces\",\n                        \"show version\"\n                    ],\n                    [\n                        \"show location\"\n                    ]\n                ]\n            }\n        ],\n        \"uniqueDevicesCommands\":\n        [\n            {\n                \"device\": \"172.20.103.121\",\n                \"deviceType\": \"cisco_xr\",\n                \"username\": \"admin\",\n                \"port\": 22,\n                \"commands\":\n                [\n                    [\n                        \"show interfaces\"\n                    ],\n                    [\n                        \"show version\"\n                    ]\n                ]\n            }\n        ]\n    },\n    \"spine\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"dci\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"internet\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"mpls\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"apic\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    }\n}"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "examples": [
                              "san_jose_apics%2Ejson"
                            ]
                          },
                          "sha": {
                            "type": "string",
                            "examples": [
                              "3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                            ]
                          },
                          "size": {
                            "type": "integer",
                            "examples": [
                              1689
                            ]
                          },
                          "url": {
                            "type": "string",
                            "examples": [
                              "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/san_jose_apics%2Ejson?ref=main"
                            ]
                          },
                          "html_url": {
                            "type": "string",
                            "examples": [
                              "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/san_jose_apics%2Ejson"
                            ]
                          },
                          "git_url": {
                            "type": "string",
                            "examples": [
                              "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                            ]
                          },
                          "download_url": {
                            "type": "string",
                            "examples": [
                              "https://raw%2Egithubusercontent%2Ecom/NickAOrg/regions/main/San%20Jose/san_jose_apics%2Ejson"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "file"
                            ]
                          },
                          "encoding": {
                            "type": "string",
                            "examples": [
                              "base64"
                            ]
                          },
                          "_links": {
                            "type": "object",
                            "properties": {
                              "self": {
                                "type": "string",
                                "examples": [
                                  "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/san_jose_apics%2Ejson?ref=main"
                                ]
                              },
                              "git": {
                                "type": "string",
                                "examples": [
                                  "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                                ]
                              },
                              "html": {
                                "type": "string",
                                "examples": [
                                  "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/san_jose_apics%2Ejson"
                                ]
                              }
                            },
                            "required": []
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "examples": [
                        "complete"
                      ]
                    },
                    "filePath": {
                      "type": "string",
                      "examples": [
                        "San Jose/san_jose_apics%2Ejson"
                      ]
                    },
                    "branchName": {
                      "type": "string",
                      "examples": [
                        "main"
                      ]
                    },
                    "repoOwner": {
                      "type": "string",
                      "examples": [
                        "NickAOrg"
                      ]
                    },
                    "repoName": {
                      "type": "string",
                      "examples": [
                        "regions"
                      ]
                    },
                    "childJobLoopIndex": {
                      "type": [
                        "integer",
                        "number"
                      ],
                      "examples": [
                        0
                      ]
                    },
                    "_id": {
                      "type": "string",
                      "examples": [
                        "4265054058694bed816650ba"
                      ]
                    },
                    "initiator": {
                      "type": "string",
                      "examples": [
                        "nick%2Eandreano@itential%2Ecom"
                      ],
                      "format": "email"
                    },
                    "error": {
                      "type": "boolean",
                      "examples": [
                        true,
                        false
                      ]
                    },
                    "fileResponse": {
                      "type": "object",
                      "properties": {
                        "icode": {
                          "type": "string",
                          "examples": [
                            "AD%2E200"
                          ]
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "pathParam": {
                              "type": "string",
                              "examples": [
                                "San Jose/san_jose_apics%2Ejson"
                              ]
                            },
                            "pathParamQuery": {
                              "type": "string",
                              "examples": [
                                "San Jose/san_jose_apics%2Ejson"
                              ]
                            },
                            "content": {
                              "type": "string",
                              "examples": [
                                "{\n    \"leaf\":\n    {\n        \"commonDevicesCommandSets\":\n        [\n            {\n                \"devices\":\n                [\n                    \"172.20.103.138\",\n                    \"172.20.103.137\"\n                ],\n                \"deviceType\": \"cisco_ios\",\n                \"username\": \"admin\",\n                \"port\": 22,\n                \"commands\":\n                [\n                    [\n                        \"show interfaces\",\n                        \"show version\"\n                    ],\n                    [\n                        \"show location\"\n                    ]\n                ]\n            }\n        ],\n        \"uniqueDevicesCommands\":\n        [\n            {\n                \"device\": \"172.20.103.121\",\n                \"deviceType\": \"cisco_xr\",\n                \"username\": \"admin\",\n                \"port\": 22,\n                \"commands\":\n                [\n                    [\n                        \"show interfaces\"\n                    ],\n                    [\n                        \"show version\"\n                    ]\n                ]\n            }\n        ]\n    },\n    \"spine\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"dci\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"internet\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"mpls\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"apic\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    }\n}"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "examples": [
                                "san_jose_apics%2Ejson"
                              ]
                            },
                            "sha": {
                              "type": "string",
                              "examples": [
                                "3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                              ]
                            },
                            "size": {
                              "type": "integer",
                              "examples": [
                                1689
                              ]
                            },
                            "url": {
                              "type": "string",
                              "examples": [
                                "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/san_jose_apics%2Ejson?ref=main"
                              ]
                            },
                            "html_url": {
                              "type": "string",
                              "examples": [
                                "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/san_jose_apics%2Ejson"
                              ]
                            },
                            "git_url": {
                              "type": "string",
                              "examples": [
                                "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                              ]
                            },
                            "download_url": {
                              "type": "string",
                              "examples": [
                                "https://raw%2Egithubusercontent%2Ecom/NickAOrg/regions/main/San%20Jose/san_jose_apics%2Ejson"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "examples": [
                                "file"
                              ]
                            },
                            "encoding": {
                              "type": "string",
                              "examples": [
                                "base64"
                              ]
                            },
                            "_links": {
                              "type": "object",
                              "properties": {
                                "self": {
                                  "type": "string",
                                  "examples": [
                                    "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/san_jose_apics%2Ejson?ref=main"
                                  ]
                                },
                                "git": {
                                  "type": "string",
                                  "examples": [
                                    "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                                  ]
                                },
                                "html": {
                                  "type": "string",
                                  "examples": [
                                    "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/san_jose_apics%2Ejson"
                                  ]
                                }
                              },
                              "required": []
                            }
                          },
                          "required": []
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_1",
            "steps": [],
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "ƒ_map_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "examples": [
                      "complete"
                    ]
                  },
                  "filePath": {
                    "type": "string",
                    "examples": [
                      "San Jose/san_jose_apics%2Ejson"
                    ]
                  },
                  "branchName": {
                    "type": "string",
                    "examples": [
                      "main"
                    ]
                  },
                  "repoOwner": {
                    "type": "string",
                    "examples": [
                      "NickAOrg"
                    ]
                  },
                  "repoName": {
                    "type": "string",
                    "examples": [
                      "regions"
                    ]
                  },
                  "childJobLoopIndex": {
                    "type": [
                      "integer",
                      "number"
                    ],
                    "examples": [
                      0
                    ]
                  },
                  "_id": {
                    "type": "string",
                    "examples": [
                      "4265054058694bed816650ba"
                    ]
                  },
                  "initiator": {
                    "type": "string",
                    "examples": [
                      "nick%2Eandreano@itential%2Ecom"
                    ],
                    "format": "email"
                  },
                  "error": {
                    "type": "boolean",
                    "examples": [
                      true,
                      false
                    ]
                  },
                  "fileResponse": {
                    "type": "object",
                    "properties": {
                      "icode": {
                        "type": "string",
                        "examples": [
                          "AD%2E200"
                        ]
                      },
                      "response": {
                        "type": "object",
                        "properties": {
                          "pathParam": {
                            "type": "string",
                            "examples": [
                              "San Jose/san_jose_apics%2Ejson"
                            ]
                          },
                          "pathParamQuery": {
                            "type": "string",
                            "examples": [
                              "San Jose/san_jose_apics%2Ejson"
                            ]
                          },
                          "content": {
                            "type": "string",
                            "examples": [
                              "{\n    \"leaf\":\n    {\n        \"commonDevicesCommandSets\":\n        [\n            {\n                \"devices\":\n                [\n                    \"172.20.103.138\",\n                    \"172.20.103.137\"\n                ],\n                \"deviceType\": \"cisco_ios\",\n                \"username\": \"admin\",\n                \"port\": 22,\n                \"commands\":\n                [\n                    [\n                        \"show interfaces\",\n                        \"show version\"\n                    ],\n                    [\n                        \"show location\"\n                    ]\n                ]\n            }\n        ],\n        \"uniqueDevicesCommands\":\n        [\n            {\n                \"device\": \"172.20.103.121\",\n                \"deviceType\": \"cisco_xr\",\n                \"username\": \"admin\",\n                \"port\": 22,\n                \"commands\":\n                [\n                    [\n                        \"show interfaces\"\n                    ],\n                    [\n                        \"show version\"\n                    ]\n                ]\n            }\n        ]\n    },\n    \"spine\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"dci\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"internet\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"mpls\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"apic\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    }\n}"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "examples": [
                              "san_jose_apics%2Ejson"
                            ]
                          },
                          "sha": {
                            "type": "string",
                            "examples": [
                              "3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                            ]
                          },
                          "size": {
                            "type": "integer",
                            "examples": [
                              1689
                            ]
                          },
                          "url": {
                            "type": "string",
                            "examples": [
                              "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/san_jose_apics%2Ejson?ref=main"
                            ]
                          },
                          "html_url": {
                            "type": "string",
                            "examples": [
                              "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/san_jose_apics%2Ejson"
                            ]
                          },
                          "git_url": {
                            "type": "string",
                            "examples": [
                              "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                            ]
                          },
                          "download_url": {
                            "type": "string",
                            "examples": [
                              "https://raw%2Egithubusercontent%2Ecom/NickAOrg/regions/main/San%20Jose/san_jose_apics%2Ejson"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "file"
                            ]
                          },
                          "encoding": {
                            "type": "string",
                            "examples": [
                              "base64"
                            ]
                          },
                          "_links": {
                            "type": "object",
                            "properties": {
                              "self": {
                                "type": "string",
                                "examples": [
                                  "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/san_jose_apics%2Ejson?ref=main"
                                ]
                              },
                              "git": {
                                "type": "string",
                                "examples": [
                                  "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                                ]
                              },
                              "html": {
                                "type": "string",
                                "examples": [
                                  "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/san_jose_apics%2Ejson"
                                ]
                              }
                            },
                            "required": []
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "examples": [
                        "complete"
                      ]
                    },
                    "filePath": {
                      "type": "string",
                      "examples": [
                        "San Jose/san_jose_apics%2Ejson"
                      ]
                    },
                    "branchName": {
                      "type": "string",
                      "examples": [
                        "main"
                      ]
                    },
                    "repoOwner": {
                      "type": "string",
                      "examples": [
                        "NickAOrg"
                      ]
                    },
                    "repoName": {
                      "type": "string",
                      "examples": [
                        "regions"
                      ]
                    },
                    "childJobLoopIndex": {
                      "type": [
                        "integer",
                        "number"
                      ],
                      "examples": [
                        0
                      ]
                    },
                    "_id": {
                      "type": "string",
                      "examples": [
                        "4265054058694bed816650ba"
                      ]
                    },
                    "initiator": {
                      "type": "string",
                      "examples": [
                        "nick%2Eandreano@itential%2Ecom"
                      ],
                      "format": "email"
                    },
                    "error": {
                      "type": "boolean",
                      "examples": [
                        true,
                        false
                      ]
                    },
                    "fileResponse": {
                      "type": "object",
                      "properties": {
                        "icode": {
                          "type": "string",
                          "examples": [
                            "AD%2E200"
                          ]
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "pathParam": {
                              "type": "string",
                              "examples": [
                                "San Jose/san_jose_apics%2Ejson"
                              ]
                            },
                            "pathParamQuery": {
                              "type": "string",
                              "examples": [
                                "San Jose/san_jose_apics%2Ejson"
                              ]
                            },
                            "content": {
                              "type": "string",
                              "examples": [
                                "{\n    \"leaf\":\n    {\n        \"commonDevicesCommandSets\":\n        [\n            {\n                \"devices\":\n                [\n                    \"172.20.103.138\",\n                    \"172.20.103.137\"\n                ],\n                \"deviceType\": \"cisco_ios\",\n                \"username\": \"admin\",\n                \"port\": 22,\n                \"commands\":\n                [\n                    [\n                        \"show interfaces\",\n                        \"show version\"\n                    ],\n                    [\n                        \"show location\"\n                    ]\n                ]\n            }\n        ],\n        \"uniqueDevicesCommands\":\n        [\n            {\n                \"device\": \"172.20.103.121\",\n                \"deviceType\": \"cisco_xr\",\n                \"username\": \"admin\",\n                \"port\": 22,\n                \"commands\":\n                [\n                    [\n                        \"show interfaces\"\n                    ],\n                    [\n                        \"show version\"\n                    ]\n                ]\n            }\n        ]\n    },\n    \"spine\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"dci\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"internet\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"mpls\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    },\n    \"apic\":\n    {\n        \"commonDevicesCommandSets\":\n        [],\n        \"uniqueDevicesCommands\":\n        []\n    }\n}"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "examples": [
                                "san_jose_apics%2Ejson"
                              ]
                            },
                            "sha": {
                              "type": "string",
                              "examples": [
                                "3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                              ]
                            },
                            "size": {
                              "type": "integer",
                              "examples": [
                                1689
                              ]
                            },
                            "url": {
                              "type": "string",
                              "examples": [
                                "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/san_jose_apics%2Ejson?ref=main"
                              ]
                            },
                            "html_url": {
                              "type": "string",
                              "examples": [
                                "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/san_jose_apics%2Ejson"
                              ]
                            },
                            "git_url": {
                              "type": "string",
                              "examples": [
                                "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                              ]
                            },
                            "download_url": {
                              "type": "string",
                              "examples": [
                                "https://raw%2Egithubusercontent%2Ecom/NickAOrg/regions/main/San%20Jose/san_jose_apics%2Ejson"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "examples": [
                                "file"
                              ]
                            },
                            "encoding": {
                              "type": "string",
                              "examples": [
                                "base64"
                              ]
                            },
                            "_links": {
                              "type": "object",
                              "properties": {
                                "self": {
                                  "type": "string",
                                  "examples": [
                                    "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/contents/San%20Jose/san_jose_apics%2Ejson?ref=main"
                                  ]
                                },
                                "git": {
                                  "type": "string",
                                  "examples": [
                                    "https://api%2Egithub%2Ecom/repos/NickAOrg/regions/git/blobs/3b9151d6767dd9d739660f8381216e4d6c2aa7f6"
                                  ]
                                },
                                "html": {
                                  "type": "string",
                                  "examples": [
                                    "https://github%2Ecom/NickAOrg/regions/blob/main/San%20Jose/san_jose_apics%2Ejson"
                                  ]
                                }
                              },
                              "required": []
                            }
                          },
                          "required": []
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_1",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "JSON",
                "method": "parse",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/fileResponse/response/content"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "ƒ_reduce_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2023-02-20T18:54:23.219Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-20T18:58:21.066Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63dd5199be82950afcced645",
        "name": "UpdateResultsObject",
        "description": "Updates the results object from a child loop job",
        "incoming": [
          {
            "$id": "childJobLoopDetails",
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "examples": [
                  "complete"
                ]
              },
              "loop": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "resultsObject": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "loop"
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "resultsObject",
            "type": "object"
          }
        ],
        "steps": [
          {
            "id": 6,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_2",
              {}
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "childJobLoopDetails",
              "ptr": "/loop"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "resultsObject",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "string",
                "examples": [
                  "show interfaces"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "show interfaces"
                  ]
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_response": {
                    "type": "object",
                    "required": []
                  },
                  "1_filePath": {
                    "$id": "filePath",
                    "type": "string"
                  },
                  "2_host": {
                    "type": "string",
                    "examples": [
                      "172%2E20%2E103%2E2"
                    ]
                  }
                },
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_5",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [
                  null,
                  "/",
                  null,
                  "/",
                  null,
                  ".json"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/1_filePath"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "JSON",
                "method": "stringify",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_response"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "content",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "action",
                  "create"
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  {},
                  "file_path",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/2_host"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/4/value"
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "ƒ_map_5",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": "string",
                "examples": [
                  "show interfaces"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "show interfaces"
                  ]
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_response": {
                    "type": "object",
                    "required": []
                  },
                  "1_host": {
                    "type": "string",
                    "examples": [
                      "172%2E20%2E103%2E2"
                    ]
                  }
                },
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_6",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [
                  null,
                  " ",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/1_host"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              }
            ],
            "view": {
              "col": 2,
              "row": 6
            },
            "id": "ƒ_map_6",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": "string",
                "examples": [
                  "show interfaces"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "show interfaces"
                  ]
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_status": {
                    "type": "string",
                    "examples": [
                      "SUCCESS"
                    ]
                  },
                  "1_host": {
                    "type": "string",
                    "examples": [
                      "172%2E20%2E103%2E2"
                    ]
                  }
                },
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_1",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_status"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [
                  null,
                  " ",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/1_host"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 6
            },
            "id": "ƒ_reduce_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "resultsObject": {
                    "type": "object",
                    "properties": {},
                    "required": []
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "resultsObject": {
                      "type": "object",
                      "properties": {},
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_2",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "entries",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Object",
                "method": "entries",
                "args": [
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/resultsObject"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Array",
                "method": "concat",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "fromEntries",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "ƒ_reduce_2",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.498Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T20:05:39.037Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63db182799d6ef6162a28b54",
        "name": "runCommonDevicesCommandSets",
        "description": "Creates input array for runCommonDevicesCommandSets child job loop.",
        "incoming": [
          {
            "$id": "currentValue",
            "type": [
              "array",
              "boolean",
              "integer",
              "null",
              "number",
              "object",
              "string"
            ],
            "$immutable": true
          },
          {
            "$id": "filePath",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "CommonDevicesCommandSets",
            "type": "object",
            "$immutable": true
          },
          {
            "$id": "filePath",
            "type": "string",
            "$immutable": true
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "currentValue",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "CommonDevicesCommandSets",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filePath",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "filePath",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 0,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.506Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T20:04:03.622Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63dab21199d6ef6162a28b4a",
        "name": "ParseRegionalHubData",
        "description": "Separates the regional hub object into common device command sets and unique devices commands for each device type.",
        "incoming": [
          {
            "$id": "regionalHubData",
            "type": "object",
            "properties": {
              "leaf": {
                "type": "object",
                "properties": {
                  "commonDevicesCommandSets": {
                    "type": "array"
                  },
                  "uniqueDevicesCommands": {
                    "type": "array"
                  }
                },
                "required": []
              },
              "spine": {
                "type": "object",
                "properties": {
                  "commonDevicesCommandSets": {
                    "type": "array"
                  },
                  "uniqueDevicesCommands": {
                    "type": "array"
                  }
                },
                "required": []
              },
              "dci": {
                "type": "object",
                "properties": {
                  "commonDevicesCommandSets": {
                    "type": "array"
                  },
                  "uniqueDevicesCommands": {
                    "type": "array"
                  }
                },
                "required": []
              },
              "internet": {
                "type": "object",
                "properties": {
                  "commonDevicesCommandSets": {
                    "type": "array"
                  },
                  "uniqueDevicesCommands": {
                    "type": "array"
                  }
                },
                "required": []
              },
              "mpls": {
                "type": "object",
                "properties": {
                  "commonDevicesCommandSets": {
                    "type": "array"
                  },
                  "uniqueDevicesCommands": {
                    "type": "array"
                  }
                },
                "required": []
              },
              "apic": {
                "type": "object",
                "properties": {
                  "commonDevicesCommandSets": {
                    "type": "array"
                  },
                  "uniqueDevicesCommands": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "leafCommonDevicesCommandSets",
            "type": "array"
          },
          {
            "$id": "leafUniqueDevicesCommands",
            "type": "array"
          },
          {
            "$id": "spineCommonDevicesCommandSets",
            "type": "array"
          },
          {
            "$id": "spineUniqueDevicesCommands",
            "type": "array"
          },
          {
            "$id": "dciCommonDevicesCommandSets",
            "type": "array"
          },
          {
            "$id": "dciUniqueDevicesCommands",
            "type": "array"
          },
          {
            "$id": "internetCommonDevicesCommandSets",
            "type": "array"
          },
          {
            "$id": "internetUniqueDevicesCommands",
            "type": "array"
          },
          {
            "$id": "mplsCommonDevicesCommandSets",
            "type": "array"
          },
          {
            "$id": "mplsUniqueDevicesCommands",
            "type": "array"
          },
          {
            "$id": "apicCommonDevicesCommandSets",
            "type": "array"
          },
          {
            "$id": "apicUniqueDevicesCommands",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "regionalHubData",
              "ptr": "/dci/commonDevicesCommandSets"
            },
            "to": {
              "location": "outgoing",
              "name": "dciCommonDevicesCommandSets",
              "ptr": ""
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "regionalHubData",
              "ptr": "/dci/uniqueDevicesCommands"
            },
            "to": {
              "location": "outgoing",
              "name": "dciUniqueDevicesCommands",
              "ptr": ""
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "regionalHubData",
              "ptr": "/internet/commonDevicesCommandSets"
            },
            "to": {
              "location": "outgoing",
              "name": "internetCommonDevicesCommandSets",
              "ptr": ""
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "regionalHubData",
              "ptr": "/internet/uniqueDevicesCommands"
            },
            "to": {
              "location": "outgoing",
              "name": "internetUniqueDevicesCommands",
              "ptr": ""
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "regionalHubData",
              "ptr": "/mpls/commonDevicesCommandSets"
            },
            "to": {
              "location": "outgoing",
              "name": "mplsCommonDevicesCommandSets",
              "ptr": ""
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "regionalHubData",
              "ptr": "/mpls/uniqueDevicesCommands"
            },
            "to": {
              "location": "outgoing",
              "name": "mplsUniqueDevicesCommands",
              "ptr": ""
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "regionalHubData",
              "ptr": "/apic/commonDevicesCommandSets"
            },
            "to": {
              "location": "outgoing",
              "name": "apicCommonDevicesCommandSets",
              "ptr": ""
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "regionalHubData",
              "ptr": "/apic/uniqueDevicesCommands"
            },
            "to": {
              "location": "outgoing",
              "name": "apicUniqueDevicesCommands",
              "ptr": ""
            }
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "regionalHubData",
              "ptr": "/spine/commonDevicesCommandSets"
            },
            "to": {
              "location": "outgoing",
              "name": "spineCommonDevicesCommandSets",
              "ptr": ""
            }
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "regionalHubData",
              "ptr": "/spine/uniqueDevicesCommands"
            },
            "to": {
              "location": "outgoing",
              "name": "spineUniqueDevicesCommands",
              "ptr": ""
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "regionalHubData",
              "ptr": "/leaf/uniqueDevicesCommands"
            },
            "to": {
              "location": "outgoing",
              "name": "leafUniqueDevicesCommands",
              "ptr": ""
            }
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "regionalHubData",
              "ptr": "/leaf/commonDevicesCommandSets"
            },
            "to": {
              "location": "outgoing",
              "name": "leafCommonDevicesCommandSets",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "deviceTypeObject",
                "type": "object",
                "properties": {
                  "commonDevicesSets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "devices": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "examples": [
                              "device_1"
                            ]
                          }
                        },
                        "commands": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "examples": [
                                "cmd_1",
                                "cmd_3"
                              ]
                            }
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "uniqueDevices": {
                    "type": "object",
                    "properties": {},
                    "required": []
                  }
                },
                "required": []
              }
            ],
            "outgoing": [],
            "functions": [],
            "name": "extractCommonDeviceSetsAndUniqueDevices",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Array",
                "method": "map",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "deviceTypeObject",
                  "ptr": "/commonDevicesSets"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              }
            ],
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "extractCommonDeviceSetsAndUniqueDevices",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.511Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T19:22:49.988Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63db221a99d6ef6162a28b57",
        "name": "runUniqueDevicesCommands",
        "description": "Creates input array for runUniqueDevicesCommands child job loop.",
        "incoming": [
          {
            "$id": "currentValue",
            "type": [
              "array",
              "boolean",
              "integer",
              "null",
              "number",
              "object",
              "string"
            ],
            "$immutable": true
          },
          {
            "$id": "filePath",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "uniqueDevicesCommands",
            "type": "object",
            "$immutable": true
          },
          {
            "$id": "filePath",
            "type": "string",
            "$immutable": true
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filePath",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "filePath",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "currentValue",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "uniqueDevicesCommands",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.504Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T20:04:27.163Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63e0489fbe82950afcced649",
        "name": "CreateResultsReport",
        "description": "Combines all the Unique and Command results into a single report",
        "incoming": [
          {
            "$id": "leafCommonResults",
            "type": "object"
          },
          {
            "$id": "leafUniqueResults",
            "type": "object"
          },
          {
            "$id": "spineCommonResults",
            "type": "object"
          },
          {
            "$id": "spineUniqueResults",
            "type": "object"
          },
          {
            "$id": "dciCommonResults",
            "type": "object"
          },
          {
            "$id": "dciUniqueResults",
            "type": "object"
          },
          {
            "$id": "internetCommonResults",
            "type": "object"
          },
          {
            "$id": "internetUniqueResults",
            "type": "object"
          },
          {
            "$id": "mplsCommonResults",
            "type": "object"
          },
          {
            "$id": "mplsUniqueResults",
            "type": "object"
          },
          {
            "$id": "apicCommonResults",
            "type": "object"
          },
          {
            "$id": "apicUniqueResults",
            "type": "object"
          }
        ],
        "outgoing": [
          {
            "$id": "results",
            "type": "object"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Object",
            "method": "entries",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "method",
            "library": "Object",
            "method": "entries",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 3,
            "type": "method",
            "library": "Object",
            "method": "entries",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 4,
            "type": "method",
            "library": "Object",
            "method": "entries",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 5,
            "type": "method",
            "library": "Object",
            "method": "entries",
            "args": [
              null
            ],
            "view": {
              "row": 3,
              "col": 1
            }
          },
          {
            "id": 6,
            "type": "method",
            "library": "Object",
            "method": "entries",
            "args": [
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "leafCommonResults",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "leafUniqueResults",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 3,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "spineCommonResults",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 2,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "spineUniqueResults",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 4,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "dciCommonResults",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 5,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "dciUniqueResults",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 13,
            "type": "method",
            "library": "Object",
            "method": "entries",
            "args": [
              null
            ],
            "view": {
              "row": 4,
              "col": 1
            }
          },
          {
            "id": 14,
            "type": "method",
            "library": "Object",
            "method": "entries",
            "args": [
              null
            ],
            "view": {
              "row": 4,
              "col": 2
            }
          },
          {
            "id": 15,
            "type": "method",
            "library": "Object",
            "method": "entries",
            "args": [
              null
            ],
            "view": {
              "row": 5,
              "col": 1
            }
          },
          {
            "id": 16,
            "type": "method",
            "library": "Object",
            "method": "entries",
            "args": [
              null
            ],
            "view": {
              "row": 5,
              "col": 2
            }
          },
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "internetCommonResults",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 13,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "internetUniqueResults",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 14,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 19,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "mplsCommonResults",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 15,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "mplsUniqueResults",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 16,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 21,
            "type": "method",
            "library": "Object",
            "method": "entries",
            "args": [
              null
            ],
            "view": {
              "row": 6,
              "col": 1
            }
          },
          {
            "id": 22,
            "type": "method",
            "library": "Object",
            "method": "entries",
            "args": [
              null
            ],
            "view": {
              "row": 6,
              "col": 2
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "apicCommonResults",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 21,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "apicUniqueResults",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 22,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 25,
            "type": "method",
            "library": "Array",
            "method": "concat",
            "args": [
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 4,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 29,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/3/value"
            }
          },
          {
            "id": 30,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/4/value"
            }
          },
          {
            "id": 31,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 5,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/5/value"
            }
          },
          {
            "id": 32,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 14,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/6/value"
            }
          },
          {
            "id": 33,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 13,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/7/value"
            }
          },
          {
            "id": 34,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 16,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/8/value"
            }
          },
          {
            "id": 35,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 15,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/9/value"
            }
          },
          {
            "id": 36,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 22,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/10/value"
            }
          },
          {
            "id": 37,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 21,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/11/value"
            }
          },
          {
            "id": 38,
            "type": "method",
            "library": "Object",
            "method": "fromEntries",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 4
            }
          },
          {
            "id": 39,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 25,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 38,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 40,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 38,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "results",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 4,
          "row": 7
        },
        "created": "2023-02-06T00:23:59.156Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T19:12:33.185Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63dabf4a99d6ef6162a28b4b",
        "name": "ParseCommonDevicesCommandSets",
        "description": "Separates individual variables form the CommonDevicesCommandSets and builds a default resultsObject. ",
        "incoming": [
          {
            "$id": "CommonDevicesCommandSets",
            "type": "object",
            "properties": {
              "devices": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "$id": "devices"
              },
              "deviceType": {
                "type": "string",
                "examples": [
                  "ios"
                ]
              },
              "username": {
                "type": "string",
                "examples": [
                  "admin"
                ]
              },
              "port": {
                "type": "integer",
                "examples": [
                  22
                ]
              },
              "commands": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "examples": [
                      "cmd_1",
                      "cmd_3"
                    ]
                  }
                },
                "$id": "commands"
              }
            },
            "required": []
          },
          {
            "$id": "filePath",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "devices",
            "type": "array"
          },
          {
            "$id": "deviceType",
            "type": "string"
          },
          {
            "$id": "username",
            "type": "string"
          },
          {
            "$id": "port",
            "type": "number"
          },
          {
            "$id": "commands",
            "type": "array"
          },
          {
            "$id": "filePath",
            "type": "string"
          },
          {
            "$id": "resultsObject",
            "type": "object"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "CommonDevicesCommandSets",
              "ptr": "/devices"
            },
            "to": {
              "location": "outgoing",
              "name": "devices",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "CommonDevicesCommandSets",
              "ptr": "/deviceType"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceType",
              "ptr": ""
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "CommonDevicesCommandSets",
              "ptr": "/username"
            },
            "to": {
              "location": "outgoing",
              "name": "username",
              "ptr": ""
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "CommonDevicesCommandSets",
              "ptr": "/port"
            },
            "to": {
              "location": "outgoing",
              "name": "port",
              "ptr": ""
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "CommonDevicesCommandSets",
              "ptr": "/commands"
            },
            "to": {
              "location": "outgoing",
              "name": "commands",
              "ptr": ""
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filePath",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "filePath",
              "ptr": ""
            }
          },
          {
            "id": 7,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              {},
              null
            ],
            "view": {
              "row": 4,
              "col": 1
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "CommonDevicesCommandSets",
              "ptr": "/devices"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "CommonDevicesCommandSets",
              "ptr": "/commands"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/3/value"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "resultsObject",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": "string",
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_commands": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "examples": [
                          "cmd_1",
                          "cmd_3"
                        ]
                      }
                    }
                  }
                },
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [
              {
                "incoming": [
                  {
                    "$id": "accumulator",
                    "type": [
                      "array",
                      "boolean",
                      "number",
                      "integer",
                      "string",
                      "object",
                      "null"
                    ]
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "cmd_1",
                        "cmd_3"
                      ]
                    },
                    "$id": "currentValue"
                  },
                  {
                    "title": "index",
                    "type": "number",
                    "optional": true,
                    "$id": "index"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "examples": [
                          "cmd_1",
                          "cmd_3"
                        ]
                      }
                    },
                    "$id": "array",
                    "optional": true
                  },
                  {
                    "$id": "thisArg",
                    "type": "object",
                    "properties": {
                      "0_currentValue": {
                        "type": "string",
                        "$id": "currentValue"
                      }
                    },
                    "isContext": true,
                    "isThis": true,
                    "isIndexed": true
                  }
                ],
                "outgoing": [
                  {
                    "title": "accumulator",
                    "type": [
                      "array",
                      "boolean",
                      "number",
                      "integer",
                      "string",
                      "object",
                      "null"
                    ],
                    "$id": "accumulator"
                  }
                ],
                "functions": [
                  {
                    "incoming": [
                      {
                        "$id": "accumulator",
                        "type": [
                          "array",
                          "boolean",
                          "number",
                          "integer",
                          "string",
                          "object",
                          "null"
                        ]
                      },
                      {
                        "type": "string",
                        "examples": [
                          "cmd_1",
                          "cmd_3"
                        ],
                        "$id": "currentValue"
                      },
                      {
                        "title": "index",
                        "type": "number",
                        "optional": true,
                        "$id": "index"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "examples": [
                            "cmd_1",
                            "cmd_3"
                          ]
                        },
                        "$id": "array",
                        "optional": true
                      },
                      {
                        "$id": "thisArg",
                        "type": "object",
                        "properties": {
                          "0_currentValue": {
                            "type": "string",
                            "$id": "currentValue"
                          }
                        },
                        "isContext": true,
                        "isThis": true,
                        "isIndexed": true
                      }
                    ],
                    "outgoing": [
                      {
                        "title": "accumulator",
                        "type": [
                          "array",
                          "boolean",
                          "number",
                          "integer",
                          "string",
                          "object",
                          "null"
                        ],
                        "$id": "accumulator"
                      }
                    ],
                    "functions": [],
                    "name": "ƒ_reduce_1",
                    "steps": [
                      {
                        "id": 1,
                        "type": "method",
                        "library": "Object",
                        "method": "setProperty",
                        "args": [
                          null,
                          null,
                          "FAILURE"
                        ],
                        "view": {
                          "row": 1,
                          "col": 1
                        }
                      },
                      {
                        "id": 2,
                        "type": "method",
                        "library": "String",
                        "method": "concat",
                        "args": [
                          null,
                          " ",
                          null
                        ],
                        "view": {
                          "row": 2,
                          "col": 1
                        }
                      },
                      {
                        "id": 3,
                        "type": "assign",
                        "from": {
                          "location": "incoming",
                          "name": "thisArg",
                          "ptr": "/0_currentValue"
                        },
                        "to": {
                          "location": "method",
                          "name": 2,
                          "ptr": "/args/0/value"
                        }
                      },
                      {
                        "id": 4,
                        "type": "assign",
                        "from": {
                          "location": "incoming",
                          "name": "currentValue",
                          "ptr": ""
                        },
                        "to": {
                          "location": "method",
                          "name": 2,
                          "ptr": "/args/2/value"
                        }
                      },
                      {
                        "id": 5,
                        "type": "assign",
                        "from": {
                          "location": "method",
                          "name": 2,
                          "ptr": "/return"
                        },
                        "to": {
                          "location": "method",
                          "name": 1,
                          "ptr": "/args/1/value"
                        }
                      },
                      {
                        "id": 6,
                        "type": "assign",
                        "from": {
                          "location": "incoming",
                          "name": "accumulator",
                          "ptr": ""
                        },
                        "to": {
                          "location": "method",
                          "name": 1,
                          "ptr": "/args/0/value"
                        }
                      },
                      {
                        "id": 7,
                        "type": "assign",
                        "from": {
                          "location": "method",
                          "name": 1,
                          "ptr": "/return"
                        },
                        "to": {
                          "location": "outgoing",
                          "name": "accumulator",
                          "ptr": ""
                        }
                      }
                    ],
                    "view": {
                      "col": 1,
                      "row": 6
                    },
                    "id": "ƒ_reduce_1",
                    "comments": []
                  }
                ],
                "name": "ƒ_reduce_1",
                "steps": [
                  {
                    "id": 1,
                    "type": "method",
                    "library": "Array",
                    "method": "reduce",
                    "args": [
                      null,
                      "ƒ_reduce_1",
                      null,
                      null
                    ],
                    "view": {
                      "row": 2,
                      "col": 1
                    }
                  },
                  {
                    "id": 2,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "currentValue",
                      "ptr": ""
                    },
                    "to": {
                      "location": "method",
                      "name": 1,
                      "ptr": "/args/0/value"
                    }
                  },
                  {
                    "id": 3,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "accumulator",
                      "ptr": ""
                    },
                    "to": {
                      "location": "method",
                      "name": 1,
                      "ptr": "/args/2/value"
                    }
                  },
                  {
                    "id": 4,
                    "type": "assign",
                    "from": {
                      "location": "method",
                      "name": 1,
                      "ptr": "/return"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "accumulator",
                      "ptr": ""
                    }
                  },
                  {
                    "id": 5,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "thisArg",
                      "ptr": "/0_currentValue"
                    },
                    "to": {
                      "location": "method",
                      "name": 1,
                      "ptr": "/args/3/value"
                    }
                  }
                ],
                "view": {
                  "col": 1,
                  "row": 6
                },
                "id": "ƒ_reduce_1",
                "comments": []
              }
            ],
            "name": "ƒ_reduce_1",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Array",
                "method": "reduce",
                "args": [
                  null,
                  "ƒ_reduce_1",
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_commands"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/3/value"
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 6
            },
            "id": "ƒ_reduce_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.509Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T19:19:02.331Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63db112d99d6ef6162a28b52",
        "name": "runCommandArrayonDevice (1)",
        "incoming": [
          {
            "$id": "currentValue",
            "type": [
              "array",
              "boolean",
              "integer",
              "null",
              "number",
              "object",
              "string"
            ],
            "$immutable": true
          },
          {
            "$id": "deviceType",
            "type": "string"
          },
          {
            "$id": "port",
            "type": "number"
          },
          {
            "$id": "username",
            "type": "string"
          },
          {
            "$id": "password",
            "type": "string"
          },
          {
            "$id": "filePath",
            "type": "string"
          },
          {
            "$id": "commandsArray",
            "type": "array"
          }
        ],
        "outgoing": [
          {
            "$id": "device",
            "type": "string",
            "$immutable": true
          },
          {
            "$id": "deviceType",
            "type": "string",
            "$immutable": true
          },
          {
            "$id": "port",
            "type": "number",
            "$immutable": true
          },
          {
            "$id": "username",
            "type": "string",
            "$immutable": true
          },
          {
            "$id": "password",
            "type": "string",
            "$immutable": true
          },
          {
            "$id": "filePath",
            "type": "string",
            "$immutable": true
          },
          {
            "$id": "commandsArray",
            "type": "array",
            "$immutable": true
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "currentValue",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "device",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "commandsArray",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "commandsArray",
              "ptr": ""
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filePath",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "filePath",
              "ptr": ""
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "password",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "password",
              "ptr": ""
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "port",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "port",
              "ptr": ""
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "username",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "username",
              "ptr": ""
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceType",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceType",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 0,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.503Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-02T21:16:19.503Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63db1e9599d6ef6162a28b55",
        "name": "parseUniqueDevicesCommands",
        "description": "Separates individual variables form the unique devices commands and builds a default resultsObject. ",
        "incoming": [
          {
            "$id": "uniqueDevicesCommands",
            "type": "object",
            "properties": {
              "device": {
                "type": "string",
                "examples": [
                  "172%2E20%2E103%2E134"
                ]
              },
              "deviceType": {
                "type": "string",
                "examples": [
                  "ios"
                ]
              },
              "username": {
                "type": "string",
                "examples": [
                  "admin"
                ]
              },
              "port": {
                "type": "integer",
                "examples": [
                  22
                ]
              },
              "commands": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "examples": [
                      "show interfaces"
                    ]
                  }
                },
                "$id": "commands"
              }
            },
            "required": []
          },
          {
            "$id": "filePath",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "device",
            "type": "string"
          },
          {
            "$id": "deviceType",
            "type": "string"
          },
          {
            "$id": "username",
            "type": "string"
          },
          {
            "$id": "port",
            "type": "number"
          },
          {
            "$id": "commands",
            "type": "array"
          },
          {
            "$id": "filePath",
            "type": "string"
          },
          {
            "$id": "resultsObject",
            "type": "object"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filePath",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "filePath",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "uniqueDevicesCommands",
              "ptr": "/device"
            },
            "to": {
              "location": "outgoing",
              "name": "device",
              "ptr": ""
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "uniqueDevicesCommands",
              "ptr": "/deviceType"
            },
            "to": {
              "location": "outgoing",
              "name": "deviceType",
              "ptr": ""
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "uniqueDevicesCommands",
              "ptr": "/port"
            },
            "to": {
              "location": "outgoing",
              "name": "port",
              "ptr": ""
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "uniqueDevicesCommands",
              "ptr": "/username"
            },
            "to": {
              "location": "outgoing",
              "name": "username",
              "ptr": ""
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "uniqueDevicesCommands",
              "ptr": "/commands"
            },
            "to": {
              "location": "outgoing",
              "name": "commands",
              "ptr": ""
            }
          },
          {
            "id": 7,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              {},
              null
            ],
            "view": {
              "row": 4,
              "col": 1
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "uniqueDevicesCommands",
              "ptr": "/commands"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "uniqueDevicesCommands",
              "ptr": "/device"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/3/value"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "resultsObject",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "show interfaces"
                  ]
                },
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "examples": [
                      "show interfaces"
                    ]
                  }
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_device": {
                    "type": "string",
                    "examples": [
                      "172%2E20%2E103%2E134"
                    ]
                  }
                },
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [
              {
                "incoming": [
                  {
                    "$id": "accumulator",
                    "type": [
                      "array",
                      "boolean",
                      "number",
                      "integer",
                      "string",
                      "object",
                      "null"
                    ]
                  },
                  {
                    "type": "string",
                    "examples": [
                      "show interfaces"
                    ],
                    "$id": "currentValue"
                  },
                  {
                    "title": "index",
                    "type": "number",
                    "optional": true,
                    "$id": "index"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "show interfaces"
                      ]
                    },
                    "$id": "array",
                    "optional": true
                  },
                  {
                    "$id": "thisArg",
                    "type": "object",
                    "properties": {
                      "0_device": {
                        "type": "string",
                        "examples": [
                          "172%2E20%2E103%2E134"
                        ]
                      }
                    },
                    "isContext": true,
                    "isThis": true,
                    "isIndexed": true
                  }
                ],
                "outgoing": [
                  {
                    "title": "accumulator",
                    "type": [
                      "array",
                      "boolean",
                      "number",
                      "integer",
                      "string",
                      "object",
                      "null"
                    ],
                    "$id": "accumulator"
                  }
                ],
                "functions": [],
                "name": "ƒ_reduce_1",
                "steps": [
                  {
                    "id": 1,
                    "type": "method",
                    "library": "String",
                    "method": "concat",
                    "args": [
                      null,
                      " ",
                      null
                    ],
                    "view": {
                      "row": 2,
                      "col": 1
                    }
                  },
                  {
                    "id": 2,
                    "type": "method",
                    "library": "Object",
                    "method": "setProperty",
                    "args": [
                      null,
                      null,
                      "FAILURE"
                    ],
                    "view": {
                      "row": 1,
                      "col": 1
                    }
                  },
                  {
                    "id": 3,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "accumulator",
                      "ptr": ""
                    },
                    "to": {
                      "location": "method",
                      "name": 2,
                      "ptr": "/args/0/value"
                    }
                  },
                  {
                    "id": 4,
                    "type": "assign",
                    "from": {
                      "location": "method",
                      "name": 2,
                      "ptr": "/return"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "accumulator",
                      "ptr": ""
                    }
                  },
                  {
                    "id": 5,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "thisArg",
                      "ptr": "/0_device"
                    },
                    "to": {
                      "location": "method",
                      "name": 1,
                      "ptr": "/args/0/value"
                    }
                  },
                  {
                    "id": 6,
                    "type": "assign",
                    "from": {
                      "location": "method",
                      "name": 1,
                      "ptr": "/return"
                    },
                    "to": {
                      "location": "method",
                      "name": 2,
                      "ptr": "/args/1/value"
                    }
                  },
                  {
                    "id": 7,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "currentValue",
                      "ptr": ""
                    },
                    "to": {
                      "location": "method",
                      "name": 1,
                      "ptr": "/args/2/value"
                    }
                  }
                ],
                "view": {
                  "col": 1,
                  "row": 6
                },
                "id": "ƒ_reduce_1",
                "comments": []
              }
            ],
            "name": "ƒ_reduce_1",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Array",
                "method": "reduce",
                "args": [
                  null,
                  "ƒ_reduce_1",
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_device"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/3/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 6
            },
            "id": "ƒ_reduce_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.502Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T19:24:08.535Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63dad6d999d6ef6162a28b4f",
        "name": "RunCommandsandPushToGitHub (1)",
        "description": "equires all job variables for job run.",
        "incoming": [
          {
            "$id": "currentValue",
            "type": [
              "array",
              "boolean",
              "integer",
              "null",
              "number",
              "object",
              "string"
            ],
            "$immutable": true
          },
          {
            "$id": "filePath",
            "type": "string"
          },
          {
            "$id": "device",
            "type": "string"
          },
          {
            "$id": "deviceType",
            "type": "string"
          },
          {
            "$id": "port",
            "type": "number"
          },
          {
            "$id": "username",
            "type": "string"
          },
          {
            "$id": "password",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "commands",
            "type": "array",
            "$immutable": true
          },
          {
            "$id": "filePath",
            "type": "string",
            "$immutable": true
          },
          {
            "$id": "device",
            "type": "string",
            "$immutable": true
          },
          {
            "$id": "deviceType",
            "type": "string",
            "$immutable": true
          },
          {
            "$id": "port",
            "type": "number",
            "$immutable": true
          },
          {
            "$id": "username",
            "type": "string",
            "$immutable": true
          },
          {
            "$id": "password",
            "type": "string",
            "$immutable": true
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "currentValue",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "commands",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filePath",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "filePath",
              "ptr": ""
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "username",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "username",
              "ptr": ""
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "password",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "password",
              "ptr": ""
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "device",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "device",
              "ptr": ""
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceType",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceType",
              "ptr": ""
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "port",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "port",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 0,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.510Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T20:03:53.468Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63dacd5b99d6ef6162a28b4e",
        "name": "runCommandArrayonDeviceInput",
        "description": "Requires all job variables for job run.",
        "incoming": [
          {
            "$id": "device",
            "type": "string"
          },
          {
            "$id": "deviceType",
            "type": "string"
          },
          {
            "$id": "port",
            "type": "number"
          },
          {
            "$id": "username",
            "type": "string"
          },
          {
            "$id": "password",
            "type": "string"
          },
          {
            "$id": "filePath",
            "type": "string"
          },
          {
            "$id": "commandsArray",
            "type": "array"
          }
        ],
        "outgoing": [
          {
            "$id": "device",
            "type": "string"
          },
          {
            "$id": "deviceType",
            "type": "string"
          },
          {
            "$id": "port",
            "type": "number"
          },
          {
            "$id": "username",
            "type": "string"
          },
          {
            "$id": "password",
            "type": "string"
          },
          {
            "$id": "filePath",
            "type": "string"
          },
          {
            "$id": "commandsArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "device",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "device",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceType",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "deviceType",
              "ptr": ""
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "port",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "port",
              "ptr": ""
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "username",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "username",
              "ptr": ""
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "password",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "password",
              "ptr": ""
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filePath",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "filePath",
              "ptr": ""
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "commandsArray",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "commandsArray",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 0,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.501Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T19:30:08.443Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63dc32dcbe82950afcced644",
        "name": "buildJobDescription",
        "description": "Builds the job descriptions based on the device, commands, and designations (tags)",
        "incoming": [
          {
            "$id": "device",
            "type": "string"
          },
          {
            "$id": "designations",
            "type": "string"
          },
          {
            "$id": "commands",
            "type": "array"
          }
        ],
        "outgoing": [
          {
            "$id": "jobDescription",
            "type": "string"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "toString",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "commands",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "method",
            "library": "String",
            "method": "concat",
            "args": [
              null,
              " |  ",
              null,
              " | ",
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "device",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 3,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 3,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "jobDescription",
              "ptr": ""
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 3,
              "ptr": "/args/4/value"
            }
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "designations",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 3,
              "ptr": "/args/2/value"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_1",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [
                  null,
                  " ",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "ƒ_reduce_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2023-02-02T22:02:04.328Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T18:59:24.158Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63d8191d99d6ef6162a28b3f",
        "name": "parseNetmikoSendCommandforGitHub (1)",
        "description": "Parses the Netmiko return and creates an array of individual files ready to github",
        "incoming": [
          {
            "$id": "netmikoResult",
            "type": "object",
            "properties": {
              "icode": {
                "type": "string",
                "examples": [
                  "AD%2E200"
                ]
              },
              "response": {
                "type": "object",
                "properties": {
                  "host": {
                    "type": "string",
                    "examples": [
                      "172%2E20%2E103%2E2"
                    ]
                  },
                  "commands": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "show interfaces"
                      ]
                    },
                    "$id": "commands"
                  },
                  "status": {
                    "type": "string",
                    "examples": [
                      "SUCCESS"
                    ]
                  },
                  "response": {
                    "type": "object",
                    "required": []
                  }
                },
                "required": []
              },
              "headers": {
                "type": "object",
                "properties": {
                  "server": {
                    "type": "string",
                    "examples": [
                      "gunicorn/20%2E0%2E4"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "examples": [
                      "Fri, 27 Jan 2023 04:19:21 GMT"
                    ]
                  },
                  "connection": {
                    "type": "string",
                    "examples": [
                      "close"
                    ]
                  },
                  "content-type": {
                    "type": "string",
                    "examples": [
                      "application/json;"
                    ]
                  },
                  "content-length": {
                    "type": "string",
                    "examples": [
                      "10374"
                    ]
                  },
                  "last-modified": {
                    "type": "string",
                    "examples": [
                      "2023-01-26 23:19:21%2E354141"
                    ]
                  },
                  "cache-control": {
                    "type": "string",
                    "examples": [
                      "no-store, no-cache, must-revalidate, post-check=0, pre-check=0, max-age=0"
                    ]
                  },
                  "pragma": {
                    "type": "string",
                    "examples": [
                      "no-cache"
                    ]
                  },
                  "expires": {
                    "type": "string",
                    "examples": [
                      "-1"
                    ]
                  },
                  "x-frame-options": {
                    "type": "string",
                    "examples": [
                      "DENY"
                    ]
                  },
                  "x-xss-protection": {
                    "type": "string",
                    "examples": [
                      "1"
                    ]
                  },
                  "x-content-type-options": {
                    "type": "string",
                    "examples": [
                      "nosniff"
                    ]
                  }
                },
                "required": []
              },
              "metrics": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "examples": [
                      200
                    ]
                  },
                  "timeouts": {
                    "type": "integer",
                    "examples": [
                      0
                    ]
                  },
                  "redirects": {
                    "type": "integer",
                    "examples": [
                      0
                    ]
                  },
                  "retries": {
                    "type": "integer",
                    "examples": [
                      0
                    ]
                  },
                  "tripTime": {
                    "type": "integer",
                    "examples": [
                      4967
                    ]
                  },
                  "isThrottling": {
                    "type": "boolean",
                    "examples": [
                      true,
                      false
                    ]
                  },
                  "capabilityTime": {
                    "type": "string",
                    "examples": [
                      "5129ms"
                    ]
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "filePath",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "netMikoResultsArray_copy",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "examples": [
                    "update"
                  ]
                },
                "file_path": {
                  "type": "string",
                  "examples": [
                    "README%2Emd"
                  ]
                },
                "content": {
                  "type": "string",
                  "examples": [
                    "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n\n<!-- Update the below line with your artifact name -->\n# Push Bundles to GitHub\n\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n<!-- Write a few sentences about the artifact and explain the use case(s) -->\n<!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments -->\n<!-- (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E -->\n\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitHub -->\n<!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW -->\n<!-- <!--  -->\nThe **Push Bundles to GitHub** pre-built takes an Admin Essentials installed pre-built and creates a new project in GitHub using the up-to-date pre-built bundle%2E\nIf the project and branch already exists in the specified GitHub group, it will create a new branch and open a pull request in GitHub with any changes made in the lab environment%2E \n\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/push-bundle-to-github/-/raw/release/2021.2/images/workflow.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n<!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->\n\n<!-- ADD ESTIMATED RUN TIME HERE -->\n<!-- e%2Eg%2E Estimated Run Time: 34 min%2E -->\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n<!-- Include any other required apps or adapters in this list -->\n<!-- Ex%2E: EC2 Adapter -->\n* Itential Automation Platform\n  * `^2021%2E2`\n* App-Artifacts\n  * `6%2E1%2E16-2021%2E1%2E2`\n* [GitHub Adapter](https://gitlab%2Ecom/itentialopensource/adapters/devops-netops/adapter-github)\n\n\n## Requirements\n\nThis artifact requires the following:\n\n<!-- Unordered list highlighting the requirements of the artifact -->\n<!-- EXAMPLE -->\n<!-- * cisco ios device -->\n* Artifact installed in Admin Essentials\n* GitHub Organization Name\n\n## Features\n\nThe main benefits and features of the artifact are outlined below%2E\n\n<!-- Unordered list highlighting the most exciting features of the artifact -->\n<!-- EXAMPLE -->\n<!-- * Automatically checks for device type -->\n<!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n* Automatically create repo and branch%2E\n* Automatically create Pull Request when repo and branch exist%2E\n* Allows user to perform rediscovery of an installed artifact (where new components were added)%2E\n* Adds the current IAP user whoami username to the Pull Request description for the Pull Request reviewer%2E\n* Auto artifact%2Ejson generator script\n* Helps to handle \"Artifact-As-Code\" with version control, PR, and code-promotion procedures%2E\n\n\n<!-- ## Future Enhancements -->\n\n<!-- OPTIONAL - Mention if the artifact will be enhanced with additional features on the road map -->\n<!-- Ex%2E: This artifact would support Cisco XR and F5 devices -->\n\n## How to Install\n\nTo install this pre-built:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section%2E \n* The artifact can be installed from within App-Admin_Essential%2E Simply search for the name of your desired artifact and click the install button (as shown below)%2E\n\n<!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED ARTIFACT -->\n<!-- <!-- -->\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/push-bundle-to-github/-/raw/release/2021.2/images/install.png\" alt=\"install\" width=\"600px\">\n</td></tr></table>\n\n<!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED ARTIFACT -->\n\n<!-- OPTIONAL - Explain if external components are required outside of IAP -->\n<!-- Ex%2E: The Ansible roles required for this artifact can be found in the repository located at https://GitHub%2Ecom/itentialopensource/pre-built-automations/hello-world -->\n\n## How to Run\n\nUse the following to run the artifact:\n\n<!-- Explain the main entrypoint(s) for this artifact: Automation Catalog item, Workflow, Postman, etc%2E -->\n\n1%2E In Automation Catalog, find the **Push Bundles to GitHub** entry%2E\n2%2E Fill out the form (as shown below) with the appropriate values%2E\n3%2E Continue with all manual tasks in the workflow%2E\n\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/push-bundle-to-github/-/raw/release/2021.2/images/form.png\" alt=\"form\" width=\"600px\">\n</td></tr></table>\n\nForm Inputs (look for above screenshot for example inputs)\n1%2E Adapter Name - Adapter name configured with user token\n2%2E GitHub Project Name - Project name in GitHub to Update/Create\n3%2E GitHub Organization Name - GitHub organization name to push repository\n4%2E Re-discover - Perform re-discover\n5%2E Artifact - name of the installed bundle to push onto remote repo\n6%2E PR Type - Type of PR (patch/minor/major)\n7%2E Commit Message -  Commit message to add for commit tasks\n8%2E Target Branch - Traget branch to set for PR\n"
                  ]
                }
              },
              "required": []
            }
          }
        ],
        "steps": [
          {
            "id": 7,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "ƒ_map_5",
              null,
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "netmikoResult",
              "ptr": "/response/commands"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "netmikoResult",
              "ptr": "/response/response"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filePath",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/3/value"
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "netMikoResultsArray_copy",
              "ptr": ""
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "netmikoResult",
              "ptr": "/response/host"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/4/value"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "string",
                "examples": [
                  "show interfaces"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "show interfaces"
                  ]
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_response": {
                    "type": "object",
                    "required": []
                  },
                  "1_filePath": {
                    "$id": "filePath",
                    "type": "string"
                  },
                  "2_host": {
                    "type": "string",
                    "examples": [
                      "172%2E20%2E103%2E2"
                    ]
                  }
                },
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_5",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [
                  null,
                  "/",
                  null,
                  "/",
                  null,
                  ".json"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/1_filePath"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "JSON",
                "method": "stringify",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_response"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "content",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "action",
                  "create"
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  {},
                  "file_path",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/2_host"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/4/value"
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "ƒ_map_5",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.498Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T19:20:21.007Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63d966e399d6ef6162a28b40",
        "name": "CreateNetmikoInput",
        "description": "Builds the input object for the netmiko task.",
        "incoming": [
          {
            "$id": "commands",
            "type": "array"
          },
          {
            "$id": "host",
            "type": "string"
          },
          {
            "$id": "deviceType",
            "type": "string"
          },
          {
            "$id": "port",
            "type": "number"
          },
          {
            "$id": "username",
            "type": "string"
          },
          {
            "$id": "password",
            "type": "string"
          },
          {
            "$id": "fast_cli",
            "type": "boolean"
          }
        ],
        "outgoing": [
          {
            "$id": "netmikoSendCommandParameters",
            "type": "object"
          }
        ],
        "steps": [
          {
            "id": 12,
            "type": "function",
            "function": "userFunc_2",
            "args": [
              "",
              "",
              null
            ],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "commands",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 12,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "host",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 12,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 12,
              "ptr": "/return/netmikoSendCommandParameters"
            },
            "to": {
              "location": "outgoing",
              "name": "netmikoSendCommandParameters",
              "ptr": ""
            }
          },
          {
            "id": 22,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "password",
              null
            ],
            "view": {
              "row": 4,
              "col": 1
            }
          },
          {
            "id": 23,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              {},
              "fast_cli",
              null
            ],
            "view": {
              "row": 3,
              "col": 1
            }
          },
          {
            "id": 24,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "username",
              null
            ],
            "view": {
              "row": 4,
              "col": 2
            }
          },
          {
            "id": 25,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "port",
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 26,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "device_type",
              null
            ],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 26,
              "ptr": "/return"
            },
            "to": {
              "location": "function",
              "name": 12,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "deviceType",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 26,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 29,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 25,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 26,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 30,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 24,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 31,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 22,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 24,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 32,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 23,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 22,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 33,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "port",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 34,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "username",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 24,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 35,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "password",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 22,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 36,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "fast_cli",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 23,
              "ptr": "/args/2/value"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "deviceType",
                "type": "string"
              },
              {
                "$id": "port",
                "type": "number"
              },
              {
                "$id": "username",
                "type": "string"
              },
              {
                "$id": "password",
                "type": "string"
              },
              {
                "$id": "Global%20Delay%20Factor",
                "type": "number"
              }
            ],
            "outgoing": [
              {
                "$id": "connection_options",
                "type": "object",
                "properties": {
                  "device_type": {
                    "type": "string"
                  },
                  "port": {
                    "type": "number"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "global_delay_factor": {
                    "type": "number"
                  }
                },
                "required": []
              }
            ],
            "functions": [],
            "name": "userFunc_1",
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "password",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "connection_options",
                  "ptr": "/password"
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "username",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "connection_options",
                  "ptr": "/username"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "deviceType",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "connection_options",
                  "ptr": "/device_type"
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "port",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "connection_options",
                  "ptr": "/port"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "global_delay_factor",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "connection_options",
                  "ptr": "/global_delay_factor"
                }
              }
            ],
            "view": {
              "col": 2,
              "row": 6
            },
            "id": "userFunc_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "commands",
                "type": "array"
              },
              {
                "$id": "host",
                "type": "string"
              },
              {
                "$id": "connection_options",
                "type": "object"
              }
            ],
            "outgoing": [
              {
                "$id": "netmikoSendCommandParameters",
                "type": "object",
                "properties": {
                  "commands": {
                    "type": "array"
                  },
                  "host": {
                    "type": "string"
                  },
                  "connection_options": {
                    "type": "object",
                    "properties": {},
                    "required": []
                  }
                },
                "required": []
              }
            ],
            "functions": [],
            "name": "userFunc_2",
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "commands",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "netmikoSendCommandParameters",
                  "ptr": "/commands"
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "host",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "netmikoSendCommandParameters",
                  "ptr": "/host"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "connection_options",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "netmikoSendCommandParameters",
                  "ptr": "/connection_options"
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 6
            },
            "id": "userFunc_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "deviceType",
                "type": "string"
              },
              {
                "$id": "port",
                "type": "number"
              },
              {
                "$id": "username",
                "type": "string"
              },
              {
                "$id": "password",
                "type": "string"
              },
              {
                "$id": "fast_cli",
                "type": "boolean"
              }
            ],
            "outgoing": [
              {
                "$id": "connectionOptions",
                "type": "object",
                "properties": {
                  "device_type": {
                    "type": "string"
                  },
                  "port": {
                    "type": "number",
                    "examples": [
                      22
                    ]
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "fast_cli": {
                    "type": "boolean",
                    "examples": [
                      true,
                      false
                    ]
                  }
                },
                "required": []
              }
            ],
            "functions": [],
            "name": "userFunc_3",
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "fast_cli",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "connectionOptions",
                  "ptr": "/fast_cli"
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "username",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "connectionOptions",
                  "ptr": "/username"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "port",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "connectionOptions",
                  "ptr": "/port"
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "deviceType",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "connectionOptions",
                  "ptr": "/device_type"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "password",
                  "ptr": ""
                },
                "to": {
                  "location": "outgoing",
                  "name": "connectionOptions",
                  "ptr": "/password"
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 6
            },
            "id": "userFunc_3",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.513Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T19:03:54.258Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63e0439fbe82950afcced648",
        "name": "createResultObjectFromNetmikoResult",
        "description": "Creates a report object with the netmiko results.",
        "incoming": [
          {
            "$id": "netmikoResult",
            "type": "object",
            "properties": {
              "icode": {
                "type": "string",
                "examples": [
                  "AD%2E200"
                ]
              },
              "response": {
                "type": "object",
                "properties": {
                  "host": {
                    "type": "string",
                    "examples": [
                      "snjintionrtr002"
                    ]
                  },
                  "commands": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "show environment"
                      ]
                    },
                    "$id": "commands"
                  },
                  "status": {
                    "type": "string",
                    "examples": [
                      "SUCCESS"
                    ]
                  },
                  "response": {
                    "type": "object",
                    "properties": {
                      "show environment": {
                        "type": "string",
                        "examples": [
                          "\nNumber of Critical alarms:  0\nNumber of Major alarms:     0\nNumber of Minor alarms:     0\n\n Slot        Sensor          Current State   Reading        Threshold(Minor,Major,Critical,Shutdown)\n ----------  --------------  --------------- ------------   ---------------------------------------\n P0          Vin             Normal          206   V AC   \tna\n P0          Iin             Normal          2     A      \tna\n P0          Vout            Normal          12    V AC   \tna\n P0          Iout            Normal          28    A      \tna\n P0          Temp1           Normal          23    Celsius\t(na ,na ,na ,na )(Celsius)\n P0          Temp2           Normal          29    Celsius\t(na ,na ,na ,na )(Celsius)\n P0          Temp3           Normal          29    Celsius\t(na ,na ,na ,na )(Celsius)\n P1          Vin             Normal          206   V AC   \tna\n P1          Iin             Normal          2     A      \tna\n P1          Vout            Normal          12    V AC   \tna\n P1          Iout            Normal          29    A      \tna\n P1          Temp1           Normal          23    Celsius\t(na ,na ,na ,na )(Celsius)\n P1          Temp2           Normal          29    Celsius\t(na ,na ,na ,na )(Celsius)\n P1          Temp3           Normal          30    Celsius\t(na ,na ,na ,na )(Celsius)\n P2          Vin             Normal          206   V AC   \tna\n P2          Iin             Normal          2     A      \tna\n P2          Vout            Normal          12    V AC   \tna\n P2          Iout            Normal          29    A      \tna\n P2          Temp1           Normal          23    Celsius\t(na ,na ,na ,na )(Celsius)\n P2          Temp2           Normal          28    Celsius\t(na ,na ,na ,na )(Celsius)\n P2          Temp3           Normal          31    Celsius\t(na ,na ,na ,na )(Celsius)\n P3          Vin             Normal          206   V AC   \tna\n P3          Iin             Normal          2     A      \tna\n P3          Vout            Normal          12    V AC   \tna\n P3          Iout            Normal          29    A      \tna\n P3          Temp1           Normal          23    Celsius\t(na ,na ,na ,na )(Celsius)\n P3          Temp2           Normal          28    Celsius\t(na ,na ,na ,na )(Celsius)\n P3          Temp3           Normal          29    Celsius\t(na ,na ,na ,na )(Celsius)\n P6          Temp1           Normal          31    Celsius\t(na ,na ,na ,na )(Celsius)\n P6          Temp: FC PWM1   Fan Speed 45%   20    Celsius\t(26 ,36 ,46 )(Celsius)\n P7          Temp1           Normal          30    Celsius\t(na ,na ,na ,na )(Celsius)\n P7          Temp: FC PWM1   Fan Speed 45%   20    Celsius\t(26 ,36 ,46 )(Celsius)\n P8          Temp1           Normal          28    Celsius\t(na ,na ,na ,na )(Celsius)\n P8          Temp: FC PWM1   Fan Speed 45%   20    Celsius\t(26 ,36 ,46 )(Celsius)\n R0          V1: VMA         Normal          1196  mV     \tna\n R0          V1: VMB         Normal          2495  mV     \tna\n R0          V1: VMC         Normal          3286  mV     \tna\n R0          V1: VMD         Normal          2490  mV     \tna\n R0          V1: VME         Normal          1791  mV     \tna\n R0          V1: VMF         Normal          1523  mV     \tna\n R0          V1: 12v         Normal          11835 mV     \tna\n R0          V1: VDD         Normal          3286  mV     \tna\n R0          V1: GP1         Normal          891   mV     \tna\n R0          V1: GP2         Normal          1191  mV     \tna\n R0          V2: VMA         Normal          1049  mV     \tna\n R0          V2: VMB         Normal          1098  mV     \tna\n R0          V2: VMD         Normal          996   mV     \tna\n R0          V2: VME         Normal          1098  mV     \tna\n R0          V2: VMF         Normal          1000  mV     \tna\n R0          V2: 12v         Normal          11850 mV     \tna\n R0          V2: VDD         Normal          3291  mV     \tna\n R0          V2: GP1         Normal          2497  mV     \tna\n R0          V2: GP2         Normal          1193  mV     \tna\n R0          Temp: Outlet    Normal          25    Celsius\t(55 ,65 ,75 ,100)(Celsius)\n R0          Temp: CPU AIR   Normal          27    Celsius\t(55 ,65 ,75 ,100)(Celsius)\n R0          Temp: Inlet     Normal          20    Celsius\t(45 ,55 ,65 ,72 )(Celsius)\n R0          Temp: SCBY AIR  Normal          37    Celsius\t(55 ,65 ,75 ,100)(Celsius)\n R0          Temp: MCH DIE   Normal          48    Celsius\t(80 ,85 ,90 ,100)(Celsius)\n R0          Temp: MCH AIR   Normal          34    Celsius\t(55 ,65 ,75 ,100)(Celsius)\n R0          Temp: C2D C0    Normal          33    Celsius\t(80 ,85 ,90 ,100)(Celsius)\n R0          Temp: C2D C1    Normal          35    Celsius\t(80 ,85 ,90 ,100)(Celsius)\n R1          V1: VMA         Normal          1196  mV     \tna\n R1          V1: VMB         Normal          2495  mV     \tna\n R1          V1: VMC         Normal          3291  mV     \tna\n R1          V1: VMD         Normal          2495  mV     \tna\n R1          V1: VME         Normal          1796  mV     \tna\n R1          V1: VMF         Normal          1528  mV     \tna\n R1          V1: 12v         Normal          11835 mV     \tna\n R1          V1: VDD         Normal          3286  mV     \tna\n R1          V1: GP1         Normal          895   mV     \tna\n R1          V1: GP2         Normal          1196  mV     \tna\n R1          V2: VMA         Normal          1044  mV     \tna\n R1          V2: VMB         Normal          1093  mV     \tna\n R1          V2: VMD         Normal          996   mV     \tna\n R1          V2: VME         Normal          1093  mV     \tna\n R1          V2: VMF         Normal          996   mV     \tna\n R1          V2: 12v         Normal          11821 mV     \tna\n R1          V2: VDD         Normal          3286  mV     \tna\n R1          V2: GP1         Normal          2497  mV     \tna\n R1          V2: GP2         Normal          1196  mV     \tna\n R1          Temp: Outlet    Normal          26    Celsius\t(55 ,65 ,75 ,100)(Celsius)\n R1          Temp: CPU AIR   Normal          28    Celsius\t(55 ,65 ,75 ,100)(Celsius)\n R1          Temp: Inlet     Normal          20    Celsius\t(45 ,55 ,65 ,72 )(Celsius)\n R1          Temp: SCBY AIR  Normal          35    Celsius\t(55 ,65 ,75 ,100)(Celsius)\n R1          Temp: MCH DIE   Normal          50    Celsius\t(80 ,85 ,90 ,100)(Celsius)\n R1          Temp: MCH AIR   Normal          35    Celsius\t(55 ,65 ,75 ,100)(Celsius)\n R1          Temp: C2D C0    Normal          33    Celsius\t(80 ,85 ,90 ,100)(Celsius)\n R1          Temp: C2D C1    Normal          37    Celsius\t(80 ,85 ,90 ,100)(Celsius)\n 2           V1: VMA         Normal          1103  mV     \tna\n 2           V1: VMB         Normal          1201  mV     \tna\n 2           V1: VMC         Normal          1499  mV     \tna\n 2           V1: VMD         Normal          1796  mV     \tna\n 2           V1: VME         Normal          2495  mV     \tna\n 2           V1: VMF         Normal          3295  mV     \tna\n 2           V1: 12v         Normal          11879 mV     \tna\n 2           V1: VDD         Normal          3286  mV     \tna\n 2           V1: GP1         Normal          749   mV     \tna\n 2           V1: GP2         Normal          895   mV     \tna\n 2           V2: VMB         Normal          996   mV     \tna\n 2           V2: VME         Normal          751   mV     \tna\n 2           V2: VMF         Normal          751   mV     \tna\n 2           V2: 12v         Normal          11894 mV     \tna\n 2           V2: VDD         Normal          3286  mV     \tna\n 2           V2: GP2         Normal          749   mV     \tna\n 2           Temp: Left      Normal          26    Celsius\t(55 ,65 ,72 ,100)(Celsius)\n 2           Temp: Center    Normal          31    Celsius\t(55 ,65 ,72 ,100)(Celsius)\n 2           Temp: Asic1     Normal          44    Celsius\t(120,120,130,140)(Celsius)\n 2           Temp: Right     Normal          29    Celsius\t(55 ,65 ,72 ,100)(Celsius)\n F0          VSeq1: VSENSE0  Normal          7000  mV     \tna\n F0          VSeq1: VSENSE1  Normal          5000  mV     \tna\n F0          VSeq1: VSENSE2  Normal          3300  mV     \tna\n F0          VSeq1: VSENSE3  Normal          1500  mV     \tna\n F0          VSeq1: VSENSE4  Normal          1799  mV     \tna\n F0          VSeq1: VSENSE5  Normal          999   mV     \tna\n F0          VSeq1: VSENSE6  Normal          1049  mV     \tna\n F0          VSeq1: VSENSE7  Normal          1000  mV     \tna\n F0          VSeq1: VIN      Normal          11953 mV     \tna\n F0          VSeq2: VSENSE0  Normal          1501  mV     \tna\n F0          VSeq2: VSENSE1  Normal          1499  mV     \tna\n F0          VSeq2: VSENSE2  Normal          1099  mV     \tna\n F0          VSeq2: VSENSE3  Normal          1500  mV     \tna\n F0          VSeq2: VSENSE4  Normal          1500  mV     \tna\n F0          VSeq2: VSENSE5  Normal          1100  mV     \tna\n F0          VSeq2: VSENSE6  Normal          1100  mV     \tna\n F0          VSeq2: VSENSE7  Normal          1200  mV     \tna\n F0          VSeq2: VIN      Normal          11968 mV     \tna\n F0          VSeq3: VSENSE1  Normal          914   mV     \tna\n F0          VSeq3: VSENSE2  Normal          1099  mV     \tna\n F0          VSeq3: VSENSE3  Normal          955   mV     \tna\n F0          VSeq3: VSENSE4  Normal          750   mV     \tna\n F0          VSeq3: VSENSE5  Normal          750   mV     \tna\n F0          VSeq3: VSENSE6  Normal          750   mV     \tna\n F0          VSeq3: VSENSE7  Normal          748   mV     \tna\n F0          VSeq3: VIN      Normal          11968 mV     \tna\n F0          Temp: Mid Left  Normal          31    Celsius\t(65 ,75 ,85 ,110)(Celsius)\n F0          Temp: OctS0Die  Normal          34    Celsius\t(110,120,130,140)(Celsius)\n F0          Temp: Out Left  Normal          33    Celsius\t(65 ,75 ,85 ,110)(Celsius)\n F0          Temp: OctS1Die  Normal          39    Celsius\t(110,120,130,140)(Celsius)\n F0          Temp: FrontMid  Normal          23    Celsius\t(55 ,65 ,75 ,100)(Celsius)\n F0          Temp: Center    Normal          29    Celsius\t(65 ,70 ,80 ,110)(Celsius)\n F0          Temp: CPU Die   Normal          31    Celsius\t(110,120,130,140)(Celsius)\n F0          Temp: AstroDie  Normal          70    Celsius\t(110,120,130,140)(Celsius)\n F0          VSeq1: VSENSE0  Normal          7000  mV     \tna\n F0          VSeq1: VSENSE1  Normal          5000  mV     \tna\n F0          VSeq1: VSENSE2  Normal          3265  mV     \tna\n F0          VSeq1: VSENSE3  Normal          2500  mV     \tna\n F0          VSeq1: VSENSE4  Normal          1004  mV     \tna\n F0          VSeq1: VSENSE5  Normal          1004  mV     \tna\n F0          VSeq1: VSENSE6  Normal          1041  mV     \tna\n F0          VSeq1: VSENSE7  Normal          1005  mV     \tna\n F0          VSeq1: VIN      Normal          11890 mV     \tna\n F0          VSeq2: VSENSE0  Normal          1501  mV     \tna\n F0          VSeq2: VSENSE1  Normal          1498  mV     \tna\n F0          VSeq2: VSENSE2  Normal          1501  mV     \tna\n F0          VSeq2: VSENSE3  Normal          1499  mV     \tna\n F0          VSeq2: VSENSE4  Normal          1500  mV     \tna\n F0          VSeq2: VSENSE5  Normal          1199  mV     \tna\n F0          VSeq2: VSENSE6  Normal          999   mV     \tna\n F0          VSeq2: VSENSE7  Normal          1000  mV     \tna\n F0          VSeq2: VIN      Normal          11890 mV     \tna\n F0          VSeq3: VSENSE0  Normal          850   mV     \tna\n F0          VSeq3: VSENSE1  Normal          849   mV     \tna\n F0          VSeq3: VSENSE2  Normal          999   mV     \tna\n F0          VSeq3: VSENSE3  Normal          744   mV     \tna\n F0          VSeq3: VSENSE4  Normal          1499  mV     \tna\n F0          VSeq3: VSENSE5  Normal          1503  mV     \tna\n F0          VSeq3: VSENSE6  Normal          1500  mV     \tna\n F0          VSeq3: VSENSE7  Normal          1501  mV     \tna\n F0          VSeq3: VIN      Normal          11875 mV     \tna\n F0          Temp: RghtFrnt  Normal          30    Celsius\t(65 ,75 ,85 ,110)(Celsius)\n F0          Temp: Y2 Die    Normal          56    Celsius\t(110,120,130,140)(Celsius)\n F0          Temp: RghtRear  Normal          32    Celsius\t(65 ,75 ,85 ,110)(Celsius)\n F0          Temp: Y3 Die    Normal          58    Celsius\t(110,120,130,140)(Celsius)\n F0          Temp: LeftFrnt  Normal          24    Celsius\t(65 ,75 ,85 ,110)(Celsius)\n F0          Temp: Y1 Die    Normal          55    Celsius\t(110,120,130,140)(Celsius)\n F0          Temp: LeftRear  Normal          34    Celsius\t(65 ,75 ,85 ,110)(Celsius)\n F0          Temp: Y0 Die    Normal          53    Celsius\t(110,120,130,140)(Celsius)\n F1          VSeq1: VSENSE0  Normal          7000  mV     \tna\n F1          VSeq1: VSENSE1  Normal          4999  mV     \tna\n F1          VSeq1: VSENSE2  Normal          3299  mV     \tna\n F1          VSeq1: VSENSE3  Normal          1500  mV     \tna\n F1          VSeq1: VSENSE4  Normal          1799  mV     \tna\n F1          VSeq1: VSENSE5  Normal          999   mV     \tna\n F1          VSeq1: VSENSE6  Normal          1050  mV     \tna\n F1          VSeq1: VSENSE7  Normal          999   mV     \tna\n F1          VSeq1: VIN      Normal          11953 mV     \tna\n F1          VSeq2: VSENSE0  Normal          1500  mV     \tna\n F1          VSeq2: VSENSE1  Normal          1499  mV     \tna\n F1          VSeq2: VSENSE2  Normal          1099  mV     \tna\n F1          VSeq2: VSENSE3  Normal          1499  mV     \tna\n F1          VSeq2: VSENSE4  Normal          1500  mV     \tna\n F1          VSeq2: VSENSE5  Normal          1100  mV     \tna\n F1          VSeq2: VSENSE6  Normal          1099  mV     \tna\n F1          VSeq2: VSENSE7  Normal          1199  mV     \tna\n F1          VSeq2: VIN      Normal          11953 mV     \tna\n F1          VSeq3: VSENSE1  Normal          913   mV     \tna\n F1          VSeq3: VSENSE2  Normal          1099  mV     \tna\n F1          VSeq3: VSENSE3  Normal          955   mV     \tna\n F1          VSeq3: VSENSE4  Normal          750   mV     \tna\n F1          VSeq3: VSENSE5  Normal          750   mV     \tna\n F1          VSeq3: VSENSE6  Normal          749   mV     \tna\n F1          VSeq3: VSENSE7  Normal          748   mV     \tna\n F1          VSeq3: VIN      Normal          11968 mV     \tna\n F1          Temp: Mid Left  Normal          30    Celsius\t(65 ,75 ,85 ,110)(Celsius)\n F1          Temp: OctS0Die  Normal          34    Celsius\t(110,120,130,140)(Celsius)\n F1          Temp: Out Left  Normal          31    Celsius\t(65 ,75 ,85 ,110)(Celsius)\n F1          Temp: OctS1Die  Normal          36    Celsius\t(110,120,130,140)(Celsius)\n F1          Temp: FrontMid  Normal          23    Celsius\t(55 ,65 ,75 ,100)(Celsius)\n F1          Temp: Center    Normal          29    Celsius\t(65 ,70 ,80 ,110)(Celsius)\n F1          Temp: CPU Die   Normal          32    Celsius\t(110,120,130,140)(Celsius)\n F1          Temp: AstroDie  Normal          70    Celsius\t(110,120,130,140)(Celsius)\n F1          VSeq1: VSENSE0  Normal          6998  mV     \tna\n F1          VSeq1: VSENSE1  Normal          4999  mV     \tna\n F1          VSeq1: VSENSE2  Normal          3269  mV     \tna\n F1          VSeq1: VSENSE3  Normal          2500  mV     \tna\n F1          VSeq1: VSENSE4  Normal          1041  mV     \tna\n F1          VSeq1: VSENSE5  Normal          1041  mV     \tna\n F1          VSeq1: VSENSE6  Normal          1041  mV     \tna\n F1          VSeq1: VSENSE7  Normal          1042  mV     \tna\n F1          VSeq1: VIN      Normal          11890 mV     \tna\n F1          VSeq2: VSENSE0  Normal          1499  mV     \tna\n F1          VSeq2: VSENSE1  Normal          1501  mV     \tna\n F1          VSeq2: VSENSE2  Normal          1500  mV     \tna\n F1          VSeq2: VSENSE3  Normal          1500  mV     \tna\n F1          VSeq2: VSENSE4  Normal          1500  mV     \tna\n F1          VSeq2: VSENSE5  Normal          1200  mV     \tna\n F1          VSeq2: VSENSE6  Normal          1000  mV     \tna\n F1          VSeq2: VSENSE7  Normal          999   mV     \tna\n F1          VSeq2: VIN      Normal          11859 mV     \tna\n F1          VSeq3: VSENSE0  Normal          849   mV     \tna\n F1          VSeq3: VSENSE1  Normal          849   mV     \tna\n F1          VSeq3: VSENSE2  Normal          1000  mV     \tna\n F1          VSeq3: VSENSE3  Normal          744   mV     \tna\n F1          VSeq3: VSENSE4  Normal          1498  mV     \tna\n F1          VSeq3: VSENSE5  Normal          1502  mV     \tna\n F1          VSeq3: VSENSE6  Normal          1503  mV     \tna\n F1          VSeq3: VSENSE7  Normal          1502  mV     \tna\n F1          VSeq3: VIN      Normal          11875 mV     \tna\n F1          Temp: RghtFrnt  Normal          29    Celsius\t(65 ,75 ,85 ,110)(Celsius)\n F1          Temp: Y2 Die    Normal          56    Celsius\t(110,120,130,140)(Celsius)\n F1          Temp: RghtRear  Normal          30    Celsius\t(65 ,75 ,85 ,110)(Celsius)\n F1          Temp: Y3 Die    Normal          58    Celsius\t(110,120,130,140)(Celsius)\n F1          Temp: LeftFrnt  Normal          24    Celsius\t(65 ,75 ,85 ,110)(Celsius)\n F1          Temp: Y1 Die    Normal          57    Celsius\t(110,120,130,140)(Celsius)\n F1          Temp: LeftRear  Normal          32    Celsius\t(65 ,75 ,85 ,110)(Celsius)\n F1          Temp: Y0 Die    Normal          53    Celsius\t(110,120,130,140)(Celsius)\n 0           VDEV0: VX1      Normal          1047  mV     \tna\n 0           VDEV0: VX2      Normal          7056  mV     \tna\n 0           VDEV0: VX3      Normal          743   mV     \tna\n 0           VDEV0: VP1      Normal          1487  mV     \tna\n 0           VDEV0: VP2      Normal          3288  mV     \tna\n 0           VDEV0: VP3      Normal          2489  mV     \tna\n 0           VDEV0: VH       Normal          11956 mV     \tna\n 0           VDEV1: VP1      Normal          1806  mV     \tna\n 0           VDEV1: VP2      Normal          1505  mV     \tna\n 0           VDEV1: VP3      Normal          3285  mV     \tna\n 0           VDEV1: VH       Normal          11940 mV     \tna\n 0           VDEV2: VX1      Normal          988   mV     \tna\n 0           VDEV2: VX2      Normal          991   mV     \tna\n 0           VDEV2: VX3      Normal          749   mV     \tna\n 0           VDEV2: VP1      Normal          1195  mV     \tna\n 0           VDEV2: VP2      Normal          1505  mV     \tna\n 0           VDEV2: VP3      Normal          1811  mV     \tna\n 0           VDEV2: VH       Normal          11951 mV     \tna\n 0           VDEV3: VX1      Normal          739   mV     \tna\n 0           VDEV3: VX2      Normal          986   mV     \tna\n 0           VDEV3: VX3      Normal          903   mV     \tna\n 0           VDEV3: VP1      Normal          3296  mV     \tna\n 0           VDEV3: VP2      Normal          1488  mV     \tna\n 0           VDEV3: VP3      Normal          994   mV     \tna\n 0           VDEV3: VH       Normal          11935 mV     \tna\n 0           Temp: Inlet Lf  Normal          31    Celsius\t(75 ,80 ,85 ,100)(Celsius)\n 0           Temp: Inlet Ct  Normal          34    Celsius\t(75 ,80 ,85 ,100)(Celsius)\n 0           Temp: Inlet Rt  Normal          30    Celsius\t(75 ,80 ,85 ,100)(Celsius)\n 0           Iin             Normal          8870  mA     \tna\n 0           E0I             Normal          697   mA     \tna\n 0           E1I             Normal          2462  mA     \tna\n 1           VDEV0: VX1      Normal          1047  mV     \tna\n 1           VDEV0: VX2      Normal          7077  mV     \tna\n 1           VDEV0: VX3      Normal          746   mV     \tna\n 1           VDEV0: VP1      Normal          1494  mV     \tna\n 1           VDEV0: VP2      Normal          3299  mV     \tna\n 1           VDEV0: VP3      Normal          2494  mV     \tna\n 1           VDEV0: VH       Normal          11945 mV     \tna\n 1           VDEV1: VP1      Normal          1802  mV     \tna\n 1           VDEV1: VP2      Normal          1501  mV     \tna\n 1           VDEV1: VP3      Normal          3283  mV     \tna\n 1           VDEV1: VH       Normal          11961 mV     \tna\n 1           VDEV2: VX1      Normal          987   mV     \tna\n 1           VDEV2: VX2      Normal          989   mV     \tna\n 1           VDEV2: VX3      Normal          751   mV     \tna\n 1           VDEV2: VP1      Normal          1197  mV     \tna\n 1           VDEV2: VP2      Normal          1506  mV     \tna\n 1           VDEV2: VP3      Normal          1810  mV     \tna\n 1           VDEV2: VH       Normal          11940 mV     \tna\n 1           VDEV3: VX1      Normal          740   mV     \tna\n 1           VDEV3: VX2      Normal          992   mV     \tna\n 1           VDEV3: VX3      Normal          902   mV     \tna\n 1           VDEV3: VP1      Normal          3299  mV     \tna\n 1           VDEV3: VP2      Normal          1490  mV     \tna\n 1           VDEV3: VP3      Normal          996   mV     \tna\n 1           VDEV3: VH       Normal          11935 mV     \tna\n 1           Temp: Inlet Lf  Normal          30    Celsius\t(75 ,80 ,85 ,100)(Celsius)\n 1           Temp: Inlet Ct  Normal          31    Celsius\t(75 ,80 ,85 ,100)(Celsius)\n 1           Temp: Inlet Rt  Normal          29    Celsius\t(75 ,80 ,85 ,100)(Celsius)\n 1           Iin             Normal          8076  mA     \tna\n 1           E0I             Normal          684   mA     \tna\n 1           E1I             Normal          2413  mA     \tna\n\n"
                        ]
                      },
                      "show version": {
                        "type": "string",
                        "examples": [
                          "Cisco IOS XE Software, Version 17%2E06%2E04\nCisco IOS Software [Bengaluru], ASR1000 Software (X86_64_LINUX_IOSD-UNIVERSALK9-M), Version 17%2E6%2E4, RELEASE SOFTWARE (fc1)\nTechnical Support: http://www%2Ecisco%2Ecom/techsupport\nCopyright (c) 1986-2022 by Cisco Systems, Inc%2E\nCompiled Sun 14-Aug-22 08:52 by mcpre\n\n\nCisco IOS-XE software, Copyright (c) 2005-2022 by cisco Systems, Inc%2E\nAll rights reserved%2E  Certain components of Cisco IOS-XE software are\nlicensed under the GNU General Public License (\"GPL\") Version 2%2E0%2E  The\nsoftware code licensed under GPL Version 2%2E0 is free software that comes\nwith ABSOLUTELY NO WARRANTY%2E  You can redistribute and/or modify such\nGPL code under the terms of GPL Version 2%2E0%2E  For more details, see the\ndocumentation or \"License Notice\" file accompanying the IOS-XE software,\nor the applicable URL provided on the flyer accompanying the IOS-XE\nsoftware%2E\n\n\nROM: IOS-XE ROMMON\n\nsnjintionrtr002 uptime is 1 day, 14 hours, 41 minutes\nUptime for this control processor is 1 day, 14 hours, 45 minutes\nSystem returned to ROM by PowerOn at 03:45:21 GMT Tue Nov 1 2022\nSystem restarted at 06:02:53 GMT Thu Jan 26 2023\nSystem image file is \"harddisk:/asr1000rpx86-universalk9.17.06.04.SPA.bin\"\nLast reload reason: PowerOn\n\n\n\nThis product contains cryptographic features and is subject to United\nStates and local country laws governing import, export, transfer and\nuse%2E Delivery of Cisco cryptographic products does not imply\nthird-party authority to import, export, distribute or use encryption%2E\nImporters, exporters, distributors and users are responsible for\ncompliance with U%2ES%2E and local country laws%2E By using this product you\nagree to comply with applicable laws and regulations%2E If you are unable\nto comply with U%2ES%2E and local laws, return this product immediately%2E\n\nA summary of U%2ES%2E laws governing Cisco cryptographic products may be found at:\nhttp://www%2Ecisco%2Ecom/wwl/export/crypto/tool/stqrg%2Ehtml\n\nIf you require further assistance please contact us by sending email to\nexport@cisco%2Ecom%2E\n\nLicense Type: Smart License is permanent\nLicense Level: advipservices\nNext reload license Level: advipservices\n\nSmart Licensing Status: Registration Not Applicable/Not Applicable\n\ncisco ASR1009-X (RP2) processor (revision RP2) with 9886187K/6147K bytes of memory%2E\nProcessor board ID FXS2204Q3YD\nRouter operating mode: Autonomous\n23 Ten Gigabit Ethernet interfaces\n4 Forty Gigabit Ethernet interfaces\n32768K bytes of non-volatile configuration memory%2E\n16777216K bytes of physical memory%2E\n1884159K bytes of eUSB flash at bootflash:%2E\n78085207K bytes of SATA hard disk at harddisk:%2E\n\nConfiguration register is 0x2102\n"
                        ]
                      }
                    },
                    "required": []
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "resultsObject",
            "type": "object"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              {},
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "netmikoResult",
              "ptr": "/response/commands"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "netmikoResult",
              "ptr": "/response/host"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/3/value"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "resultsObject",
              "ptr": ""
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "netmikoResult",
              "ptr": "/response/status"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/4/value"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": "string",
                "examples": [
                  "show environment"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "show environment"
                  ]
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_host": {
                    "type": "string",
                    "examples": [
                      "snjintionrtr002"
                    ]
                  },
                  "1_status": {
                    "type": "string",
                    "examples": [
                      "SUCCESS"
                    ]
                  }
                },
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_1",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [
                  null,
                  " ",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_host"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/1_status"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 6
            },
            "id": "ƒ_reduce_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2023-02-06T00:02:39.590Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T19:10:22.453Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "63e056aabe82950afcced64a",
        "name": "createResultObject",
        "description": "Creates a default report object with the default \"FAILURE\" set for each command. This is used in case the netmiko command errors so parents can see that the device/cmds failed.",
        "incoming": [
          {
            "$id": "commands",
            "type": "array"
          },
          {
            "$id": "device",
            "type": "string"
          }
        ],
        "outgoing": [
          {
            "$id": "resultsObject",
            "type": "object"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              {},
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "commands",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "device",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/3/value"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "resultsObject",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_device": {
                    "$id": "device",
                    "type": "string"
                  }
                },
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_1",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  "FAILURE"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [
                  null,
                  " ",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_device"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 6
            },
            "id": "ƒ_reduce_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2023-02-06T01:23:54.197Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T19:11:47.838Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "61575550f19f3400ded634bd",
        "name": "convertObjecttoStringGithubSingleRepo",
        "description": "Separates the action, filePath, and content from the inputted object.",
        "incoming": [
          {
            "$id": "inputObject",
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "examples": [
                  "Create"
                ]
              },
              "file_path": {
                "type": "string",
                "examples": [
                  "bundles/transformations/filterArrayOfObjects%2Ejson"
                ]
              },
              "content": {
                "type": "string",
                "examples": [
                  "{\n  \"_id\": \"5f08c8b5fd7aaf755869ff35\",\n  \"name\": \"filterArrayOfObjects\",\n  \"incoming\": [\n    {\n      \"$id\": \"filterableArray\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {},\n        \"required\": [],\n        \"additionalProperties\": true\n      }\n    },\n    {\n      \"$id\": \"keyToFilterOn\",\n      \"type\": \"string\",\n      \"default\": \"keyToFilterOn\",\n      \"examples\": [\n        \"keyToFilterOn\"\n      ]\n    },\n    {\n      \"$id\": \"valueToFind\",\n      \"type\": \"string\",\n      \"default\": \"valueToFind\",\n      \"examples\": [\n        \"valueToFind\"\n      ]\n    },\n    {\n      \"$id\": \"discardMatching\",\n      \"type\": \"boolean\",\n      \"examples\": [\n        true,\n        false\n      ]\n    }\n  ],\n  \"outgoing\": [\n    {\n      \"$id\": \"filteredArray\",\n      \"type\": \"array\"\n    },\n    {\n      \"$id\": \"firstFilteredElement\",\n      \"type\": \"object\",\n      \"properties\": {},\n      \"required\": []\n    }\n  ],\n  \"steps\": [\n    {\n      \"id\": 6,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"incoming\",\n        \"name\": \"filterableArray\",\n        \"ptr\": \"\"\n      },\n      \"to\": {\n        \"location\": \"method\",\n        \"name\": 1,\n        \"ptr\": \"/args/0/value\"\n      }\n    },\n    {\n      \"id\": 7,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"incoming\",\n        \"name\": \"keyToFilterOn\",\n        \"ptr\": \"\"\n      },\n      \"to\": {\n        \"location\": \"method\",\n        \"name\": 1,\n        \"ptr\": \"/args/2/value\"\n      }\n    },\n    {\n      \"id\": 8,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"incoming\",\n        \"name\": \"valueToFind\",\n        \"ptr\": \"\"\n      },\n      \"to\": {\n        \"location\": \"method\",\n        \"name\": 1,\n        \"ptr\": \"/args/3/value\"\n      }\n    },\n    {\n      \"id\": 9,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"incoming\",\n        \"name\": \"discardMatching\",\n        \"ptr\": \"\"\n      },\n      \"to\": {\n        \"location\": \"method\",\n        \"name\": 1,\n        \"ptr\": \"/args/4/value\"\n      }\n    },\n    {\n      \"id\": 1,\n      \"type\": \"method\",\n      \"library\": \"Array\",\n      \"method\": \"filter\",\n      \"args\": [\n        null,\n        \"ƒ_query_1\",\n        null,\n        null,\n        null\n      ],\n      \"view\": {\n        \"row\": 1,\n        \"col\": 1\n      }\n    },\n    {\n      \"id\": 3,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"method\",\n        \"name\": 1,\n        \"ptr\": \"/return\"\n      },\n      \"to\": {\n        \"location\": \"method\",\n        \"name\": 2,\n        \"ptr\": \"/args/0/value\"\n      }\n    },\n    {\n      \"id\": 5,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"method\",\n        \"name\": 1,\n        \"ptr\": \"/return\"\n      },\n      \"to\": {\n        \"location\": \"outgoing\",\n        \"name\": \"filteredArray\",\n        \"ptr\": \"\"\n      }\n    },\n    {\n      \"id\": 2,\n      \"type\": \"method\",\n      \"library\": \"Array\",\n      \"method\": \"getIndex\",\n      \"args\": [\n        null,\n        0\n      ],\n      \"view\": {\n        \"row\": 2,\n        \"col\": 2\n      }\n    },\n    {\n      \"id\": 4,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"method\",\n        \"name\": 2,\n        \"ptr\": \"/return\"\n      },\n      \"to\": {\n        \"location\": \"outgoing\",\n        \"name\": \"firstFilteredElement\",\n        \"ptr\": \"\"\n      }\n    }\n  ],\n  \"functions\": [\n    {\n      \"incoming\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {},\n          \"required\": [],\n          \"additionalProperties\": true,\n          \"$id\": \"element\"\n        },\n        {\n          \"title\": \"index\",\n          \"type\": \"number\",\n          \"$id\": \"index\"\n        },\n        {\n          \"$id\": \"array\",\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {},\n            \"required\": [],\n            \"additionalProperties\": true\n          }\n        },\n        {\n          \"$id\": \"thisArg\",\n          \"type\": \"object\",\n          \"properties\": {\n            \"keyToFilterOn\": {\n              \"$id\": \"keyToFilterOn\",\n              \"type\": \"string\",\n              \"default\": \"keyToFilterOn\",\n              \"examples\": [\n                \"keyToFilterOn\"\n              ]\n            },\n            \"valueToFind\": {\n              \"$id\": \"valueToFind\",\n              \"type\": \"string\",\n              \"default\": \"valueToFind\",\n              \"examples\": [\n                \"valueToFind\"\n              ]\n            },\n            \"discardMatching\": {\n              \"$id\": \"discardMatching\",\n              \"type\": \"boolean\",\n              \"examples\": [\n                true,\n                false\n              ]\n            }\n          },\n          \"isContext\": true\n        }\n      ],\n      \"outgoing\": [\n        {\n          \"title\": \"return\",\n          \"type\": \"boolean\",\n          \"$id\": \"return\"\n        }\n      ],\n      \"functions\": [],\n      \"name\": \"ƒ_query_1\",\n      \"steps\": [\n        {\n          \"id\": 2,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"incoming\",\n            \"name\": \"element\",\n            \"ptr\": \"\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 1,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 3,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"incoming\",\n            \"name\": \"thisArg\",\n            \"ptr\": \"/keyToFilterOn\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 1,\n            \"ptr\": \"/args/1/value\"\n          }\n        },\n        {\n          \"id\": 15,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"incoming\",\n            \"name\": \"thisArg\",\n            \"ptr\": \"/discardMatching\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 14,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 31,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"incoming\",\n            \"name\": \"thisArg\",\n            \"ptr\": \"/discardMatching\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 10,\n            \"ptr\": \"/args/1/value\"\n          }\n        },\n        {\n          \"id\": 34,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"incoming\",\n            \"name\": \"thisArg\",\n            \"ptr\": \"/valueToFind\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 32,\n            \"ptr\": \"/args/1/value\"\n          }\n        },\n        {\n          \"id\": 14,\n          \"type\": \"method\",\n          \"library\": \"Logical\",\n          \"method\": \"not\",\n          \"args\": [\n            null\n          ],\n          \"view\": {\n            \"row\": 2,\n            \"col\": 2\n          }\n        },\n        {\n          \"id\": 1,\n          \"type\": \"method\",\n          \"library\": \"Object\",\n          \"method\": \"getProperty\",\n          \"args\": [\n            null,\n            null\n          ],\n          \"view\": {\n            \"row\": 1,\n            \"col\": 1\n          }\n        },\n        {\n          \"id\": 30,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 14,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 7,\n            \"ptr\": \"/args/1/value\"\n          }\n        },\n        {\n          \"id\": 33,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 1,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 32,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 32,\n          \"type\": \"method\",\n          \"library\": \"Equality\",\n          \"method\": \"deepEquals\",\n          \"args\": [\n            null,\n            null\n          ],\n          \"view\": {\n            \"row\": 1,\n            \"col\": 2\n          }\n        },\n        {\n          \"id\": 35,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 32,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 7,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 36,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 32,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 22,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 22,\n          \"type\": \"method\",\n          \"library\": \"Logical\",\n          \"method\": \"not\",\n          \"args\": [\n            null\n          ],\n          \"view\": {\n            \"row\": 1,\n            \"col\": 3\n          }\n        },\n        {\n          \"id\": 24,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 22,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 10,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 7,\n          \"type\": \"method\",\n          \"library\": \"Logical\",\n          \"method\": \"and\",\n          \"args\": [\n            null,\n            null\n          ],\n          \"view\": {\n            \"row\": 2,\n            \"col\": 3\n          }\n        },\n        {\n          \"id\": 10,\n          \"type\": \"method\",\n          \"library\": \"Logical\",\n          \"method\": \"and\",\n          \"args\": [\n            null,\n            null\n          ],\n          \"view\": {\n            \"row\": 3,\n            \"col\": 3\n          }\n        },\n        {\n          \"id\": 27,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 7,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 26,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 28,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 10,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 26,\n            \"ptr\": \"/args/1/value\"\n          }\n        },\n        {\n          \"id\": 26,\n          \"type\": \"method\",\n          \"library\": \"Logical\",\n          \"method\": \"or\",\n          \"args\": [\n            null,\n            null\n          ],\n          \"view\": {\n            \"row\": 2,\n            \"col\": 4\n          }\n        },\n        {\n          \"id\": 29,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 26,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"outgoing\",\n            \"name\": \"return\",\n            \"ptr\": \"\"\n          }\n        }\n      ],\n      \"view\": {\n        \"col\": 4,\n        \"row\": 5\n      },\n      \"id\": \"ƒ_query_1\",\n      \"comments\": []\n    }\n  ],\n  \"comments\": [],\n  \"view\": {\n    \"col\": 3,\n    \"row\": 6\n  },\n  \"created\": \"2021-03-10T20:41:21.443Z\",\n  \"createdBy\": {\n    \"_id\": \"601424815f970e44a97f394a\",\n    \"provenance\": \"local_aaa\",\n    \"username\": \"admin@pronghorn\"\n  },\n  \"lastUpdated\": \"2021-03-10T20:41:21.443Z\",\n  \"lastUpdatedBy\": {\n    \"_id\": \"601424815f970e44a97f394a\",\n    \"provenance\": \"local_aaa\",\n    \"username\": \"admin@pronghorn\"\n  }\n}"
                ]
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "action",
            "type": "string",
            "examples": [
              "Action"
            ]
          },
          {
            "$id": "filePath",
            "type": "string",
            "examples": [
              "filePath"
            ]
          },
          {
            "$id": "content",
            "type": "string",
            "examples": [
              "content"
            ]
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "inputObject",
              "ptr": "/action"
            },
            "to": {
              "location": "outgoing",
              "name": "action",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "inputObject",
              "ptr": "/file_path"
            },
            "to": {
              "location": "outgoing",
              "name": "filePath",
              "ptr": ""
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "inputObject",
              "ptr": "/content"
            },
            "to": {
              "location": "outgoing",
              "name": "content",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 0,
          "row": 5
        },
        "created": "2023-02-02T21:16:19.493Z",
        "createdBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "lastUpdated": "2023-02-27T19:02:38.195Z",
        "lastUpdatedBy": {
          "_id": "6192b69c3adad129b3c1881c",
          "provenance": "Itential-Okta",
          "username": "nick.andreano@itential.com"
        },
        "version": "3.17.7-2021.1.22",
        "tags": []
      }
    }
  ],
  "readme": "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n\n<!-- Update the below line with your Pre-Built name -->\n# Pre-Built Name\n\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n* [Additional Information](#additional-information)\n\n## Overview\n\n<!-- Write a few sentences about the Pre-Built and explain the use case(s) -->\n<!-- Avoid using the word Artifact. Please use Pre-Built, Pre-Built Transformation or Pre-Built Automation -->\n<!-- Ex.: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments -->\n<!-- (e.g. from Dev to Pre-Production or from Lab to Production). -->\n\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitLab -->\n<!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW -->\n<!--\n<table><tr><td>\n  <img src=\"NickAOrg/runhub/-/raw/refs/heads/main/images/workflow.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n-->\n<!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->\n\n<!-- ADD ESTIMATED RUN TIME HERE -->\n<!-- e.g. Estimated Run Time: 34 min. -->\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n<!-- Include any other required apps or adapters in this list -->\n<!-- Ex.: EC2 Adapter -->\n* Itential Automation Platform\n  * `^2021.1`\n\n## Requirements\n\nThis Pre-Built requires the following:\n\n<!-- Unordered list highlighting the requirements of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * cisco ios device -->\n<!-- * Ansible or NSO (with F5 NED) * -->\n\n## Features\n\nThe main benefits and features of the Pre-Built are outlined below.\n\n<!-- Unordered list highlighting the most exciting features of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * Automatically checks for device type -->\n<!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n\n\n## Future Enhancements\n\n<!-- OPTIONAL - Mention if the Pre-Built will be enhanced with additional features on the road map -->\n<!-- Ex.: This Pre-Built would support Cisco XR and F5 devices -->\n\n## How to Install\n\nTo install the Pre-Built:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the Pre-Built. \n* The Pre-Built can be installed from within App-Admin_Essential. Simply search for the name of your desired Pre-Built and click the install button (as shown below).\n\n<!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n<!--\n<table><tr><td>\n  <img src=\"NickAOrg/runhub/-/raw/refs/heads/main/images/install.png\" alt=\"install\" width=\"600px\">\n</td></tr></table>\n-->\n<!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n\n<!-- OPTIONAL - Explain if external components are required outside of IAP -->\n<!-- Ex.: The Ansible roles required for this Pre-Built can be found in the repository located at https://gitlab.com/itentialopensource/pre-built-automations/hello-world -->\n\n## How to Run\n\nUse the following to run the Pre-Built:\n\n<!-- Explain the main entrypoint(s) for this Pre-Built: Automation Catalog item, Workflow, Postman, etc. -->\n\n## Additional Information\n\nPlease use your Itential Customer Success account if you need support when using this Pre-Built."
}